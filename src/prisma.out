Initializing identifier
Creating Model
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         (None, 200)               0         
_________________________________________________________________
embedding_1 (Embedding)      (None, 200, 32)           2304      
_________________________________________________________________
lstm_1 (LSTM)                (None, 200)               186400    
_________________________________________________________________
dense_1 (Dense)              (None, 8)                 1608      
_________________________________________________________________
dense_2 (Dense)              (None, 1)                 9         
=================================================================
Total params: 190,321
Trainable params: 190,321
Non-trainable params: 0
_________________________________________________________________
Loading weights
/home/vitormelo/poc/scrapper/repos/prisma/
Separating File: types.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/types.ts,79,0,0,0
Separating File: index.ts
${sentryKey}@sentry.io/${sentryId}`).install() - 1
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/index.ts,164,3,2,1
Separating File: TestOut.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/system/TestOut.ts,36,1,1,0
Separating File: FileSystemResolver.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/system/FileSystemResolver.ts,31,0,0,0
Separating File: StdOut.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/system/StdOut.ts,40,1,1,0
Separating File: TestResolver.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/system/TestResolver.ts,60,6,6,0
Separating File: api.ts
await fetch(systemAPIEndpoint, { - 1
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/api/api.ts,221,1,0,1
Separating File: TestAuthServer.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/api/TestAuthServer.ts,10,0,0,0
Separating File: GraphcoolAuthServer.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/api/GraphcoolAuthServer.ts,56,0,0,0
Separating File: constants.ts
Networking & URLs - 1
console.graph.cool/token/?token=${token}${projectName ? `&redirect=/${encodeURIComponent(projectName)}` : ''}` - 1
${projectFileContent.replace(/\r?\n/g, '\n      ')} - 1
api.graph.cool/relay/v1/${projectId}\n` - 1
Terminal output: export - 1
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/utils/constants.ts,149,21,16,5
Separating File: file.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/utils/file.ts,71,2,2,0
Separating File: usage.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/utils/usage.ts,95,0,0,0
Separating File: system.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/utils/system.ts,7,0,0,0
Separating File: utils.ts
export function onError(e: Error, reportToSentry: boolean = true) { - 1
if (reportToSentry) { - 1
Raven.captureException(e) - 1
const errorMessage = `Error: ${e.message}` - 1
if (e.stack && !e.stack.startsWith(errorMessage!)) { - 1
console.error(`${chalk.red(figures.cross)}  Error: ${errorMessage}\n`) - 1
debug(e.stack) - 1
} else { - 1
const errorLines = e.stack!.split('\n') - 1
const firstErrorLine = errorLines[0] - 1
console.error(`${chalk.red(figures.cross)}  ${firstErrorLine}`) - 1
debug(e.stack) - 1
console.error(`\n${setDebugMessage}\n${contactUsInSlackMessage}`) - 1
process.exit(1) - 1
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/utils/utils.ts,29,15,1,14
Separating File: endpoints.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/endpoints.ts,42,2,2,0
Separating File: console.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/console.ts,47,2,2,0
Separating File: push.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/push.ts,110,6,6,0
Separating File: export.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/export.ts,62,2,2,0
Separating File: projects.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/projects.ts,33,0,0,0
Separating File: init.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/init.ts,90,2,2,0
Separating File: interactiveInit.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/interactiveInit.ts,115,0,0,0
Separating File: pull.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/pull.ts,105,3,3,0
Separating File: auth.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/src/commands/auth.ts,34,0,0,0
Separating File: push.test.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/tests/push.test.ts,92,13,13,0
Separating File: pull.test.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/tests/pull.test.ts,185,23,23,0
Separating File: auth.test.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/tests/auth.test.ts,77,11,11,0
Separating File: export.test.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/tests/export.test.ts,58,8,8,0
Separating File: init.test.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/tests/init.test.ts,137,21,21,0
Separating File: mockData.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/tests/mock_data/mockData.ts,250,2,2,0
Separating File: schemas.ts
prisma,v0.0.3,/home/vitormelo/poc/scrapper/repos/prisma/tests/mock_data/schemas.ts,26,0,0,0
Separating File: requests.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/requests.js,40,0,0,0
Separating File: init.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/test/init.js,5,0,0,0
Separating File: BufferedConsole.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/BufferedConsole.ts,37,1,1,0
Separating File: getConsoleOutput.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/getConsoleOutput.ts,32,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/index.ts,163,0,0,0
Separating File: examples.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/examples.ts,197,7,7,0
Separating File: LocalInvoker.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/LocalInvoker.ts,94,2,2,0
Separating File: util.ts
export const playgroundURL = (token: string, projectName: string) => - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/util.ts,18,6,5,1
Separating File: mock-requests.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/test/mock-requests.ts,86,0,0,0
Separating File: InvalidTargetError.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/errors/InvalidTargetError.ts,7,0,0,0
Separating File: ServiceDoesntExistError.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/errors/ServiceDoesntExistError.ts,5,0,0,0
Separating File: types.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/types.ts,17,0,0,0
Separating File: Validator.test.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/Validator.test.ts,439,0,0,0
Separating File: Importer.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/Importer.ts,195,0,0,0
Separating File: Validator.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/Validator.ts,374,1,1,0
Separating File: index.ts
continue - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/index.ts,52,1,0,1
Separating File: Importer.describe.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/Importer.describe.ts,23,0,0,0
Separating File: makeData.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/fixtures/basic/makeData.ts,78,0,0,0
Separating File: Normalizer.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/import/normalizers/Normalizer.ts,1,0,0,0
Separating File: Exporter.describe.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/export/Exporter.describe.ts,13,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/export/index.ts,45,0,0,0
Separating File: Exporter.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/export/Exporter.ts,107,0,0,0
Separating File: add-template.ts
g, - 1
github.com/${repoName}/tree/master/${ - 1
this.out.log( - 1
`   ${chalk.green(figures.tick)} You now can run ${chalk.bold( - 1
'graphcool deploy', - 1
)} to deploy changes`, - 1
github.com/${ - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/add-template/add-template.ts,299,12,5,7
Separating File: getbin.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/add-template/getbin.ts,26,0,0,0
Separating File: index.ts
if (template) { - 1
const projectDefinition = examples[template] - 1
if (!projectDefinition) { - 1
this.out.error(`${template} is not a valid template`) - 1
this.definition.set(projectDefinition) - 1
const newDefinition = await this.interactiveInit() - 1
value: 'example', - 1
name: [ - 1
`${chalk.bold('Based on example')}`, - 1
`  Creates a new Graphcool service based on an example`, - 1
'', - 1
].join('\n'), - 1
}, - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/init/index.ts,247,15,2,13
Separating File: index.test.ts
'-t', - 1
'blank', - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/init/index.test.ts,15,2,0,2
Separating File: restart.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/restart.ts,19,0,0,0
Separating File: Docker.ts
localfaas:${FUNCTIONS_PORT}`, - 1
${this.hostName}:${FUNCTIONS_PORT}`, - 1
localhost:${customVars.PORT}`, - 1
localhost:${customVars.FUNCTIONS_PORT}`, - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/Docker.ts,181,5,1,4
Separating File: up.test.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/up.test.ts,22,0,0,0
Separating File: stop.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/stop.ts,19,0,0,0
Separating File: eject.ts
const isWin = true - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/eject.ts,46,1,0,1
Separating File: up.ts
${hostName}:${PORT}` - 1
${hostName}:${FUNCTIONS_PORT}` - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/up.ts,77,2,0,2
Separating File: pull.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/pull.ts,19,0,0,0
Separating File: ps.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/ps.ts,19,0,0,0
Separating File: up.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/local/nocks/up.ts,32,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/clusters/index.ts,64,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/console/index.ts,26,0,0,0
Separating File: reset.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/reset/reset.ts,35,0,0,0
Separating File: index.ts
await this.auth.ensureAuth() - 1
?endpoint=${this.env.simpleEndpoint( - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/playground/index.ts,36,2,0,2
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/info/index.ts,59,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/account/index.ts,13,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/list/index.ts,13,0,0,0
Separating File: local.ts
static command = 'local' - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/invoke/local.ts,183,4,3,1
Separating File: index.ts
continue - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/example-command/index.ts,18,1,0,1
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/root-token/index.ts,63,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/auth/index.ts,41,1,1,0
Separating File: index.ts
console.graph.cool/${encodeURIComponent(info.name)}/settings/general`) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/index.ts,495,15,14,1
Separating File: index.test.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/index.test.ts,39,0,0,0
Separating File: emptyDefinition.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/emptyDefinition.ts,14,0,0,0
Separating File: default_definition.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/nocks/default_definition.ts,134,7,7,0
Separating File: local_instance.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/nocks/local_instance.ts,113,7,7,0
Separating File: hello.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/test-project/src/hello.js,7,0,0,0
Separating File: TypescriptBuilder.ts
async getFileNames() { - 1
return globby(['.js', '.ts', '!node_modules', '!node_modules'], {cwd: this.buildDir}) - 1
const fileNames = await this.getFileNames() - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/Bundler/TypescriptBuilder.ts,64,4,1,3
Separating File: Bundler.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/Bundler/Bundler.ts,211,0,0,0
Separating File: byline.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/Bundler/proxies/byline.js,133,32,32,0
Separating File: lambda.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/Bundler/proxies/lambda.js,74,1,1,0
Separating File: dev.js
function infinite() { - 1
setTimeout(infinite, 100000) - 1
infinite() - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/deploy/Bundler/proxies/dev.js,119,5,2,3
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/delete/index.ts,87,0,0,0
Separating File: function.ts
const styleLog = (l: string) => { - 1
const logs = this.lambdaToArray(l) - 1
let potentialJson = l.slice(62).trim() - 1
try { - 1
potentialJson = JSON.parse(potentialJson) - 1
} catch (e) { - 1
return { - 1
[l.slice(0, 24)]: potentialJson, - 1
if (json.logs) { - 1
json.logs = flatMap(json.logs.map(this.lambdaToArray)).map(styleLog) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-core/src/commands/logs/function.ts,166,12,2,10
Separating File: typings.d.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/typings.d.ts,4,0,0,0
Separating File: requests.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/requests.js,0,0,0,0
Separating File: init.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/test/init.js,5,0,0,0
Separating File: hello.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/test/test-project/src/hello.js,7,0,0,0
Separating File: global.d.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/typings/global.d.ts,7,1,1,0
Separating File: Help.ts
TODO: command (cmd: Class<Command<>>): string { - 1
TODO: commandLine (cmd: Class<Command<>>): [string, ?string] { - 1
TODO renderFlags (flags: [string, Flag][]): string { - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Help.ts,127,4,1,3
Separating File: fs.ts
if (process.env.NODE_ENV === 'test') { - 1
reset() - 1
const fs = process.env.NODE_ENV === 'test' ? memfs : fse - 1
export function reset() { - 1
vol.reset() - 1
vol.fromJSON({ - 1
'test.out': '' - 1
}, process.cwd()) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/fs.ts,16,9,1,8
Separating File: Auth.ts
valid = await this.validateAuthToken(token) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Auth.ts,130,2,1,1
Separating File: NotFound.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/NotFound.ts,53,2,2,0
Separating File: Command.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Command.ts,142,2,2,0
Separating File: Environment.describer.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Environment.describer.ts,22,2,2,0
Separating File: CLI.test.ts
test('runs the version command', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['graphcool', 'version'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.code).toBe(0) - 1
}) - 1
test('errors with invalid arguments', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['graphcool', 'version', '--invalid-flag'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.message).toContain('Unexpected argument --invalid-flag') - 1
}) - 1
test('errors when command not found', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['graphcool', 'foobar12345'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
if (!err.code) { - 1
throw err - 1
expect(err.code).toEqual(127) - 1
}) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/CLI.test.ts,86,26,0,26
Separating File: Environment.test.ts
test('throws when cluster does not exist', async () => { - 1
const env = makeEnvironment() - 1
const localFile = ` - 1
platformToken: 'secret-token' - 1
targets: - 1
env.loadRCs(localFile, null) - 1
await expect(env.out.stderr.output).toMatch(/Could not find cluster local defined for target dev in/) - 1
}) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Environment.test.ts,119,16,8,8
Separating File: Config.ts
Paths - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Config.ts,215,7,6,1
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/index.ts,36,0,0,0
Separating File: Environment.ts
if (copy.targets) { - 1
copy.targets = this.serializeTargets(copy.targets) - 1
serializeTargets(targets: Targets) { - 1
return mapValues<Target, string>(targets, t => `${t.cluster}/${t.id}`) - 1
${localAddr}:${localPort}/subscriptions/v1/${projectId}` - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Environment.ts,649,23,18,5
Separating File: Parser.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Parser.ts,127,6,6,0
Separating File: Parser.test.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Parser.test.ts,139,1,1,0
Separating File: Command.test.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Command.test.ts,61,1,1,0
Separating File: Config.oldtest.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Config.oldtest.ts,33,0,0,0
Separating File: StatusChecker.ts
doJobs(options.cachePath, options.request) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/StatusChecker.ts,121,3,2,1
Separating File: CLI.ts
if nothing is found, try again with taking what is before : - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/CLI.ts,175,3,2,1
Separating File: util.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/util.ts,62,0,0,0
Separating File: defaultDefinition.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/defaultDefinition.ts,76,0,0,0
Separating File: Topic.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Topic.ts,17,0,0,0
Separating File: mock.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/mock.ts,82,0,0,0
Separating File: check.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/check.ts,3,0,0,0
Separating File: yaml.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/ProjectDefinition/yaml.ts,54,1,1,0
Separating File: ProjectDefinition.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/ProjectDefinition/ProjectDefinition.ts,335,2,2,0
Separating File: Variables.ts
this.fileRefSyntax = RegExp(/^file\((~?[a-zA-Z0-9._\-/]+?)\)/g); - 1
this.cfRefSyntax = RegExp(/^cf:/g); - 1
this.s3RefSyntax = RegExp(/^s3:(.+?)\/(.+)$/); - 1
this.ssmRefSyntax = RegExp(/^ssm:([a-zA-Z0-9_.-/]+)[~]?(true|false)?/); - 1
return property; - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
return this.getValueFromFile(variableString); - 1
} else if (variableString.match(this.cfRefSyntax)) { - 1
return this.getValueFromCf(variableString); - 1
} else if (variableString.match(this.s3RefSyntax)) { - 1
return this.getValueFromS3(variableString); - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
return this.getValueFromSsm(variableString); - 1
getValueFromFile(variableString) { - 1
const matchedFileRefString = variableString.match(this.fileRefSyntax)[0]; - 1
const referencedFileRelativePath = matchedFileRefString - 1
.replace(this.fileRefSyntax, (match, varName) => varName.trim()) - 1
.replace('~', os.homedir()); - 1
const referencedFileFullPath = (path.isAbsolute(referencedFileRelativePath) ? - 1
referencedFileRelativePath : - 1
path.join(this.graphcool.config.servicePath, referencedFileRelativePath)); - 1
let fileExtension = referencedFileRelativePath.split('.'); - 1
fileExtension = fileExtension[fileExtension.length - 1]; - 1
if (!this.graphcool.utils.fileExistsSync(referencedFileFullPath)) { - 1
return BbPromise.resolve(undefined); - 1
let valueToPopulate; - 1
if (fileExtension === 'js') { - 1
const variableArray = variableString.split(':'); - 1
let returnValueFunction; - 1
if (variableArray[1]) { - 1
let jsModule = variableArray[1]; - 1
jsModule = jsModule.split('.')[0]; - 1
returnValueFunction = jsFile[jsModule]; - 1
} else { - 1
returnValueFunction = jsFile; - 1
if (typeof returnValueFunction !== 'function') { - 1
throw new this.graphcool.classes - 1
.Error([ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is exporting a function that returns a value.', - 1
].join('')); - 1
valueToPopulate = returnValueFunction.call(jsFile); - 1
return BbPromise.resolve(valueToPopulate).then(valueToPopulateResolved => { - 1
let deepProperties = variableString.replace(matchedFileRefString, ''); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
deepProperties.splice(0, 1); - 1
return this.getDeepValue(deepProperties, valueToPopulateResolved) - 1
.then(deepValueToPopulateResolved => { - 1
if (typeof deepValueToPopulateResolved === 'undefined') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is returning the correct data.', - 1
].join(''); - 1
throw new this.graphcool.classes - 1
.Error(errorMessage); - 1
return BbPromise.resolve(deepValueToPopulateResolved); - 1
}); - 1
}); - 1
if (fileExtension !== 'js') { - 1
valueToPopulate = this.graphcool.utils.readFileSync(referencedFileFullPath); - 1
if (matchedFileRefString !== variableString) { - 1
let deepProperties = variableString - 1
.replace(matchedFileRefString, ''); - 1
if (deepProperties.substring(0, 1) !== ':') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}" sub properties`, - 1
' Please use ":" to reference sub properties.', - 1
].join(''); - 1
throw new this.graphcool.classes - 1
.Error(errorMessage); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
return this.getDeepValue(deepProperties, valueToPopulate); - 1
return BbPromise.resolve(valueToPopulate); - 1
getValueFromCf(variableString) { - 1
const variableStringWithoutSource = variableString.split(':')[1].split('.'); - 1
const stackName = variableStringWithoutSource[0]; - 1
const outputLogicalId = variableStringWithoutSource[1]; - 1
return this.graphcool.getProvider('aws') - 1
.request('CloudFormation', - 1
'describeStacks', - 1
{ StackName: stackName }, - 1
this.options.stage, - 1
this.options.region) - 1
.then(result => { - 1
const outputs = result.Stacks[0].Outputs; - 1
const output = outputs.find(x => x.OutputKey === outputLogicalId); - 1
if (output === undefined) { - 1
const errorMessage = [ - 1
'Trying to request a non exported variable from CloudFormation.', - 1
` Stack name: "${stackName}"`, - 1
` Requested variable: "${outputLogicalId}".`, - 1
].join(''); - 1
throw new this.graphcool.classes - 1
.Error(errorMessage); - 1
return output.OutputValue; - 1
}); - 1
getValueFromS3(variableString) { - 1
const groups = variableString.match(this.s3RefSyntax); - 1
const bucket = groups[1]; - 1
const key = groups[2]; - 1
return this.graphcool.getProvider('aws') - 1
.request('S3', - 1
'getObject', - 1
Bucket: bucket, - 1
Key: key, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => response.Body.toString(), - 1
err => { - 1
const errorMessage = `Error getting value for ${variableString}. ${err.message}`; - 1
throw new this.graphcool.classes.Error(errorMessage); - 1
); - 1
getValueFromSsm(variableString) { - 1
const groups = variableString.match(this.ssmRefSyntax); - 1
const param = groups[1]; - 1
const decrypt = (groups[2] === 'true'); - 1
return this.graphcool.getProvider('aws') - 1
.request('SSM', - 1
'getParameter', - 1
Name: param, - 1
WithDecryption: decrypt, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => BbPromise.resolve(response.Parameter.Value), - 1
err => { - 1
const expectedErrorMessage = `Parameter ${param} not found.`; - 1
if (err.message !== expectedErrorMessage) { - 1
throw new this.graphcool.classes.Error(err.message); - 1
return BbPromise.resolve(undefined); - 1
); - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
varType = 'file'; - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
varType = 'SSM parameter'; - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/ProjectDefinition/Variables.ts,420,146,5,141
Separating File: builtin-modules.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/ProjectDefinition/builtin-modules.ts,35,0,0,0
Separating File: fsToProject.ts
if (definition.modules) { - 1
for (const moduleName of Object.keys(definition.modules)) { - 1
const modulePath = definition.modules[moduleName] - 1
const resolvedModulePath = path.join(inputDir, modulePath) - 1
const module = await fsToModule(resolvedModulePath, out, moduleName, args) - 1
modules.push({ - 1
...module, - 1
name: moduleName, - 1
}) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/ProjectDefinition/fsToProject.ts,216,10,1,9
Separating File: projectToFs.ts
if (!silent) { - 1
out.log(chalk.blue(`Written to graphcool.yml\n`)) - 1
if (!silent) { - 1
out.log(chalk.blue(`Written to ${relativePath}\n`)) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/ProjectDefinition/projectToFs.ts,37,5,1,4
Separating File: number.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Flags/number.ts,7,0,0,0
Separating File: string.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Flags/string.ts,7,0,0,0
Separating File: boolean.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Flags/boolean.ts,7,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Flags/index.ts,22,0,0,0
Separating File: Dispatcher.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Dispatcher/Dispatcher.ts,115,3,3,0
Separating File: migration.ts
group types, - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/migration.ts,97,1,0,1
Separating File: Prompter.ts
Ctrl-c - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/Prompter.ts,113,3,2,1
Separating File: spinners.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/spinners.ts,738,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/index.ts,400,4,4,0
Separating File: table.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/table.ts,130,17,17,0
Separating File: StreamOutput.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/StreamOutput.ts,60,1,1,0
Separating File: util.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/util.ts,13,0,0,0
Separating File: subtle.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/subtle.ts,149,4,4,0
Separating File: ActionBase.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/actions/ActionBase.ts,83,1,1,0
Separating File: SimpleAction.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/actions/SimpleAction.ts,44,1,1,0
Separating File: screen.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/actions/screen.ts,15,0,0,0
Separating File: SpinnerAction.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Output/actions/SpinnerAction.ts,78,0,0,0
Separating File: Client.ts
if (process.env.NODE_ENV === 'test') { - 1
Client.prototype.mock = function({ request, response }) { - 1
if (!this.mocks) { - 1
this.mocks = {} - 1
this.mocks[JSON.stringify(request, null, 2)] = response - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Client/Client.ts,707,13,8,5
Separating File: ping.ts
dynamodb.${region.toLowerCase().replace(/_/g, '-')}.amazonaws.com` - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Client/ping.ts,36,1,0,1
Separating File: RequiredFlagError.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/errors/RequiredFlagError.ts,5,0,0,0
Separating File: PromptMaskError.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/errors/PromptMaskError.ts,1,0,0,0
Separating File: EnvDoesntExistError.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/errors/EnvDoesntExistError.ts,5,0,0,0
Separating File: ExitError.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/errors/ExitError.ts,7,0,0,0
Separating File: rc.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/types/rc.ts,29,0,0,0
Separating File: common.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/types/common.ts,129,2,2,0
Separating File: Plugin.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/Plugin.ts,80,1,1,0
Separating File: CorePlugins.ts
if (this.config.pjson.main) { - 1
if main is set in package.json, add plugin as self - 1
plugins.push(new PluginPath({output: this.out, type: 'core', path: this.config.root})) - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/CorePlugins.ts,37,6,3,3
Separating File: Manager.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/Manager.ts,26,1,1,0
Separating File: Cache.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/Cache.ts,184,1,1,0
Separating File: BuiltInPlugins.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/BuiltInPlugins.ts,13,2,2,0
Separating File: Lock.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/Lock.ts,42,7,7,0
Separating File: rwlockfile.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/rwlockfile.ts,234,15,15,0
Separating File: Plugins.ts
linked: LinkedPlugins - 1
user: UserPlugins - 1
this.linked = new LinkedPlugins(this) - 1
this.user = new UserPlugins(this) - 1
this.linked, - 1
this.user, - 1
async install(name: string, tag: string = 'latest') { - 1
const downgrade = await this.lock.upgrade() - 1
await this.load() - 1
if (this.plugins.find(p => p.name === name && p.tag === tag)) { - 1
throw new Error(`Plugin ${name} is already installed`) - 1
const path = await this.user.install(name, tag) - 1
this.clearCache(path) - 1
await downgrade() - 1
async update() { - 1
if (this.user.list().length === 0) return - 1
this.out.action.start(`${this.config.name}: Updating plugins`) - 1
let downgrade = await this.lock.upgrade() - 1
await this.user.update() - 1
this.clearCache(...(await this.user.list()).map(p => p.path)) - 1
await downgrade() - 1
async uninstall(name: string) { - 1
await this.load() - 1
let plugin = this.plugins.filter(p => ['user', 'link'].includes(p.type)).find(p => p.name === name) - 1
if (!plugin) throw new Error(`${name} is not installed`) - 1
let downgrade = await this.lock.upgrade() - 1
switch (plugin.type) { - 1
case 'user': { - 1
if (!this.config.debug) this.out.action.start(`Uninstalling plugin ${name}`) - 1
await this.user.remove(name) - 1
break - 1
case 'link': { - 1
if (!this.config.debug) this.out.action.start(`Unlinking plugin ${name}`) - 1
this.linked.remove(plugin.path) - 1
break - 1
this.clearCache(plugin.path) - 1
await downgrade() - 1
this.out.action.stop() - 1
addPackageToPJSON(name: string, version: string = '') { - 1
this.user.addPackageToPJSON(name, version) - 1
async addLinkedPlugin(p: string) { - 1
let downgrade = await this.lock.upgrade() - 1
await this.load() - 1
await this.linked.add(p) - 1
this.clearCache(p) - 1
await downgrade() - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/Plugins.ts,189,46,0,46
Separating File: PluginPath.ts
process.env.CACHE_REQUIRE_PATHS_FILE = this.config.requireCachePath - 1
require('cache-require-paths') - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/Plugin/PluginPath.ts,185,5,3,2
Separating File: help.ts
const list = groupTopics.map(t => [ - 1
t.id, - 1
t.description ? chalk.dim(t.description) : null, - 1
]) - 1
console.log(cmds) - 1
if (t.id === 'local') { - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/commands/help.ts,164,9,3,6
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/commands/index.ts,10,0,0,0
Separating File: version.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli-engine/src/commands/version.ts,9,0,0,0
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/graphcool-cli/src/index.ts,15,0,0,0
Separating File: randomDogImage.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/rest-wrapper/src/randomDogImage.js,11,0,0,0
Separating File: randomSubBreedImage.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/rest-wrapper/src/randomSubBreedImage.js,12,1,1,0
Separating File: randomBreedImage.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/rest-wrapper/src/randomBreedImage.js,12,1,1,0
Separating File: allSubBreeds.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/rest-wrapper/src/allSubBreeds.js,16,1,1,0
Separating File: subBreedImages.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/rest-wrapper/src/subBreedImages.js,16,1,1,0
Separating File: allBreeds.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/rest-wrapper/src/allBreeds.js,18,0,0,0
Separating File: breedImages.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/rest-wrapper/src/breedImages.js,16,1,1,0
Separating File: hello.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/env-variables-in-functions/src/hello.js,10,2,2,0
Separating File: index.js
export const ROOT_TOKEN = '__ROOT_TOKEN__'  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MTAwNjQwMzYsImNsaWVudElkIjoiY2l3ajBkc2V1MGY0bDAxMjJ1NDdzcXE1bSIsInByb2plY3RJZCI6ImNqOXBvN2M4dDFncHUwMTQ1cmtpOGxmdnciLCJwZXJtYW5lbnRBdXRoVG9rZW5JZCI6ImNqOXBwNHpsNjJvNXkwMTQ1emh4aXdwZ2gifQ.VFem0gkCIRFDjMv71z1zH1BCyXJ26rPua679LtBu2vg - 1
const SERVICE_ID = '__SERVICE_ID__'  cj9po7c8t1gpu0145rki8lfvw - 1
const userResult = await mergeInfo.delegate('query', 'User', { id: authenticateResult.id }, context, info) - 1
return - 1
const userResult = await mergeInfo.delegate('query', 'User', { id: signupResult.id }, context, info) - 1
return - 1
const userResult = await mergeInfo.delegate('query', 'User', { id: authenticateResult.id }, context, info) - 1
return - 1
return - 1
return - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/typescript-gateway-auth/gateway/index.js,192,27,17,10
Separating File: loggedInUser.js
return - 1
return - 1
return - 1
return - 1
return - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/typescript-gateway-auth/gateway/loggedInUser.js,81,9,4,5
Separating File: authenticate.js
return - 1
return - 1
return - 1
return - 1
return - 1
return - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/typescript-gateway-auth/gateway/authenticate.js,91,12,6,6
Separating File: signup.js
return - 1
return - 1
return - 1
return - 1
return - 1
return - 1
return - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/typescript-gateway-auth/gateway/signup.js,114,14,7,7
Separating File: index.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/typescript-gateway-custom-schema/gateway/index.ts,61,7,7,0
Separating File: hey.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/yaml-variables/src/hey.js,9,1,1,0
Separating File: hello.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/yaml-variables/src/hello.js,8,0,0,0
Separating File: authenticate.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/full-example/src/email-password/authenticate.ts,52,4,4,0
Separating File: signup.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/full-example/src/email-password/signup.ts,71,4,4,0
Separating File: loggedInUser.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/full-example/src/email-password/loggedInUser.ts,41,3,3,0
Separating File: setOrderItem.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/full-example/src/checkout/setOrderItem.ts,153,2,2,0
Separating File: pay.ts
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/full-example/src/checkout/pay.ts,197,3,3,0
Separating File: seed.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/full-example/src/scripts/seed.js,23,0,0,0
Separating File: index.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/node-gateway-custom-schema/gateway/index.js,65,7,7,0
Separating File: createFirstArticle.js
event = { - 1
"data": { - 1
"User": { - 1
"node": { - 1
"id": "cj8wscby6nl7u0133zu7c8a62" - 1
"name": "Sarah" - 1
}, - 1
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/subscriptions/src/createFirstArticle.js,36,16,9,7
Separating File: loggedInUser.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/auth/src/loggedInUser.js,43,4,4,0
Separating File: authenticate.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/auth/src/authenticate.js,57,4,4,0
Separating File: signup.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/auth/src/signup.js,73,3,3,0
Separating File: checkPostCount.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/graphcool-lib/src/checkPostCount.js,28,0,0,0
Separating File: postRandomDogImage.js
prisma,0.11.4,/home/vitormelo/poc/scrapper/repos/prisma/examples/graphcool-lib/src/postRandomDogImage.js,37,0,0,0
Separating File: typings.d.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings.d.ts,4,0,0,0
Separating File: requests.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/requests.js,0,0,0,0
Separating File: init.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/init.js,6,0,0,0
Separating File: hello.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/test-project/src/hello.js,7,0,0,0
Separating File: global.d.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings/global.d.ts,7,1,1,0
Separating File: Help.ts
TODO: command (cmd: Class<Command<>>): string { - 1
TODO: commandLine (cmd: Class<Command<>>): [string, ?string] { - 1
TODO renderFlags (flags: [string, Flag][]): string { - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Help.ts,143,4,1,3
Separating File: fs.ts
if (process.env.NODE_ENV === 'test') { - 1
reset() - 1
const fs = process.env.NODE_ENV === 'test' ? memfs : fse - 1
export function reset() { - 1
vol.reset() - 1
vol.fromJSON({ - 1
'test.out': '' - 1
}, process.cwd()) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/fs.ts,16,9,1,8
Separating File: NotFound.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/NotFound.ts,53,2,2,0
Separating File: Command.ts
import { Auth } from './Auth' - 1
auth: Auth - 1
this.auth = new Auth(this.out, this.config, this.env, this.client) - 1
this.client.setAuth(this.auth) - 1
if (mockDefinition) { - 1
this.definition.set(mockDefinition) - 1
if (mockRC) { - 1
this.env.localRC = mockRC - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.ts,140,10,2,8
Separating File: CLI.test.ts
test('runs the version command', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.code).toBe(0) - 1
}) - 1
test('errors with invalid arguments', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version', '--invalid-flag'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.message).toContain('Unexpected argument --invalid-flag') - 1
}) - 1
test('errors when command not found', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'foobar12345'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
if (!err.code) { - 1
throw err - 1
expect(err.code).toEqual(127) - 1
}) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.test.ts,86,26,0,26
Separating File: Config.ts
Paths - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.ts,234,7,6,1
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/index.ts,28,0,0,0
Separating File: Parser.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.ts,156,6,6,0
Separating File: Parser.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.test.ts,139,1,1,0
Separating File: Command.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.test.ts,61,1,1,0
Separating File: Config.oldtest.ts
import {Config} from './Config' - 1
const mockDotFile = { - 1
"token": "test-token" - 1
describe('config', () => { - 1
test('should init paths correct in subfolder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(os.tmpdir(), `${cuid()}`) - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.definitionDir).toBe(definitionDir) - 1
expect(config.definitionPath).toBe(path.join(definitionDir, 'prisma.yml')) - 1
}) - 1
test('should allow .prismarc file in current folder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(home, 'definition') - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const dotPrismaPath = path.join(definitionDir, '.prismarc') - 1
fs.writeFileSync(dotPrismaPath, JSON.stringify(mockDotFile)) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.localRCPath).toBe(dotPrismaPath) - 1
}) - 1
}) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.oldtest.ts,33,32,4,28
Separating File: StatusChecker.ts
doJobs(options.cachePath, options.request) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/StatusChecker.ts,179,3,2,1
Separating File: CLI.ts
if nothing is found, try again with taking what is before : - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.ts,266,3,2,1
Separating File: util.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/util.ts,71,0,0,0
Separating File: defaultDefinition.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/defaultDefinition.ts,76,0,0,0
Separating File: Topic.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Topic.ts,17,0,0,0
Separating File: mock.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/mock.ts,82,0,0,0
Separating File: check.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/check.ts,3,0,0,0
Separating File: number.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/number.ts,7,0,0,0
Separating File: string.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/string.ts,7,0,0,0
Separating File: boolean.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/boolean.ts,7,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/index.ts,22,0,0,0
Separating File: Dispatcher.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Dispatcher/Dispatcher.ts,115,3,3,0
Separating File: migration.ts
group types, - 1
const groupedByType = groupBy(steps, m => m.type) - 1
Object.keys(groupedByType).forEach(type => { - 1
const typeMessages = groupedByType[type] - 1
this.out.log('\n' + printType(type) + '\n') - 1
const groupedByName = groupBy(typeMessages, m => m.name.split('.')[0]) - 1
Object.keys(groupedByName).forEach(name => { - 1
this.out.log(`  ${chalk.bold(name)}`) - 1
const nameMessages = groupedByName[name] - 1
nameMessages.forEach(this.printMigrationMessage, this) - 1
}) - 1
}) - 1
this.out.log('') - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.ts,263,13,0,13
Separating File: Prompter.ts
Ctrl-c - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/Prompter.ts,113,3,2,1
Separating File: migration.describe.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.describe.ts,8,0,0,0
Separating File: spinners.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/spinners.ts,738,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/index.ts,373,5,5,0
Separating File: table.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/table.ts,134,17,17,0
Separating File: StreamOutput.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/StreamOutput.ts,62,1,1,0
Separating File: util.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/util.ts,13,0,0,0
Separating File: subtle.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/subtle.ts,149,4,4,0
Separating File: steps.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/fixtures/steps.ts,157,0,0,0
Separating File: ActionBase.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/ActionBase.ts,96,1,1,0
Separating File: SimpleAction.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SimpleAction.ts,44,1,1,0
Separating File: screen.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/screen.ts,15,0,0,0
Separating File: SpinnerAction.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SpinnerAction.ts,83,0,0,0
Separating File: Client.ts
if (process.env.NODE_ENV === 'test') { - 1
Client.prototype.mock = function({ request, response }) { - 1
if (!this.mocks) { - 1
this.mocks = {} - 1
this.mocks[JSON.stringify(request, null, 2)] = response - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.ts,878,10,5,5
Separating File: types.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/types.ts,86,7,7,0
Separating File: introspectionQuery.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/introspectionQuery.ts,91,0,0,0
Separating File: Client.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.test.ts,17,0,0,0
Separating File: ping.ts
dynamodb.${region.toLowerCase().replace(/_/g, '-')}.amazonaws.com` - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/ping.ts,36,1,0,1
Separating File: RequiredFlagError.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/RequiredFlagError.ts,5,0,0,0
Separating File: PromptMaskError.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/PromptMaskError.ts,1,0,0,0
Separating File: ExitError.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/ExitError.ts,7,0,0,0
Separating File: CommandReplacedError.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/CommandReplacedError.ts,11,0,0,0
Separating File: isGlobal.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/utils/isGlobal.ts,26,0,0,0
Separating File: rc.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/rc.ts,23,0,0,0
Separating File: common.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/common.ts,120,2,2,0
Separating File: Plugin.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugin.ts,80,1,1,0
Separating File: CorePlugins.ts
if (this.config.pjson.main) { - 1
if main is set in package.json, add plugin as self - 1
plugins.push(new PluginPath({output: this.out, type: 'core', path: this.config.root})) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/CorePlugins.ts,37,6,3,3
Separating File: Manager.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Manager.ts,26,1,1,0
Separating File: Cache.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Cache.ts,188,1,1,0
Separating File: BuiltInPlugins.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/BuiltInPlugins.ts,13,2,2,0
Separating File: Lock.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Lock.ts,42,7,7,0
Separating File: rwlockfile.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/rwlockfile.ts,234,15,15,0
Separating File: Plugins.ts
linked: LinkedPlugins - 1
user: UserPlugins - 1
this.linked = new LinkedPlugins(this) - 1
this.user = new UserPlugins(this) - 1
this.linked, - 1
this.user, - 1
async install(name: string, tag: string = 'latest') { - 1
const downgrade = await this.lock.upgrade() - 1
await this.load() - 1
if (this.plugins.find(p => p.name === name && p.tag === tag)) { - 1
throw new Error(`Plugin ${name} is already installed`) - 1
const path = await this.user.install(name, tag) - 1
this.clearCache(path) - 1
await downgrade() - 1
async update() { - 1
if (this.user.list().length === 0) return - 1
this.out.action.start(`${this.config.name}: Updating plugins`) - 1
let downgrade = await this.lock.upgrade() - 1
await this.user.update() - 1
this.clearCache(...(await this.user.list()).map(p => p.path)) - 1
await downgrade() - 1
async uninstall(name: string) { - 1
await this.load() - 1
let plugin = this.plugins.filter(p => ['user', 'link'].includes(p.type)).find(p => p.name === name) - 1
if (!plugin) throw new Error(`${name} is not installed`) - 1
let downgrade = await this.lock.upgrade() - 1
switch (plugin.type) { - 1
case 'user': { - 1
if (!this.config.debug) this.out.action.start(`Uninstalling plugin ${name}`) - 1
await this.user.remove(name) - 1
break - 1
case 'link': { - 1
if (!this.config.debug) this.out.action.start(`Unlinking plugin ${name}`) - 1
this.linked.remove(plugin.path) - 1
break - 1
this.clearCache(plugin.path) - 1
await downgrade() - 1
this.out.action.stop() - 1
addPackageToPJSON(name: string, version: string = '') { - 1
this.user.addPackageToPJSON(name, version) - 1
async addLinkedPlugin(p: string) { - 1
let downgrade = await this.lock.upgrade() - 1
await this.load() - 1
await this.linked.add(p) - 1
this.clearCache(p) - 1
await downgrade() - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugins.ts,189,46,0,46
Separating File: PluginPath.ts
process.env.CACHE_REQUIRE_PATHS_FILE = this.config.requireCachePath - 1
require('cache-require-paths') - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/PluginPath.ts,185,5,3,2
Separating File: help.ts
const list = groupTopics.map(t => [ - 1
t.id, - 1
t.description ? chalk.dim(t.description) : null, - 1
]) - 1
console.log(cmds) - 1
if (t.id === 'cluster') { - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/help.ts,173,9,3,6
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/index.ts,10,0,0,0
Separating File: version.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/version.ts,9,0,0,0
Separating File: requests.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/requests.js,40,0,0,0
Separating File: init.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/test/init.js,6,0,0,0
Separating File: BufferedConsole.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/BufferedConsole.ts,37,1,1,0
Separating File: getConsoleOutput.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/getConsoleOutput.ts,32,0,0,0
Separating File: index.ts
import Auth from './commands/auth/index' - 1
import Console from './commands/console' - 1
import Delete from './commands/delete/index' - 1
import RootTokens from './commands/root-token/index' - 1
import FunctionLogs from './commands/logs/function' - 1
import PsLocal from './commands/local/ps' - 1
Auth, - 1
Auth, - 1
Console, - 1
RootTokens, - 1
FunctionLogs, - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/index.ts,181,15,4,11
Separating File: examples.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/examples.ts,197,7,7,0
Separating File: util.ts
${devPrefix}console.graph.cool/token?token=${token}${ - 1
export const playgroundURL = (token: string, projectName: string) => - 1
managementApiSecret: somesecret - 1
databases: - 1
default: - 1
connector: mysql - 1
active: true - 1
port: 3306 - 1
user: someuser - 1
password: existingpw - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/util.ts,64,16,6,10
Separating File: spawn.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/spawn.ts,32,0,0,0
Separating File: getTmpDir.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/getTmpDir.ts,9,0,0,0
Separating File: mock-requests.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-requests.ts,86,0,0,0
Separating File: mock-client.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-client.ts,21,0,0,0
Separating File: writeToStdin.ts
process.stdin.end() - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/writeToStdin.ts,19,1,0,1
Separating File: ServiceDoesntExistError.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/errors/ServiceDoesntExistError.ts,5,0,0,0
Separating File: EndpointDialog.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.test.ts,35,0,0,0
Separating File: getGraphQLCliBin.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/getGraphQLCliBin.ts,22,0,0,0
Separating File: dockerComposeInstalled.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/dockerComposeInstalled.ts,21,0,0,0
Separating File: EndpointDialog.ts
const database = await this.ask({ - 1
message: 'Enter database name (only needed when you already have data)', - 1
key: 'database', - 1
}) - 1
const alreadyData = await this.ask({ - 1
message: 'Do you already have data in the database? (yes/no)', - 1
key: 'alreadyData', - 1
defaultValue: 'no', - 1
validate: value => - 1
['yes', 'no'].includes(value) ? true : 'Please answer either yes or no', - 1
}) - 1
database, - 1
pageSize: 9, - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.ts,529,20,7,13
Separating File: crypto.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/crypto.ts,15,0,0,0
Separating File: types.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/types.ts,17,0,0,0
Separating File: Validator.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.test.ts,439,0,0,0
Separating File: Importer.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.ts,228,0,0,0
Separating File: Validator.ts
this.checkFieldName(node) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.ts,408,3,2,1
Separating File: index.ts
continue - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/index.ts,59,1,0,1
Separating File: Validator.describe.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.describe.ts,10,0,0,0
Separating File: Importer.describe.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.describe.ts,24,0,0,0
Separating File: makeData.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/fixtures/basic/makeData.ts,78,0,0,0
Separating File: Normalizer.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/normalizers/Normalizer.ts,1,0,0,0
Separating File: Exporter.describe.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.describe.ts,14,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/index.ts,60,0,0,0
Separating File: Exporter.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.ts,122,0,0,0
Separating File: introspect.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/introspect/introspect.ts,38,0,0,0
Separating File: inquirer-mock-prompt.ts
inquirer.prompt = promptMock - 1
return inquirer - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/inquirer-mock-prompt.ts,127,15,13,2
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/index.ts,116,2,2,0
Separating File: index.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/index.test.ts,70,1,1,0
Separating File: old.ts
import { Command, flags, Flags, ProjectDefinition } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { defaultDefinition, defaultPjson, examples } from '../../examples' - 1
import { repeat, flatten } from 'lodash' - 1
export default class Init extends Command { - 1
static topic = 'init' - 1
static description = 'Create files for new services' - 1
static group = 'general' - 1
static help = ` - 1
${chalk.green.bold('Examples:')} - 1
${chalk.gray('-')} Initialize a new Prisma service - 1
${chalk.green('$ prisma init')} - 1
static flags: Flags = { - 1
force: flags.boolean({ - 1
char: 'f', - 1
'Initialize even if the folder already contains prisma files', - 1
}), - 1
copy: flags.string({ - 1
char: 'c', - 1
'ID or alias of the service, that the schema should be copied from', - 1
}), - 1
static args = [ - 1
name: 'dirName', - 1
description: 'Folder to initialize in (optional)', - 1
}, - 1
async run() { - 1
const { copy, force } = this.flags - 1
const dirName = this.args!.dirName - 1
if (dirName) { - 1
const newDefinitionPath = path.join(process.cwd(), dirName + '/') - 1
fs.mkdirpSync(newDefinitionPath) - 1
this.config.definitionDir = newDefinitionPath - 1
this.config.localRCPath = path.join(newDefinitionPath, '.prismarc') - 1
const pjson = { - 1
...defaultPjson, - 1
name: path.basename(this.config.definitionDir), - 1
const files = fs.readdirSync(this.config.definitionDir) - 1
if ( - 1
files.length > 0 && - 1
!(files.length === 1 && files[0] === '.prismarc') && - 1
files.includes('prisma.yml') - 1
) { - 1
this.out.log(` - 1
The directory ${chalk.green( - 1
this.config.definitionDir, - 1
)} contains files that could conflict: - 1
${files.map(f => `  ${f}`).join('\n')} - 1
${chalk.bold( - 1
'NOTE:', - 1
)} The behavior of the init command changed, to deploy a project, please use ${chalk.green( - 1
'prisma deploy', - 1
)} - 1
To force the init process in this folder, use ${chalk.green( - 1
'prisma init --force', - 1
)}`) - 1
if (force) { - 1
await this.askForConfirmation(this.config.definitionDir) - 1
} else { - 1
this.out.exit(1) - 1
if (template) { - 1
const projectDefinition = examples[template] - 1
if (!projectDefinition) { - 1
this.out.error(`${template} is not a valid template`) - 1
this.definition.set(projectDefinition) - 1
if (copy) { - 1
const info = await this.client.fetchProjectInfo(copy) - 1
this.definition.set(info.projectDefinition) - 1
if (!this.definition.definition) { - 1
const newDefinition = await this.interactiveInit() - 1
const newDefinition = defaultDefinition - 1
this.definition.set(newDefinition) - 1
let relativeDir = path.relative(process.cwd(), this.config.definitionDir) - 1
relativeDir = relativeDir.length === 0 ? '.' : relativeDir - 1
this.out.action.start( - 1
`Creating a new Prisma service in ${chalk.green(relativeDir)}`, - 1
this.definition.save(undefined, false) - 1
this.out.action.stop() - 1
this.out.log(`${chalk.dim.bold('\nWritten files' + ':')}`) - 1
fs.writeFileSync( - 1
path.join(this.config.definitionDir, 'package.json'), - 1
JSON.stringify(pjson, null, 2), - 1
const createdFiles = flatten( - 1
this.definition.definition!.modules.map(module => - 1
Object.keys(module.files), - 1
), - 1
).concat(['prisma.yml', 'package.json']) - 1
this.out.filesTree(createdFiles) - 1
const cdInstruction = - 1
relativeDir === '.' - 1
? '' - 1
: `To get started, cd into the new directory: - 1
${chalk.green(`cd ${relativeDir}`)} - 1
${chalk.green('prisma deploy')} - 1
${chalk.green('prisma local up')} - 1
${chalk.green('prisma add-template auth/facebook')} - 1
`) - 1
async interactiveInit(): Promise<ProjectDefinition> { - 1
const initQuestion = { - 1
name: 'init', - 1
type: 'list', - 1
message: 'How do you want to start?', - 1
choices: [ - 1
value: 'blank', - 1
name: [ - 1
`${chalk.bold('New blank service')}`, - 1
`  Creates a new Prisma service from scratch.`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'copy', - 1
name: [ - 1
`${chalk.bold('Copying an existing service')}`, - 1
`  Copies a service from your account`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'example', - 1
name: [ - 1
`${chalk.bold('Based on example')}`, - 1
`  Creates a new Prisma service based on an example`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 13, - 1
const { init } = await this.out.prompt([initQuestion]) - 1
switch (init) { - 1
case 'blank': - 1
this.out.up(7) - 1
return defaultDefinition - 1
case 'copy': - 1
await this.auth.ensureAuth() - 1
const projectId = await this.projectSelection() - 1
this.out.up(4) - 1
const info = await this.client.fetchProjectInfo(projectId) - 1
return info.projectDefinition - 1
case 'example': - 1
return await this.exampleSelection() - 1
return null as any - 1
private async projectSelection() { - 1
const projects = await this.client.fetchProjects() - 1
const choices = projects - 1
.map(p => ({ - 1
name: `${p.name} (${p.id})`, - 1
value: p.id, - 1
})) - 1
.concat(new inquirer.Separator(chalk.bold.green(repeat('-', 50)))) - 1
const question = { - 1
name: 'project', - 1
type: 'list', - 1
message: 'Please choose a project', - 1
choices, - 1
pageSize: Math.min(process.stdout.rows!, projects.length) - 2, - 1
const { project } = await this.out.prompt([question]) - 1
return project - 1
private async exampleSelection(): Promise<ProjectDefinition> { - 1
const question = { - 1
name: 'example', - 1
type: 'list', - 1
message: 'Please choose an example', - 1
choices: [ - 1
value: 'instagram', - 1
name: [ - 1
`${chalk.bold('Instagram')}`, - 1
`Contains an instagram clone with permission logic`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'stripe', - 1
name: [ - 1
`${chalk.bold('Stripe Checkout')}`, - 1
`An example integrating the stripe checkout with schema extensions`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'sendgrid', - 1
name: [ - 1
`${chalk.bold('Sendgrid Mails')}`, - 1
`An example that shows how to connect Prisma to the Sendgrid API`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 12, - 1
const { example } = await this.out.prompt(question) - 1
return examples[example] - 1
private async askForConfirmation(folder: string) { - 1
const confirmationQuestion = { - 1
name: 'confirmation', - 1
type: 'input', - 1
message: `Are you sure that you want to init a new service in ${chalk.green( - 1
folder, - 1
)}? y/N`, - 1
default: 'n', - 1
const { confirmation }: { confirmation: string } = await this.out.prompt( - 1
confirmationQuestion, - 1
if (confirmation.toLowerCase().startsWith('n')) { - 1
this.out.exit(0) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/old.ts,247,212,14,198
Separating File: restart.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/restart.ts,19,0,0,0
Separating File: constants.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/constants.ts,2,0,0,0
Separating File: types.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/types.ts,9,0,0,0
Separating File: Docker.ts
${this.hostName}:${this.envVars.PORT}`, - 1
prisma-database:${port}/cluster/schema`, - 1
${this.hostName}:${port}`, - 1
localfaas:${FUNCTIONS_PORT}`, - 1
${ - 1
${this.hostName}:${port}`, - 1
this.out.log(chalk.dim(`$ docker-compose ${argv.join(' ')}\n`)) - 1
docs.docker.com/compose/install/`, - 1
docs.docker.com/compose/install/`, - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/Docker.ts,526,22,13,9
Separating File: upgrade.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/upgrade.ts,29,0,0,0
Separating File: getProcessForPort.ts
stdin (default) - 1
stdout (default) - 1
console.error(e) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/getProcessForPort.ts,59,7,4,3
Separating File: up.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/up.test.ts,22,0,0,0
Separating File: stop.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/stop.ts,23,0,0,0
Separating File: eject.ts
static group = 'local' - 1
const isWin = true - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/eject.ts,52,2,0,2
Separating File: logs.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/logs.ts,21,0,0,0
Separating File: nuke.ts
this.out.action.start(`Nuking local prisma cluster`) - 1
this.out.action.stop(prettyTime(Date.now() - before)) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/nuke.ts,25,2,0,2
Separating File: up.ts
${showInit && `  ${chalk.green('$ prisma init')}\n`}  ${chalk.green( - 1
'$ prisma deploy', - 1
)} - 1
`) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/up.ts,41,5,1,4
Separating File: ps.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/ps.ts,26,0,0,0
Separating File: up.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/local/nocks/up.ts,32,0,0,0
Separating File: token.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/token.ts,39,0,0,0
Separating File: cluster-token.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/cluster-token.ts,36,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/console/index.ts,13,1,1,0
Separating File: reset.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/reset/reset.ts,66,0,0,0
Separating File: index.ts
g, '0') - 1
?cwd=${ - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/playground/index.ts,73,2,0,2
Separating File: seed.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/seed.ts,28,0,0,0
Separating File: Seeder.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/Seeder.ts,145,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/info/index.ts,95,0,0,0
Separating File: list.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/cluster/list.ts,21,0,0,0
Separating File: logs.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/cluster/logs.ts,32,0,0,0
Separating File: add.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/cluster/add.ts,61,0,0,0
Separating File: remove.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/cluster/remove.ts,54,0,0,0
Separating File: account.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/account/account.ts,13,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/list/index.ts,71,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init-prisma/index.ts,8,1,1,0
Separating File: index.ts
const { id } = await this.env.getTarget(stage) - 1
continue - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/example-command/index.ts,18,2,0,2
Separating File: index.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
export default class Auth extends Command { - 1
static topic = 'login' - 1
static description = 'Login or signup to the Prisma Platform' - 1
static group = 'platform' - 1
static help = ` - 1
${chalk.green('Examples:')} - 1
${chalk.gray('-')} Authenticate using the browser - 1
${chalk.green('$ prisma login')} - 1
${chalk.green('$ prisma login -t <token>')} - 1
static flags: Flags = { - 1
token: flags.string({ - 1
char: 'T', - 1
description: 'System token', - 1
}), - 1
async run() { - 1
const { token } = this.flags - 1
if (token) { - 1
this.out.log('Using token from --token flag') - 1
this.auth.setToken(token) - 1
const alreadyAuthenticated = await this.auth.ensureAuth() - 1
if (token) { - 1
this.env.setToken(token) - 1
this.env.saveGlobalRC() - 1
this.out.log( - 1
`Saved new token to ${chalk.bold(this.config.globalRCPath)}`, - 1
} else if (alreadyAuthenticated) { - 1
this.out.log( - 1
`You are already authenticated. Your local token is saved at ${chalk.bold( - 1
this.config.globalRCPath, - 1
)}`, - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/auth/index.ts,43,35,3,32
Separating File: getSchemaPathFromConfig.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.ts,22,1,1,0
Separating File: getSchemaPathFromConfig.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.test.ts,15,0,0,0
Separating File: index.ts
if (clusterMatch[2] && cliMatch[2]) { - 1
const secondarySatisfied = semver.satisfies( - 1
cliMatch[2], - 1
`~${clusterMatch[2]}`, - 1
if (!secondarySatisfied) { - 1
throw error - 1
this.out.migrati - 1
const clusters = this.env.clusters.filter(c => !c.shared && !c.isPrivate) - 1
const clusterNames: string[][] = clusters.map(c => { - 1
const note = - 1
c.baseUrl.includes('localhost') || c.baseUrl.includes('127.0.0.1') - 1
? 'Local cluster (requires Docker)' - 1
: 'Self-hosted' - 1
return [c.name, note] - 1
}) - 1
if (clusterNames.length === 0) { - 1
clusterNames.push(['local', 'Local cluster (requires Docker)']) - 1
return clusterNames - 1
const workspaces = await this.client.getWorkspaces() - 1
const clusters = this.env.clusters.filter( - 1
c => c.shared && c.name !== 'shared-public-demo', - 1
bit.ly/prisma-graphql-deployment`, - 1
bit.ly/prisma-graphql-deployment`, - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/index.ts,689,41,18,23
Separating File: index.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/index.test.ts,46,0,0,0
Separating File: emptyDefinition.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/emptyDefinition.ts,14,0,0,0
Separating File: getbin.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getbin.ts,26,0,0,0
Separating File: printSchema.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/printSchema.ts,76,1,1,0
Separating File: default_definition.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/default_definition.ts,134,7,7,0
Separating File: local_instance.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/local_instance.ts,113,7,7,0
Separating File: hello.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/test-project/src/hello.js,7,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/delete/index.ts,62,0,0,0
Separating File: login.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/login/login.ts,17,0,0,0
Separating File: function.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { sortByTimestamp } from '../../util' - 1
import {flatMap} from 'lodash' - 1
const debug = require('debug')('logs') - 1
export default class FunctionLogs extends Command { - 1
static topic = 'logs' - 1
static description = 'Output service logs' - 1
static group = 'general' - 1
static flags: Flags = { - 1
stage: flags.string({ - 1
char: 't', - 1
description: 'Target to get logs from', - 1
}), - 1
tail: flags.boolean({ - 1
description: 'Tail function logs in realtime', - 1
}), - 1
function: flags.string({ - 1
char: 'f', - 1
description: 'Name of the function to get the logs from', - 1
}), - 1
async run() { - 1
const { tail, stage } = this.flags - 1
const functionName = this.flags.function - 1
const {id} = await this.env.getTarget(stage) - 1
debug(`function name ${functionName}`) - 1
debug(`service id ${id}`) - 1
await this.auth.ensureAuth() - 1
if (!functionName) { - 1
await this.provideAllFunctionLogs(id, tail) - 1
} else { - 1
await this.provideSingleFunctionLogs(id, functionName, tail) - 1
private async provideAllFunctionLogs(id: string, tail?: boolean) { - 1
let logs = (await this.client.getAllFunctionLogs(id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for service ${chalk.bold( - 1
id, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getAllFunctionLogs(id, 50) - 1
if (tailLogs) { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
} else { - 1
this.out.log(`Service ${id} can't be found anymore`) - 1
}, 4000) - 1
private async provideSingleFunctionLogs(id: string, functionName: string, tail?: boolean) { - 1
let fn = await this.client.getFunction(id, functionName) - 1
if (!fn) { - 1
this.out.error( - 1
`There is no function with the name ${functionName}. Run ${chalk.bold( - 1
'prisma functions', - 1
)} to list all functions.`, - 1
} else { - 1
let logs = (await this.client.getFunctionLogs(fn.id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for function ${chalk.bold( - 1
functionName, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getFunctionLogs(fn!.id, 50) - 1
if (tailLogs === null) { - 1
fn = await this.client.getFunction(id, functionName) - 1
} else { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
}, 4000) - 1
private prettifyLogs(logs: any) { - 1
return logs - 1
.map(log => { - 1
const json = JSON.parse(log.message) - 1
if (json.event) { - 1
try { - 1
json.event = JSON.parse(json.event) - 1
} catch (e) { - 1
const styleLog = (l: string) => { - 1
const logs = this.lambdaToArray(l) - 1
let potentialJson = l.slice(62).trim() - 1
try { - 1
potentialJson = JSON.parse(potentialJson) - 1
} catch (e) { - 1
return { - 1
[l.slice(0, 24)]: potentialJson, - 1
if (json.logs) { - 1
json.logs = flatMap(json.logs.map(this.lambdaToArray)).map(styleLog) - 1
const prettyMessage = this.out.getStyledJSON(json) - 1
const status = log.status === 'SUCCESS' ? 'green' : 'red' - 1
return `${chalk.cyan.bold(log.timestamp)} ${chalk.blue.bold( - 1
`${log.duration}ms`, - 1
)} ${chalk.bold[status](log.status)} ${prettyMessage}` - 1
}) - 1
.join('\n') - 1
private lambdaToArray(logs: string): string[] { - 1
logs = logs.replace(/\t/g, '  ') - 1
const regex = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+. - 1
const lines = logs.split('\n') - 1
.filter(l => !l.startsWith('START') && !l.startsWith('END') && !l.startsWith('REPORT')) - 1
const merged = lines - 1
.reduce((acc, curr, index) => { - 1
if (lines[index + 1] && lines[index + 1].match(regex)) { - 1
return { - 1
lines: acc.lines.concat(acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr), - 1
currentLine: '' - 1
} else { - 1
return { - 1
lines: acc.lines, - 1
currentLine: acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr, - 1
}, { - 1
lines: [] as any, - 1
currentLine: '' - 1
}) - 1
return merged.lines.concat(merged.currentLine) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/logs/function.ts,166,133,3,130
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli/src/index.ts,15,0,0,0
Separating File: yaml.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/yaml.ts,69,4,4,0
Separating File: constants.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/constants.ts,9,0,0,0
Separating File: Environment.test.ts
localhost:60000`, '') - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.test.ts,57,1,0,1
Separating File: Output.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Output.ts,31,0,0,0
Separating File: Variables.ts
this.fileRefSyntax = RegExp(/^file\((~?[a-zA-Z0-9._\-/]+?)\)/g); - 1
this.cfRefSyntax = RegExp(/^cf:/g); - 1
this.s3RefSyntax = RegExp(/^s3:(.+?)\/(.+)$/); - 1
this.ssmRefSyntax = RegExp(/^ssm:([a-zA-Z0-9_.-/]+)[~]?(true|false)?/); - 1
return property; - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
return this.getValueFromFile(variableString); - 1
} else if (variableString.match(this.cfRefSyntax)) { - 1
return this.getValueFromCf(variableString); - 1
} else if (variableString.match(this.s3RefSyntax)) { - 1
return this.getValueFromS3(variableString); - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
return this.getValueFromSsm(variableString); - 1
getValueFromFile(variableString) { - 1
const matchedFileRefString = variableString.match(this.fileRefSyntax)[0]; - 1
const referencedFileRelativePath = matchedFileRefString - 1
.replace(this.fileRefSyntax, (match, varName) => varName.trim()) - 1
.replace('~', os.homedir()); - 1
const referencedFileFullPath = (path.isAbsolute(referencedFileRelativePath) ? - 1
referencedFileRelativePath : - 1
path.join(this.prisma.config.servicePath, referencedFileRelativePath)); - 1
let fileExtension = referencedFileRelativePath.split('.'); - 1
fileExtension = fileExtension[fileExtension.length - 1]; - 1
if (!this.prisma.utils.fileExistsSync(referencedFileFullPath)) { - 1
return BbPromise.resolve(undefined); - 1
let valueToPopulate; - 1
if (fileExtension === 'js') { - 1
const variableArray = variableString.split(':'); - 1
let returnValueFunction; - 1
if (variableArray[1]) { - 1
let jsModule = variableArray[1]; - 1
jsModule = jsModule.split('.')[0]; - 1
returnValueFunction = jsFile[jsModule]; - 1
} else { - 1
returnValueFunction = jsFile; - 1
if (typeof returnValueFunction !== 'function') { - 1
throw new this.prisma.classes - 1
.Error([ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is exporting a function that returns a value.', - 1
].join('')); - 1
valueToPopulate = returnValueFunction.call(jsFile); - 1
return BbPromise.resolve(valueToPopulate).then(valueToPopulateResolved => { - 1
let deepProperties = variableString.replace(matchedFileRefString, ''); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
deepProperties.splice(0, 1); - 1
return this.getDeepValue(deepProperties, valueToPopulateResolved) - 1
.then(deepValueToPopulateResolved => { - 1
if (typeof deepValueToPopulateResolved === 'undefined') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is returning the correct data.', - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
return BbPromise.resolve(deepValueToPopulateResolved); - 1
}); - 1
}); - 1
if (fileExtension !== 'js') { - 1
valueToPopulate = this.prisma.utils.readFileSync(referencedFileFullPath); - 1
if (matchedFileRefString !== variableString) { - 1
let deepProperties = variableString - 1
.replace(matchedFileRefString, ''); - 1
if (deepProperties.substring(0, 1) !== ':') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}" sub properties`, - 1
' Please use ":" to reference sub properties.', - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
return this.getDeepValue(deepProperties, valueToPopulate); - 1
return BbPromise.resolve(valueToPopulate); - 1
getValueFromCf(variableString) { - 1
const variableStringWithoutSource = variableString.split(':')[1].split('.'); - 1
const stackName = variableStringWithoutSource[0]; - 1
const outputLogicalId = variableStringWithoutSource[1]; - 1
return this.prisma.getProvider('aws') - 1
.request('CloudFormation', - 1
'describeStacks', - 1
{ StackName: stackName }, - 1
this.options.stage, - 1
this.options.region) - 1
.then(result => { - 1
const outputs = result.Stacks[0].Outputs; - 1
const output = outputs.find(x => x.OutputKey === outputLogicalId); - 1
if (output === undefined) { - 1
const errorMessage = [ - 1
'Trying to request a non exported variable from CloudFormation.', - 1
` Stack name: "${stackName}"`, - 1
` Requested variable: "${outputLogicalId}".`, - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
return output.OutputValue; - 1
}); - 1
getValueFromS3(variableString) { - 1
const groups = variableString.match(this.s3RefSyntax); - 1
const bucket = groups[1]; - 1
const key = groups[2]; - 1
return this.prisma.getProvider('aws') - 1
.request('S3', - 1
'getObject', - 1
Bucket: bucket, - 1
Key: key, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => response.Body.toString(), - 1
err => { - 1
const errorMessage = `Error getting value for ${variableString}. ${err.message}`; - 1
throw new this.prisma.classes.Error(errorMessage); - 1
); - 1
getValueFromSsm(variableString) { - 1
const groups = variableString.match(this.ssmRefSyntax); - 1
const param = groups[1]; - 1
const decrypt = (groups[2] === 'true'); - 1
return this.prisma.getProvider('aws') - 1
.request('SSM', - 1
'getParameter', - 1
Name: param, - 1
WithDecryption: decrypt, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => BbPromise.resolve(response.Parameter.Value), - 1
err => { - 1
const expectedErrorMessage = `Parameter ${param} not found.`; - 1
if (err.message !== expectedErrorMessage) { - 1
throw new this.prisma.classes.Error(err.message); - 1
return BbPromise.resolve(undefined); - 1
); - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
varType = 'file'; - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
varType = 'SSM parameter'; - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Variables.ts,427,146,5,141
Separating File: PrismaDefinition.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.test.ts,289,1,1,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/index.ts,16,0,0,0
Separating File: Environment.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.ts,279,1,1,0
Separating File: PrismaDefinition.ts
const disableAuth = this.definition!.disableAuth - 1
if (this.secrets === null && !disableAuth) { - 1
throw new Error( - 1
'Please either provide a secret in your prisma.yml or disableAuth: true', - 1
if (!this.service) { - 1
throw new Error(`Please provide a service property in your prisma.yml`) - 1
if (!this.stage) { - 1
throw new Error(`Please provide a stage property in your prisma.yml`) - 1
if (!this.cluster) { - 1
throw new Error( - 1
`Please either provide a cluster or endpoint property in your prisma.yml`, - 1
, '') - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.ts,464,15,3,12
Separating File: Cluster.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Cluster.ts,201,5,5,0
Separating File: getTmpDir.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/test/getTmpDir.ts,9,0,0,0
Separating File: json-loader.d.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/typings/json-loader.d.ts,4,0,0,0
Separating File: ClusterNotSet.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotSet.ts,7,0,0,0
Separating File: StageNotFound.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/StageNotFound.ts,9,0,0,0
Separating File: ClusterNotFound.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotFound.ts,7,0,0,0
Separating File: DefinitionMigrator.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/DefinitionMigrator.ts,60,4,4,0
Separating File: yamlComment.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.ts,50,3,3,0
Separating File: getProxyAgent.ts
environmental variables (NO_PROXY, HTTP_PROXY, etc.) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/getProxyAgent.ts,80,11,10,1
Separating File: yamlComment.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.test.ts,59,3,3,0
Separating File: rc.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/rc.ts,21,0,0,0
Separating File: common.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/common.ts,3,0,0,0
Separating File: Introspector.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/Introspector.ts,21,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/index.ts,1,0,0,0
Separating File: SdlPrinter.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/SdlPrinter.ts,67,0,0,0
Separating File: PostgresConnector.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/connectors/PostgresConnector.ts,157,1,1,0
Separating File: common.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/types/common.ts,25,1,1,0
Separating File: largeSchema.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/largeSchema.test.ts,857,7,7,0
Separating File: scalars.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/scalars.test.ts,70,0,0,0
Separating File: connectionDetails.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/connectionDetails.ts,6,0,0,0
Separating File: relations.test.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/relations.test.ts,43,0,0,0
Separating File: waitUntilTagPublished.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/scripts/waitUntilTagPublished.js,27,1,1,0
Separating File: auth.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions/src/auth.js,98,8,8,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions/src/index.js,35,5,4,1
Separating File: users.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions/src/users.js,8,0,0,0
Separating File: utils.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions/src/utils.js,22,0,0,0
Separating File: posts.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions/src/posts.js,70,0,0,0
Separating File: github.ts
api.github.com/user?access_token=${githubToken}` - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/github.ts,37,1,0,1
Separating File: index.ts
localhost:4000`)) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/index.ts,17,4,3,1
Separating File: utils.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/utils.ts,29,0,0,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/resolvers/index.ts,14,0,0,0
Separating File: notes.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/resolvers/Mutation/notes.ts,37,0,0,0
Separating File: auth.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/resolvers/Mutation/auth.ts,36,2,2,0
Separating File: me.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/resolvers/Query/me.ts,5,0,0,0
Separating File: note.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/resolvers/Query/note.ts,12,0,0,0
Separating File: prisma.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/github-auth/src/generated/prisma.ts,783,4,4,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-forwarding/src/index.js,17,5,4,1
Separating File: index.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-forwarding/src/resolvers/index.js,6,0,0,0
Separating File: Mutation.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-forwarding/src/resolvers/Mutation.js,15,7,7,0
Separating File: Query.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-forwarding/src/resolvers/Query.js,14,6,6,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/subscriptions/src/index.js,55,1,0,1
Separating File: auth.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/auth/src/auth.js,41,4,4,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/auth/src/index.js,28,5,4,1
Separating File: utils.js
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/auth/src/utils.js,22,0,0,0
Separating File: index.ts
localhost:4000`)) - 1
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/file-handling-s3/src/index.ts,36,4,3,1
Separating File: utils.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/file-handling-s3/src/utils.ts,11,0,0,0
Separating File: fileAPI.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/file-handling-s3/src/modules/fileAPI.ts,54,2,2,0
Separating File: index.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/file-handling-s3/src/resolvers/index.ts,14,0,0,0
Separating File: file.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/file-handling-s3/src/resolvers/Mutation/file.ts,11,2,2,0
Separating File: prisma.ts
prisma,1.7.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/file-handling-s3/src/generated/prisma.ts,493,4,4,0
Separating File: typings.d.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings.d.ts,4,0,0,0
Separating File: requests.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/requests.js,0,0,0,0
Separating File: init.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/init.js,6,0,0,0
Separating File: hello.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/test-project/src/hello.js,7,0,0,0
Separating File: global.d.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings/global.d.ts,7,1,1,0
Separating File: Help.ts
TODO: command (cmd: Class<Command<>>): string { - 1
TODO: commandLine (cmd: Class<Command<>>): [string, ?string] { - 1
TODO renderFlags (flags: [string, Flag][]): string { - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Help.ts,143,4,1,3
Separating File: fs.ts
if (process.env.NODE_ENV === 'test') { - 1
reset() - 1
const fs = process.env.NODE_ENV === 'test' ? memfs : fse - 1
export function reset() { - 1
vol.reset() - 1
vol.fromJSON({ - 1
'test.out': '' - 1
}, process.cwd()) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/fs.ts,16,9,1,8
Separating File: NotFound.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/NotFound.ts,53,2,2,0
Separating File: Command.ts
import { Auth } from './Auth' - 1
auth: Auth - 1
this.auth = new Auth(this.out, this.config, this.env, this.client) - 1
this.client.setAuth(this.auth) - 1
if (mockDefinition) { - 1
this.definition.set(mockDefinition) - 1
if (mockRC) { - 1
this.env.localRC = mockRC - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.ts,141,10,2,8
Separating File: CLI.test.ts
test('runs the version command', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.code).toBe(0) - 1
}) - 1
test('errors with invalid arguments', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version', '--invalid-flag'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.message).toContain('Unexpected argument --invalid-flag') - 1
}) - 1
test('errors when command not found', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'foobar12345'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
if (!err.code) { - 1
throw err - 1
expect(err.code).toEqual(127) - 1
}) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.test.ts,86,26,0,26
Separating File: Config.ts
Paths - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.ts,234,7,6,1
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/index.ts,29,0,0,0
Separating File: Parser.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.ts,156,6,6,0
Separating File: Parser.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.test.ts,139,1,1,0
Separating File: Command.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.test.ts,61,1,1,0
Separating File: Config.oldtest.ts
import {Config} from './Config' - 1
const mockDotFile = { - 1
"token": "test-token" - 1
describe('config', () => { - 1
test('should init paths correct in subfolder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(os.tmpdir(), `${cuid()}`) - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.definitionDir).toBe(definitionDir) - 1
expect(config.definitionPath).toBe(path.join(definitionDir, 'prisma.yml')) - 1
}) - 1
test('should allow .prismarc file in current folder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(home, 'definition') - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const dotPrismaPath = path.join(definitionDir, '.prismarc') - 1
fs.writeFileSync(dotPrismaPath, JSON.stringify(mockDotFile)) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.localRCPath).toBe(dotPrismaPath) - 1
}) - 1
}) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.oldtest.ts,33,32,4,28
Separating File: StatusChecker.ts
doJobs(options.cachePath, options.request) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/StatusChecker.ts,179,3,2,1
Separating File: CLI.ts
if nothing is found, try again with taking what is before : - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.ts,296,3,2,1
Separating File: util.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/util.ts,71,0,0,0
Separating File: defaultDefinition.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/defaultDefinition.ts,76,0,0,0
Separating File: Topic.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Topic.ts,17,0,0,0
Separating File: mock.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/mock.ts,82,0,0,0
Separating File: check.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/check.ts,3,0,0,0
Separating File: number.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/number.ts,7,0,0,0
Separating File: string.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/string.ts,7,0,0,0
Separating File: boolean.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/boolean.ts,7,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/index.ts,22,0,0,0
Separating File: Dispatcher.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Dispatcher/Dispatcher.ts,118,5,5,0
Separating File: migration.ts
group types, - 1
const groupedByType = groupBy(steps, m => m.type) - 1
Object.keys(groupedByType).forEach(type => { - 1
const typeMessages = groupedByType[type] - 1
this.out.log('\n' + printType(type) + '\n') - 1
const groupedByName = groupBy(typeMessages, m => m.name.split('.')[0]) - 1
Object.keys(groupedByName).forEach(name => { - 1
this.out.log(`  ${chalk.bold(name)}`) - 1
const nameMessages = groupedByName[name] - 1
nameMessages.forEach(this.printMigrationMessage, this) - 1
}) - 1
}) - 1
this.out.log('') - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.ts,263,13,0,13
Separating File: Prompter.ts
Ctrl-c - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/Prompter.ts,113,3,2,1
Separating File: migration.describe.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.describe.ts,8,0,0,0
Separating File: spinners.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/spinners.ts,738,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/index.ts,373,5,5,0
Separating File: table.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/table.ts,134,17,17,0
Separating File: StreamOutput.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/StreamOutput.ts,62,1,1,0
Separating File: util.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/util.ts,13,0,0,0
Separating File: subtle.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/subtle.ts,149,4,4,0
Separating File: steps.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/fixtures/steps.ts,157,0,0,0
Separating File: ActionBase.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/ActionBase.ts,96,1,1,0
Separating File: SimpleAction.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SimpleAction.ts,44,1,1,0
Separating File: screen.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/screen.ts,15,0,0,0
Separating File: SpinnerAction.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SpinnerAction.ts,83,0,0,0
Separating File: Client.ts
if (process.env.NODE_ENV === 'test') { - 1
Client.prototype.mock = function({ request, response }) { - 1
if (!this.mocks) { - 1
this.mocks = {} - 1
this.mocks[JSON.stringify(request, null, 2)] = response - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.ts,920,12,7,5
Separating File: types.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/types.ts,86,7,7,0
Separating File: introspectionQuery.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/introspectionQuery.ts,91,0,0,0
Separating File: Client.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.test.ts,17,0,0,0
Separating File: ping.ts
dynamodb.${region.toLowerCase().replace(/_/g, '-')}.amazonaws.com` - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/ping.ts,43,1,0,1
Separating File: RequiredFlagError.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/RequiredFlagError.ts,5,0,0,0
Separating File: CommandRemovedError.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/CommandRemovedError.ts,13,0,0,0
Separating File: PromptMaskError.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/PromptMaskError.ts,1,0,0,0
Separating File: ExitError.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/ExitError.ts,7,0,0,0
Separating File: CommandReplacedError.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/CommandReplacedError.ts,11,0,0,0
Separating File: isGlobal.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/utils/isGlobal.ts,26,0,0,0
Separating File: rc.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/rc.ts,23,0,0,0
Separating File: common.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/common.ts,120,2,2,0
Separating File: Plugin.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugin.ts,80,1,1,0
Separating File: CorePlugins.ts
if (this.config.pjson.main) { - 1
if main is set in package.json, add plugin as self - 1
plugins.push(new PluginPath({output: this.out, type: 'core', path: this.config.root})) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/CorePlugins.ts,37,6,3,3
Separating File: Manager.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Manager.ts,26,1,1,0
Separating File: Cache.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Cache.ts,188,1,1,0
Separating File: BuiltInPlugins.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/BuiltInPlugins.ts,13,2,2,0
Separating File: Lock.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Lock.ts,42,7,7,0
Separating File: rwlockfile.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/rwlockfile.ts,234,15,15,0
Separating File: Plugins.ts
linked: LinkedPlugins - 1
user: UserPlugins - 1
this.linked = new LinkedPlugins(this) - 1
this.user = new UserPlugins(this) - 1
this.linked, - 1
this.user, - 1
async install(name: string, tag: string = 'latest') { - 1
const downgrade = await this.lock.upgrade() - 1
await this.load() - 1
if (this.plugins.find(p => p.name === name && p.tag === tag)) { - 1
throw new Error(`Plugin ${name} is already installed`) - 1
const path = await this.user.install(name, tag) - 1
this.clearCache(path) - 1
await downgrade() - 1
async update() { - 1
if (this.user.list().length === 0) return - 1
this.out.action.start(`${this.config.name}: Updating plugins`) - 1
let downgrade = await this.lock.upgrade() - 1
await this.user.update() - 1
this.clearCache(...(await this.user.list()).map(p => p.path)) - 1
await downgrade() - 1
async uninstall(name: string) { - 1
await this.load() - 1
let plugin = this.plugins.filter(p => ['user', 'link'].includes(p.type)).find(p => p.name === name) - 1
if (!plugin) throw new Error(`${name} is not installed`) - 1
let downgrade = await this.lock.upgrade() - 1
switch (plugin.type) { - 1
case 'user': { - 1
if (!this.config.debug) this.out.action.start(`Uninstalling plugin ${name}`) - 1
await this.user.remove(name) - 1
break - 1
case 'link': { - 1
if (!this.config.debug) this.out.action.start(`Unlinking plugin ${name}`) - 1
this.linked.remove(plugin.path) - 1
break - 1
this.clearCache(plugin.path) - 1
await downgrade() - 1
this.out.action.stop() - 1
addPackageToPJSON(name: string, version: string = '') { - 1
this.user.addPackageToPJSON(name, version) - 1
async addLinkedPlugin(p: string) { - 1
let downgrade = await this.lock.upgrade() - 1
await this.load() - 1
await this.linked.add(p) - 1
this.clearCache(p) - 1
await downgrade() - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugins.ts,189,46,0,46
Separating File: PluginPath.ts
process.env.CACHE_REQUIRE_PATHS_FILE = this.config.requireCachePath - 1
require('cache-require-paths') - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/PluginPath.ts,185,5,3,2
Separating File: help.ts
const list = groupTopics.map(t => [ - 1
t.id, - 1
t.description ? chalk.dim(t.description) : null, - 1
]) - 1
console.log(cmds) - 1
if (t.id === 'cluster') { - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/help.ts,173,9,3,6
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/index.ts,10,0,0,0
Separating File: version.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/version.ts,9,0,0,0
Separating File: requests.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/requests.js,40,0,0,0
Separating File: init.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/test/init.js,6,0,0,0
Separating File: BufferedConsole.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/BufferedConsole.ts,37,1,1,0
Separating File: getConsoleOutput.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/getConsoleOutput.ts,32,0,0,0
Separating File: index.ts
import Auth from './commands/auth/index' - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/index.ts,146,5,4,1
Separating File: examples.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/examples.ts,197,7,7,0
Separating File: util.ts
${devPrefix}console.graph.cool/token?token=${token}${ - 1
export const playgroundURL = (token: string, projectName: string) => - 1
managementApiSecret: somesecret - 1
databases: - 1
default: - 1
connector: mysql - 1
active: true - 1
port: 3306 - 1
user: someuser - 1
password: existingpw - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/util.ts,66,16,6,10
Separating File: spawn.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/spawn.ts,32,0,0,0
Separating File: getTmpDir.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/getTmpDir.ts,9,0,0,0
Separating File: mock-requests.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-requests.ts,86,0,0,0
Separating File: mock-client.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-client.ts,21,0,0,0
Separating File: writeToStdin.ts
process.stdin.end() - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/writeToStdin.ts,19,1,0,1
Separating File: ServiceDoesntExistError.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/errors/ServiceDoesntExistError.ts,5,0,0,0
Separating File: EndpointDialog.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.test.ts,44,0,0,0
Separating File: dockerComposeInstalled.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/dockerComposeInstalled.ts,21,0,0,0
Separating File: EndpointDialog.ts
message: `Connect to your database, set up a new one or use hosted sandbox?`, - 1
pageSize: 9, - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.ts,723,8,6,2
Separating File: crypto.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/crypto.ts,15,0,0,0
Separating File: types.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/types.ts,17,0,0,0
Separating File: Validator.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.test.ts,439,0,0,0
Separating File: Importer.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.ts,245,0,0,0
Separating File: Validator.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.ts,405,2,2,0
Separating File: index.ts
continue - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/index.ts,59,1,0,1
Separating File: Validator.describe.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.describe.ts,10,0,0,0
Separating File: Importer.describe.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.describe.ts,24,0,0,0
Separating File: makeData.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/fixtures/basic/makeData.ts,78,0,0,0
Separating File: Normalizer.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/normalizers/Normalizer.ts,1,0,0,0
Separating File: Exporter.describe.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.describe.ts,14,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/index.ts,60,0,0,0
Separating File: Exporter.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.ts,122,0,0,0
Separating File: introspect.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/introspect/introspect.ts,61,0,0,0
Separating File: inquirer-mock-prompt.ts
inquirer.prompt = promptMock - 1
return inquirer - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/inquirer-mock-prompt.ts,127,15,13,2
Separating File: index.ts
bit.ly/prisma-introspection`, - 1
bit.ly/prisma-server-overview`, - 1
bit.ly/prisma-deploy-services`, - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/index.ts,197,5,2,3
Separating File: index.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/index.test.ts,77,1,1,0
Separating File: old.ts
import { Command, flags, Flags, ProjectDefinition } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { defaultDefinition, defaultPjson, examples } from '../../examples' - 1
import { repeat, flatten } from 'lodash' - 1
export default class Init extends Command { - 1
static topic = 'init' - 1
static description = 'Create files for new services' - 1
static group = 'general' - 1
static help = ` - 1
${chalk.green.bold('Examples:')} - 1
${chalk.gray('-')} Initialize a new Prisma service - 1
${chalk.green('$ prisma init')} - 1
static flags: Flags = { - 1
force: flags.boolean({ - 1
char: 'f', - 1
'Initialize even if the folder already contains prisma files', - 1
}), - 1
copy: flags.string({ - 1
char: 'c', - 1
'ID or alias of the service, that the schema should be copied from', - 1
}), - 1
static args = [ - 1
name: 'dirName', - 1
description: 'Folder to initialize in (optional)', - 1
}, - 1
async run() { - 1
const { copy, force } = this.flags - 1
const dirName = this.args!.dirName - 1
if (dirName) { - 1
const newDefinitionPath = path.join(process.cwd(), dirName + '/') - 1
fs.mkdirpSync(newDefinitionPath) - 1
this.config.definitionDir = newDefinitionPath - 1
this.config.localRCPath = path.join(newDefinitionPath, '.prismarc') - 1
const pjson = { - 1
...defaultPjson, - 1
name: path.basename(this.config.definitionDir), - 1
const files = fs.readdirSync(this.config.definitionDir) - 1
if ( - 1
files.length > 0 && - 1
!(files.length === 1 && files[0] === '.prismarc') && - 1
files.includes('prisma.yml') - 1
) { - 1
this.out.log(` - 1
The directory ${chalk.green( - 1
this.config.definitionDir, - 1
)} contains files that could conflict: - 1
${files.map(f => `  ${f}`).join('\n')} - 1
${chalk.bold( - 1
'NOTE:', - 1
)} The behavior of the init command changed, to deploy a project, please use ${chalk.green( - 1
'prisma deploy', - 1
)} - 1
To force the init process in this folder, use ${chalk.green( - 1
'prisma init --force', - 1
)}`) - 1
if (force) { - 1
await this.askForConfirmation(this.config.definitionDir) - 1
} else { - 1
this.out.exit(1) - 1
if (template) { - 1
const projectDefinition = examples[template] - 1
if (!projectDefinition) { - 1
this.out.error(`${template} is not a valid template`) - 1
this.definition.set(projectDefinition) - 1
if (copy) { - 1
const info = await this.client.fetchProjectInfo(copy) - 1
this.definition.set(info.projectDefinition) - 1
if (!this.definition.definition) { - 1
const newDefinition = await this.interactiveInit() - 1
const newDefinition = defaultDefinition - 1
this.definition.set(newDefinition) - 1
let relativeDir = path.relative(process.cwd(), this.config.definitionDir) - 1
relativeDir = relativeDir.length === 0 ? '.' : relativeDir - 1
this.out.action.start( - 1
`Creating a new Prisma service in ${chalk.green(relativeDir)}`, - 1
this.definition.save(undefined, false) - 1
this.out.action.stop() - 1
this.out.log(`${chalk.dim.bold('\nWritten files' + ':')}`) - 1
fs.writeFileSync( - 1
path.join(this.config.definitionDir, 'package.json'), - 1
JSON.stringify(pjson, null, 2), - 1
const createdFiles = flatten( - 1
this.definition.definition!.modules.map(module => - 1
Object.keys(module.files), - 1
), - 1
).concat(['prisma.yml', 'package.json']) - 1
this.out.filesTree(createdFiles) - 1
const cdInstruction = - 1
relativeDir === '.' - 1
? '' - 1
: `To get started, cd into the new directory: - 1
${chalk.green(`cd ${relativeDir}`)} - 1
${chalk.green('prisma deploy')} - 1
${chalk.green('prisma local up')} - 1
${chalk.green('prisma add-template auth/facebook')} - 1
`) - 1
async interactiveInit(): Promise<ProjectDefinition> { - 1
const initQuestion = { - 1
name: 'init', - 1
type: 'list', - 1
message: 'How do you want to start?', - 1
choices: [ - 1
value: 'blank', - 1
name: [ - 1
`${chalk.bold('New blank service')}`, - 1
`  Creates a new Prisma service from scratch.`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'copy', - 1
name: [ - 1
`${chalk.bold('Copying an existing service')}`, - 1
`  Copies a service from your account`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'example', - 1
name: [ - 1
`${chalk.bold('Based on example')}`, - 1
`  Creates a new Prisma service based on an example`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 13, - 1
const { init } = await this.out.prompt([initQuestion]) - 1
switch (init) { - 1
case 'blank': - 1
this.out.up(7) - 1
return defaultDefinition - 1
case 'copy': - 1
await this.auth.ensureAuth() - 1
const projectId = await this.projectSelection() - 1
this.out.up(4) - 1
const info = await this.client.fetchProjectInfo(projectId) - 1
return info.projectDefinition - 1
case 'example': - 1
return await this.exampleSelection() - 1
return null as any - 1
private async projectSelection() { - 1
const projects = await this.client.fetchProjects() - 1
const choices = projects - 1
.map(p => ({ - 1
name: `${p.name} (${p.id})`, - 1
value: p.id, - 1
})) - 1
.concat(new inquirer.Separator(chalk.bold.green(repeat('-', 50)))) - 1
const question = { - 1
name: 'project', - 1
type: 'list', - 1
message: 'Please choose a project', - 1
choices, - 1
pageSize: Math.min(process.stdout.rows!, projects.length) - 2, - 1
const { project } = await this.out.prompt([question]) - 1
return project - 1
private async exampleSelection(): Promise<ProjectDefinition> { - 1
const question = { - 1
name: 'example', - 1
type: 'list', - 1
message: 'Please choose an example', - 1
choices: [ - 1
value: 'instagram', - 1
name: [ - 1
`${chalk.bold('Instagram')}`, - 1
`Contains an instagram clone with permission logic`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'stripe', - 1
name: [ - 1
`${chalk.bold('Stripe Checkout')}`, - 1
`An example integrating the stripe checkout with schema extensions`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'sendgrid', - 1
name: [ - 1
`${chalk.bold('Sendgrid Mails')}`, - 1
`An example that shows how to connect Prisma to the Sendgrid API`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 12, - 1
const { example } = await this.out.prompt(question) - 1
return examples[example] - 1
private async askForConfirmation(folder: string) { - 1
const confirmationQuestion = { - 1
name: 'confirmation', - 1
type: 'input', - 1
message: `Are you sure that you want to init a new service in ${chalk.green( - 1
folder, - 1
)}? y/N`, - 1
default: 'n', - 1
const { confirmation }: { confirmation: string } = await this.out.prompt( - 1
confirmationQuestion, - 1
if (confirmation.toLowerCase().startsWith('n')) { - 1
this.out.exit(0) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/old.ts,247,212,14,198
Separating File: logout.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/logout/logout.ts,10,0,0,0
Separating File: token.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/token.ts,39,0,0,0
Separating File: cluster-token.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/cluster-token.ts,36,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/console/index.ts,13,2,2,0
Separating File: reset.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/reset/reset.ts,66,0,0,0
Separating File: index.ts
g, '0') - 1
?cwd=${process.cwd()}&envPath=${envPath}` - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/playground/index.ts,135,4,2,2
Separating File: seed.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/seed.ts,62,0,0,0
Separating File: Seeder.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/Seeder.ts,148,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/info/index.ts,95,0,0,0
Separating File: account.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/account/account.ts,19,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/list/index.ts,71,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init-prisma/index.ts,8,1,1,0
Separating File: index.ts
const { id } = await this.env.getTarget(stage) - 1
continue - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/example-command/index.ts,18,2,0,2
Separating File: index.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
export default class Auth extends Command { - 1
static topic = 'login' - 1
static description = 'Login or signup to the Prisma Platform' - 1
static group = 'platform' - 1
static help = ` - 1
${chalk.green('Examples:')} - 1
${chalk.gray('-')} Authenticate using the browser - 1
${chalk.green('$ prisma login')} - 1
${chalk.green('$ prisma login -t <token>')} - 1
static flags: Flags = { - 1
token: flags.string({ - 1
char: 'T', - 1
description: 'System token', - 1
}), - 1
async run() { - 1
const { token } = this.flags - 1
if (token) { - 1
this.out.log('Using token from --token flag') - 1
this.auth.setToken(token) - 1
const alreadyAuthenticated = await this.auth.ensureAuth() - 1
if (token) { - 1
this.env.setToken(token) - 1
this.env.saveGlobalRC() - 1
this.out.log( - 1
`Saved new token to ${chalk.bold(this.config.globalRCPath)}`, - 1
} else if (alreadyAuthenticated) { - 1
this.out.log( - 1
`You are already authenticated. Your local token is saved at ${chalk.bold( - 1
this.config.globalRCPath, - 1
)}`, - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/auth/index.ts,43,35,3,32
Separating File: getSchemaPathFromConfig.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.ts,22,1,1,0
Separating File: getSchemaPathFromConfig.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.test.ts,15,0,0,0
Separating File: index.ts
this.out.migrati - 1
const clusters = this.env.clusters.filter(c => !c.shared && !c.isPrivate) - 1
const clusterNames: string[][] = clusters.map(c => { - 1
const note = - 1
c.baseUrl.includes('localhost') || c.baseUrl.includes('127.0.0.1') - 1
? 'Local cluster (requires Docker)' - 1
: 'Self-hosted' - 1
return [c.name, note] - 1
}) - 1
if (clusterNames.length === 0) { - 1
clusterNames.push(['local', 'Local cluster (requires Docker)']) - 1
return clusterNames - 1
const workspaces = await this.client.getWorkspaces() - 1
const clusters = this.env.clusters.filter( - 1
c => c.shared && c.name !== 'shared-public-demo', - 1
bit.ly/prisma-graphql-deployment`, - 1
bit.ly/prisma-graphql-deployment`, - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/index.ts,608,34,17,17
Separating File: index.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/index.test.ts,46,0,0,0
Separating File: emptyDefinition.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/emptyDefinition.ts,14,0,0,0
Separating File: getbin.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getbin.ts,26,0,0,0
Separating File: printSchema.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/printSchema.ts,76,1,1,0
Separating File: default_definition.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/default_definition.ts,134,7,7,0
Separating File: local_instance.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/local_instance.ts,113,7,7,0
Separating File: hello.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/test-project/src/hello.js,7,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/delete/index.ts,62,0,0,0
Separating File: login.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/login/login.ts,16,0,0,0
Separating File: function.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { sortByTimestamp } from '../../util' - 1
import {flatMap} from 'lodash' - 1
const debug = require('debug')('logs') - 1
export default class FunctionLogs extends Command { - 1
static topic = 'logs' - 1
static description = 'Output service logs' - 1
static group = 'general' - 1
static flags: Flags = { - 1
stage: flags.string({ - 1
char: 't', - 1
description: 'Target to get logs from', - 1
}), - 1
tail: flags.boolean({ - 1
description: 'Tail function logs in realtime', - 1
}), - 1
function: flags.string({ - 1
char: 'f', - 1
description: 'Name of the function to get the logs from', - 1
}), - 1
async run() { - 1
const { tail, stage } = this.flags - 1
const functionName = this.flags.function - 1
const {id} = await this.env.getTarget(stage) - 1
debug(`function name ${functionName}`) - 1
debug(`service id ${id}`) - 1
await this.auth.ensureAuth() - 1
if (!functionName) { - 1
await this.provideAllFunctionLogs(id, tail) - 1
} else { - 1
await this.provideSingleFunctionLogs(id, functionName, tail) - 1
private async provideAllFunctionLogs(id: string, tail?: boolean) { - 1
let logs = (await this.client.getAllFunctionLogs(id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for service ${chalk.bold( - 1
id, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getAllFunctionLogs(id, 50) - 1
if (tailLogs) { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
} else { - 1
this.out.log(`Service ${id} can't be found anymore`) - 1
}, 4000) - 1
private async provideSingleFunctionLogs(id: string, functionName: string, tail?: boolean) { - 1
let fn = await this.client.getFunction(id, functionName) - 1
if (!fn) { - 1
this.out.error( - 1
`There is no function with the name ${functionName}. Run ${chalk.bold( - 1
'prisma functions', - 1
)} to list all functions.`, - 1
} else { - 1
let logs = (await this.client.getFunctionLogs(fn.id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for function ${chalk.bold( - 1
functionName, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getFunctionLogs(fn!.id, 50) - 1
if (tailLogs === null) { - 1
fn = await this.client.getFunction(id, functionName) - 1
} else { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
}, 4000) - 1
private prettifyLogs(logs: any) { - 1
return logs - 1
.map(log => { - 1
const json = JSON.parse(log.message) - 1
if (json.event) { - 1
try { - 1
json.event = JSON.parse(json.event) - 1
} catch (e) { - 1
const styleLog = (l: string) => { - 1
const logs = this.lambdaToArray(l) - 1
let potentialJson = l.slice(62).trim() - 1
try { - 1
potentialJson = JSON.parse(potentialJson) - 1
} catch (e) { - 1
return { - 1
[l.slice(0, 24)]: potentialJson, - 1
if (json.logs) { - 1
json.logs = flatMap(json.logs.map(this.lambdaToArray)).map(styleLog) - 1
const prettyMessage = this.out.getStyledJSON(json) - 1
const status = log.status === 'SUCCESS' ? 'green' : 'red' - 1
return `${chalk.cyan.bold(log.timestamp)} ${chalk.blue.bold( - 1
`${log.duration}ms`, - 1
)} ${chalk.bold[status](log.status)} ${prettyMessage}` - 1
}) - 1
.join('\n') - 1
private lambdaToArray(logs: string): string[] { - 1
logs = logs.replace(/\t/g, '  ') - 1
const regex = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+. - 1
const lines = logs.split('\n') - 1
.filter(l => !l.startsWith('START') && !l.startsWith('END') && !l.startsWith('REPORT')) - 1
const merged = lines - 1
.reduce((acc, curr, index) => { - 1
if (lines[index + 1] && lines[index + 1].match(regex)) { - 1
return { - 1
lines: acc.lines.concat(acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr), - 1
currentLine: '' - 1
} else { - 1
return { - 1
lines: acc.lines, - 1
currentLine: acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr, - 1
}, { - 1
lines: [] as any, - 1
currentLine: '' - 1
}) - 1
return merged.lines.concat(merged.currentLine) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/logs/function.ts,166,133,3,130
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli/src/index.ts,15,0,0,0
Separating File: Cluster.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Cluster.test.ts,58,0,0,0
Separating File: yaml.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/yaml.ts,69,4,4,0
Separating File: constants.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/constants.ts,10,0,0,0
Separating File: Environment.test.ts
localhost:60000`, '') - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.test.ts,57,1,0,1
Separating File: Output.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Output.ts,31,0,0,0
Separating File: Variables.ts
this.fileRefSyntax = RegExp(/^file\((~?[a-zA-Z0-9._\-/]+?)\)/g); - 1
this.cfRefSyntax = RegExp(/^cf:/g); - 1
this.s3RefSyntax = RegExp(/^s3:(.+?)\/(.+)$/); - 1
this.ssmRefSyntax = RegExp(/^ssm:([a-zA-Z0-9_.-/]+)[~]?(true|false)?/); - 1
return property; - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
return this.getValueFromFile(variableString); - 1
} else if (variableString.match(this.cfRefSyntax)) { - 1
return this.getValueFromCf(variableString); - 1
} else if (variableString.match(this.s3RefSyntax)) { - 1
return this.getValueFromS3(variableString); - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
return this.getValueFromSsm(variableString); - 1
getValueFromFile(variableString) { - 1
const matchedFileRefString = variableString.match(this.fileRefSyntax)[0]; - 1
const referencedFileRelativePath = matchedFileRefString - 1
.replace(this.fileRefSyntax, (match, varName) => varName.trim()) - 1
.replace('~', os.homedir()); - 1
const referencedFileFullPath = (path.isAbsolute(referencedFileRelativePath) ? - 1
referencedFileRelativePath : - 1
path.join(this.prisma.config.servicePath, referencedFileRelativePath)); - 1
let fileExtension = referencedFileRelativePath.split('.'); - 1
fileExtension = fileExtension[fileExtension.length - 1]; - 1
if (!this.prisma.utils.fileExistsSync(referencedFileFullPath)) { - 1
return BbPromise.resolve(undefined); - 1
let valueToPopulate; - 1
if (fileExtension === 'js') { - 1
const variableArray = variableString.split(':'); - 1
let returnValueFunction; - 1
if (variableArray[1]) { - 1
let jsModule = variableArray[1]; - 1
jsModule = jsModule.split('.')[0]; - 1
returnValueFunction = jsFile[jsModule]; - 1
} else { - 1
returnValueFunction = jsFile; - 1
if (typeof returnValueFunction !== 'function') { - 1
throw new this.prisma.classes - 1
.Error([ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is exporting a function that returns a value.', - 1
].join('')); - 1
valueToPopulate = returnValueFunction.call(jsFile); - 1
return BbPromise.resolve(valueToPopulate).then(valueToPopulateResolved => { - 1
let deepProperties = variableString.replace(matchedFileRefString, ''); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
deepProperties.splice(0, 1); - 1
return this.getDeepValue(deepProperties, valueToPopulateResolved) - 1
.then(deepValueToPopulateResolved => { - 1
if (typeof deepValueToPopulateResolved === 'undefined') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is returning the correct data.', - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
return BbPromise.resolve(deepValueToPopulateResolved); - 1
}); - 1
}); - 1
if (fileExtension !== 'js') { - 1
valueToPopulate = this.prisma.utils.readFileSync(referencedFileFullPath); - 1
if (matchedFileRefString !== variableString) { - 1
let deepProperties = variableString - 1
.replace(matchedFileRefString, ''); - 1
if (deepProperties.substring(0, 1) !== ':') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}" sub properties`, - 1
' Please use ":" to reference sub properties.', - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
return this.getDeepValue(deepProperties, valueToPopulate); - 1
return BbPromise.resolve(valueToPopulate); - 1
getValueFromCf(variableString) { - 1
const variableStringWithoutSource = variableString.split(':')[1].split('.'); - 1
const stackName = variableStringWithoutSource[0]; - 1
const outputLogicalId = variableStringWithoutSource[1]; - 1
return this.prisma.getProvider('aws') - 1
.request('CloudFormation', - 1
'describeStacks', - 1
{ StackName: stackName }, - 1
this.options.stage, - 1
this.options.region) - 1
.then(result => { - 1
const outputs = result.Stacks[0].Outputs; - 1
const output = outputs.find(x => x.OutputKey === outputLogicalId); - 1
if (output === undefined) { - 1
const errorMessage = [ - 1
'Trying to request a non exported variable from CloudFormation.', - 1
` Stack name: "${stackName}"`, - 1
` Requested variable: "${outputLogicalId}".`, - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
return output.OutputValue; - 1
}); - 1
getValueFromS3(variableString) { - 1
const groups = variableString.match(this.s3RefSyntax); - 1
const bucket = groups[1]; - 1
const key = groups[2]; - 1
return this.prisma.getProvider('aws') - 1
.request('S3', - 1
'getObject', - 1
Bucket: bucket, - 1
Key: key, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => response.Body.toString(), - 1
err => { - 1
const errorMessage = `Error getting value for ${variableString}. ${err.message}`; - 1
throw new this.prisma.classes.Error(errorMessage); - 1
); - 1
getValueFromSsm(variableString) { - 1
const groups = variableString.match(this.ssmRefSyntax); - 1
const param = groups[1]; - 1
const decrypt = (groups[2] === 'true'); - 1
return this.prisma.getProvider('aws') - 1
.request('SSM', - 1
'getParameter', - 1
Name: param, - 1
WithDecryption: decrypt, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => BbPromise.resolve(response.Parameter.Value), - 1
err => { - 1
const expectedErrorMessage = `Parameter ${param} not found.`; - 1
if (err.message !== expectedErrorMessage) { - 1
throw new this.prisma.classes.Error(err.message); - 1
return BbPromise.resolve(undefined); - 1
); - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
varType = 'file'; - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
varType = 'SSM parameter'; - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Variables.ts,427,146,5,141
Separating File: PrismaDefinition.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.test.ts,274,1,1,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/index.ts,12,0,0,0
Separating File: Environment.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.ts,267,1,1,0
Separating File: PrismaDefinition.ts
eu1.prisma.sh/myworkspace/service-name/stage-name`, - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.ts,409,5,4,1
Separating File: Cluster.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Cluster.ts,245,7,7,0
Separating File: getTmpDir.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/test/getTmpDir.ts,9,0,0,0
Separating File: json-loader.d.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/typings/json-loader.d.ts,4,0,0,0
Separating File: ClusterNotSet.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotSet.ts,7,0,0,0
Separating File: StageNotFound.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/StageNotFound.ts,9,0,0,0
Separating File: ClusterNotFound.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotFound.ts,7,0,0,0
Separating File: DefinitionMigrator.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/DefinitionMigrator.ts,68,4,4,0
Separating File: yamlComment.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.ts,50,3,3,0
Separating File: parseEndpoint.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/parseEndpoint.test.ts,26,0,0,0
Separating File: getProxyAgent.ts
environmental variables (NO_PROXY, HTTP_PROXY, etc.) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/getProxyAgent.ts,80,11,10,1
Separating File: parseEndpoint.ts
, '') - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/parseEndpoint.ts,56,2,1,1
Separating File: yamlComment.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.test.ts,59,3,3,0
Separating File: rc.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/rc.ts,21,0,0,0
Separating File: common.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/common.ts,3,0,0,0
Separating File: Introspector.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/Introspector.ts,20,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/index.ts,2,0,0,0
Separating File: SDLInferrer.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/SDLInferrer.ts,157,7,7,0
Separating File: PostgresConnector.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/connectors/PostgresConnector.ts,247,4,4,0
Separating File: graphql.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/types/graphql.ts,85,7,7,0
Separating File: common.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/types/common.ts,61,5,5,0
Separating File: largeSchema.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/largeSchema.test.ts,859,7,7,0
Separating File: scalars.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/scalars.test.ts,93,0,0,0
Separating File: connectionDetails.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/connectionDetails.ts,6,0,0,0
Separating File: ambiguous-relation.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/ambiguous-relation.test.ts,133,1,1,0
Separating File: chinook.test.ts
Script: Chinook_PostgreSql.sql - 1
Description: Creates and populates the Chinook database. - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/chinook.test.ts,182,10,8,2
Separating File: self-ambiguous-relation.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/self-ambiguous-relation.test.ts,57,4,4,0
Separating File: relations.test.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/relations.test.ts,71,0,0,0
Separating File: waitUntilTagPublished.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/scripts/waitUntilTagPublished.js,27,1,1,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-unit-tests/src/index.js,15,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-unit-tests/src/resolvers/index.js,26,0,0,0
Separating File: getPrismaTestInstance.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-unit-tests/tests/getPrismaTestInstance.js,11,0,0,0
Separating File: draftsResolver.test.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-unit-tests/tests/draftsResolver.test.js,24,2,2,0
Separating File: createPostResolver.test.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-unit-tests/tests/createPostResolver.test.js,42,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/cli-tool/src/index.js,50,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/resolver-forwarding/src/index.js,22,0,0,0
Separating File: auth.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/permissions/src/auth.js,98,8,8,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/permissions/src/index.js,35,5,4,1
Separating File: users.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/permissions/src/users.js,8,0,0,0
Separating File: utils.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/permissions/src/utils.js,22,0,0,0
Separating File: posts.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/permissions/src/posts.js,70,0,0,0
Separating File: github.ts
api.github.com/user?access_token=${githubToken}` - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/github.ts,37,1,0,1
Separating File: index.ts
localhost:4000`)) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/index.ts,17,4,3,1
Separating File: utils.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/utils.ts,29,0,0,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/resolvers/index.ts,14,0,0,0
Separating File: notes.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/resolvers/Mutation/notes.ts,37,0,0,0
Separating File: auth.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/resolvers/Mutation/auth.ts,36,2,2,0
Separating File: me.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/resolvers/Query/me.ts,5,0,0,0
Separating File: note.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/resolvers/Query/note.ts,12,0,0,0
Separating File: prisma.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/github-auth/src/generated/prisma.ts,783,4,4,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/resolver-forwarding/src/index.js,17,5,4,1
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/resolver-forwarding/src/resolvers/index.js,6,0,0,0
Separating File: Mutation.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/resolver-forwarding/src/resolvers/Mutation.js,15,7,7,0
Separating File: Query.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/resolver-forwarding/src/resolvers/Query.js,14,6,6,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/subscriptions/src/index.js,55,1,0,1
Separating File: auth.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/auth/src/auth.js,41,4,4,0
Separating File: index.js
localhost:4000`)) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/auth/src/index.js,28,5,4,1
Separating File: utils.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/auth/src/utils.js,22,0,0,0
Separating File: index.ts
localhost:4000`)) - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/file-handling-s3/src/index.ts,36,4,3,1
Separating File: utils.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/file-handling-s3/src/utils.ts,11,0,0,0
Separating File: fileAPI.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/file-handling-s3/src/modules/fileAPI.ts,54,2,2,0
Separating File: index.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/file-handling-s3/src/resolvers/index.ts,14,0,0,0
Separating File: file.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/file-handling-s3/src/resolvers/Mutation/file.ts,11,2,2,0
Separating File: prisma.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/archive/file-handling-s3/src/generated/prisma.ts,493,4,4,0
Separating File: index.js
localhost:${port}`), - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions-with-shield/src/index.js,28,1,0,1
Separating File: utils.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions-with-shield/src/utils.js,73,0,0,0
Separating File: index.js
assignRole: rules.isAdmin, - 1
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions-with-shield/src/permissions/index.js,55,2,1,1
Separating File: AuthPayload.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions-with-shield/src/resolvers/AuthPayload.js,10,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions-with-shield/src/resolvers/index.js,8,0,0,0
Separating File: Mutation.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions-with-shield/src/resolvers/Mutation.js,102,0,0,0
Separating File: Query.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/permissions-with-shield/src/resolvers/Query.js,6,0,0,0
Separating File: prisma.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/yml-structure/src/generated/prisma.ts,507,10,10,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/subscriptions/src/index.js,28,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/authentication/src/index.js,56,0,0,0
Separating File: utils.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/authentication/src/utils.js,22,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/application-server/src/index.js,40,0,0,0
Separating File: generated-prisma.ts
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/graphql-authentication/prisma/generated-prisma.ts,2,2,2,0
Separating File: permissions.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/graphql-authentication/src/permissions.js,9,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/graphql-authentication/src/index.js,37,0,0,0
Separating File: index.js
prisma,1.14.1,/home/vitormelo/poc/scrapper/repos/prisma/examples/graphql-authentication/src/resolvers/index.js,33,0,0,0
Separating File: typings.d.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings.d.ts,4,0,0,0
Separating File: requests.js
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/requests.js,0,0,0,0
Separating File: init.js
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/init.js,6,0,0,0
Separating File: hello.js
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/test-project/src/hello.js,7,0,0,0
Separating File: global.d.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings/global.d.ts,7,1,1,0
Separating File: Help.ts
TODO: command (cmd: Class<Command<>>): string { - 1
TODO: commandLine (cmd: Class<Command<>>): [string, ?string] { - 1
TODO renderFlags (flags: [string, Flag][]): string { - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Help.ts,143,4,1,3
Separating File: fs.ts
if (process.env.NODE_ENV === 'test') { - 1
reset() - 1
const fs = process.env.NODE_ENV === 'test' ? memfs : fse - 1
export function reset() { - 1
vol.reset() - 1
vol.fromJSON({ - 1
'test.out': '' - 1
}, process.cwd()) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/fs.ts,16,9,1,8
Separating File: NotFound.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/NotFound.ts,53,2,2,0
Separating File: Command.ts
import { Auth } from './Auth' - 1
auth: Auth - 1
this.auth = new Auth(this.out, this.config, this.env, this.client) - 1
this.client.setAuth(this.auth) - 1
if (mockDefinition) { - 1
this.definition.set(mockDefinition) - 1
if (mockRC) { - 1
this.env.localRC = mockRC - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.ts,141,10,2,8
Separating File: CLI.test.ts
test('runs the version command', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.code).toBe(0) - 1
}) - 1
test('errors with invalid arguments', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version', '--invalid-flag'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.message).toContain('Unexpected argument --invalid-flag') - 1
}) - 1
test('errors when command not found', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'foobar12345'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
if (!err.code) { - 1
throw err - 1
expect(err.code).toEqual(127) - 1
}) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.test.ts,86,26,0,26
Separating File: Config.ts
Paths - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.ts,238,7,6,1
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/index.ts,29,0,0,0
Separating File: Parser.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.ts,156,6,6,0
Separating File: Parser.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.test.ts,139,1,1,0
Separating File: Command.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.test.ts,61,1,1,0
Separating File: Config.oldtest.ts
import {Config} from './Config' - 1
const mockDotFile = { - 1
"token": "test-token" - 1
describe('config', () => { - 1
test('should init paths correct in subfolder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(os.tmpdir(), `${cuid()}`) - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.definitionDir).toBe(definitionDir) - 1
expect(config.definitionPath).toBe(path.join(definitionDir, 'prisma.yml')) - 1
}) - 1
test('should allow .prismarc file in current folder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(home, 'definition') - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const dotPrismaPath = path.join(definitionDir, '.prismarc') - 1
fs.writeFileSync(dotPrismaPath, JSON.stringify(mockDotFile)) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.localRCPath).toBe(dotPrismaPath) - 1
}) - 1
}) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.oldtest.ts,33,32,4,28
Separating File: StatusChecker.ts
doJobs(options.cachePath, options.request) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/StatusChecker.ts,179,3,2,1
Separating File: CLI.ts
if nothing is found, try again with taking what is before : - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.ts,287,3,2,1
Separating File: util.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/util.ts,71,0,0,0
Separating File: defaultDefinition.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/defaultDefinition.ts,76,0,0,0
Separating File: Topic.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Topic.ts,17,0,0,0
Separating File: mock.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/mock.ts,82,0,0,0
Separating File: check.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/check.ts,3,0,0,0
Separating File: number.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/number.ts,7,0,0,0
Separating File: string.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/string.ts,7,0,0,0
Separating File: boolean.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/boolean.ts,7,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/index.ts,22,0,0,0
Separating File: Dispatcher.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Dispatcher/Dispatcher.ts,118,5,5,0
Separating File: migration.ts
group types, - 1
const groupedByType = groupBy(steps, m => m.type) - 1
Object.keys(groupedByType).forEach(type => { - 1
const typeMessages = groupedByType[type] - 1
this.out.log('\n' + printType(type) + '\n') - 1
const groupedByName = groupBy(typeMessages, m => m.name.split('.')[0]) - 1
Object.keys(groupedByName).forEach(name => { - 1
this.out.log(`  ${chalk.bold(name)}`) - 1
const nameMessages = groupedByName[name] - 1
nameMessages.forEach(this.printMigrationMessage, this) - 1
}) - 1
}) - 1
this.out.log('') - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.ts,263,13,0,13
Separating File: Prompter.ts
Ctrl-c - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/Prompter.ts,113,3,2,1
Separating File: migration.describe.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.describe.ts,8,0,0,0
Separating File: spinners.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/spinners.ts,738,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/index.ts,373,5,5,0
Separating File: table.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/table.ts,134,17,17,0
Separating File: StreamOutput.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/StreamOutput.ts,62,1,1,0
Separating File: util.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/util.ts,13,0,0,0
Separating File: subtle.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/subtle.ts,149,4,4,0
Separating File: steps.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/fixtures/steps.ts,157,0,0,0
Separating File: ActionBase.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/ActionBase.ts,96,1,1,0
Separating File: SimpleAction.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SimpleAction.ts,44,1,1,0
Separating File: screen.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/screen.ts,15,0,0,0
Separating File: SpinnerAction.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SpinnerAction.ts,83,0,0,0
Separating File: Client.ts
if (process.env.NODE_ENV === 'test') { - 1
Client.prototype.mock = function({ request, response }) { - 1
if (!this.mocks) { - 1
this.mocks = {} - 1
this.mocks[JSON.stringify(request, null, 2)] = response - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.ts,918,12,7,5
Separating File: types.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/types.ts,86,7,7,0
Separating File: introspectionQuery.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/introspectionQuery.ts,91,0,0,0
Separating File: Client.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.test.ts,17,0,0,0
Separating File: ping.ts
dynamodb.${region.toLowerCase().replace(/_/g, '-')}.amazonaws.com` - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/ping.ts,43,1,0,1
Separating File: RequiredFlagError.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/RequiredFlagError.ts,5,0,0,0
Separating File: CommandRemovedError.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/CommandRemovedError.ts,13,0,0,0
Separating File: PromptMaskError.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/PromptMaskError.ts,1,0,0,0
Separating File: ExitError.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/ExitError.ts,7,0,0,0
Separating File: CommandReplacedError.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/CommandReplacedError.ts,11,0,0,0
Separating File: isGlobal.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/utils/isGlobal.ts,26,0,0,0
Separating File: rc.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/rc.ts,23,0,0,0
Separating File: common.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/common.ts,120,2,2,0
Separating File: Plugin.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugin.ts,80,1,1,0
Separating File: CorePlugins.ts
if (this.config.pjson.main) { - 1
if main is set in package.json, add plugin as self - 1
plugins.push(new PluginPath({output: this.out, type: 'core', path: this.config.root})) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/CorePlugins.ts,37,6,3,3
Separating File: Manager.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Manager.ts,26,1,1,0
Separating File: Cache.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Cache.ts,188,1,1,0
Separating File: BuiltInPlugins.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/BuiltInPlugins.ts,13,2,2,0
Separating File: Lock.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Lock.ts,42,7,7,0
Separating File: rwlockfile.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/rwlockfile.ts,234,15,15,0
Separating File: Plugins.ts
linked: LinkedPlugins - 1
user: UserPlugins - 1
this.linked = new LinkedPlugins(this) - 1
this.user = new UserPlugins(this) - 1
this.linked, - 1
this.user, - 1
async install(name: string, tag: string = 'latest') { - 1
const downgrade = await this.lock.upgrade() - 1
await this.load() - 1
if (this.plugins.find(p => p.name === name && p.tag === tag)) { - 1
throw new Error(`Plugin ${name} is already installed`) - 1
const path = await this.user.install(name, tag) - 1
this.clearCache(path) - 1
await downgrade() - 1
async update() { - 1
if (this.user.list().length === 0) return - 1
this.out.action.start(`${this.config.name}: Updating plugins`) - 1
let downgrade = await this.lock.upgrade() - 1
await this.user.update() - 1
this.clearCache(...(await this.user.list()).map(p => p.path)) - 1
await downgrade() - 1
async uninstall(name: string) { - 1
await this.load() - 1
let plugin = this.plugins.filter(p => ['user', 'link'].includes(p.type)).find(p => p.name === name) - 1
if (!plugin) throw new Error(`${name} is not installed`) - 1
let downgrade = await this.lock.upgrade() - 1
switch (plugin.type) { - 1
case 'user': { - 1
if (!this.config.debug) this.out.action.start(`Uninstalling plugin ${name}`) - 1
await this.user.remove(name) - 1
break - 1
case 'link': { - 1
if (!this.config.debug) this.out.action.start(`Unlinking plugin ${name}`) - 1
this.linked.remove(plugin.path) - 1
break - 1
this.clearCache(plugin.path) - 1
await downgrade() - 1
this.out.action.stop() - 1
addPackageToPJSON(name: string, version: string = '') { - 1
this.user.addPackageToPJSON(name, version) - 1
async addLinkedPlugin(p: string) { - 1
let downgrade = await this.lock.upgrade() - 1
await this.load() - 1
await this.linked.add(p) - 1
this.clearCache(p) - 1
await downgrade() - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugins.ts,189,46,0,46
Separating File: PluginPath.ts
process.env.CACHE_REQUIRE_PATHS_FILE = this.config.requireCachePath - 1
require('cache-require-paths') - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/PluginPath.ts,185,5,3,2
Separating File: help.ts
const list = groupTopics.map(t => [ - 1
t.id, - 1
t.description ? chalk.dim(t.description) : null, - 1
]) - 1
console.log(cmds) - 1
if (t.id === 'cluster') { - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/help.ts,173,9,3,6
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/index.ts,10,0,0,0
Separating File: version.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/version.ts,9,0,0,0
Separating File: requests.js
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/requests.js,40,0,0,0
Separating File: init.js
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/test/init.js,6,0,0,0
Separating File: BufferedConsole.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/BufferedConsole.ts,37,1,1,0
Separating File: getConsoleOutput.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/getConsoleOutput.ts,32,0,0,0
Separating File: index.ts
import Auth from './commands/auth/index' - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/index.ts,154,5,4,1
Separating File: examples.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/examples.ts,197,7,7,0
Separating File: util.ts
${devPrefix}console.graph.cool/token?token=${token}${ - 1
export const playgroundURL = (token: string, projectName: string) => - 1
managementApiSecret: somesecret - 1
databases: - 1
default: - 1
connector: mysql - 1
active: true - 1
port: 3306 - 1
user: someuser - 1
password: existingpw - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/util.ts,66,16,6,10
Separating File: spawn.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/spawn.ts,32,0,0,0
Separating File: getTmpDir.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/getTmpDir.ts,9,0,0,0
Separating File: mock-requests.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-requests.ts,86,0,0,0
Separating File: mock-client.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-client.ts,21,0,0,0
Separating File: writeToStdin.ts
process.stdin.end() - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/writeToStdin.ts,19,1,0,1
Separating File: ServiceDoesntExistError.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/errors/ServiceDoesntExistError.ts,5,0,0,0
Separating File: EndpointDialog.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.test.ts,52,0,0,0
Separating File: dockerComposeInstalled.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/dockerComposeInstalled.ts,21,0,0,0
Separating File: EndpointDialog.ts
message: `Connect to your database, set up a new one or use hosted sandbox?`, - 1
pageSize: 9, - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.ts,830,8,6,2
Separating File: crypto.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/crypto.ts,15,0,0,0
Separating File: types.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/types.ts,17,0,0,0
Separating File: Validator.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.test.ts,439,0,0,0
Separating File: Importer.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.ts,245,0,0,0
Separating File: Validator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.ts,405,2,2,0
Separating File: index.ts
continue - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/index.ts,59,1,0,1
Separating File: Validator.describe.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.describe.ts,10,0,0,0
Separating File: Importer.describe.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.describe.ts,24,0,0,0
Separating File: makeData.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/fixtures/basic/makeData.ts,78,0,0,0
Separating File: Normalizer.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/normalizers/Normalizer.ts,1,0,0,0
Separating File: Exporter.describe.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.describe.ts,14,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/index.ts,60,0,0,0
Separating File: Exporter.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.ts,122,0,0,0
Separating File: introspect.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/introspect/introspect.ts,116,0,0,0
Separating File: inquirer-mock-prompt.ts
inquirer.prompt = promptMock - 1
return inquirer - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/inquirer-mock-prompt.ts,127,15,13,2
Separating File: index.ts
bit.ly/prisma-introspection`, - 1
bit.ly/prisma-server-overview`, - 1
bit.ly/prisma-deploy-services`, - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/index.ts,233,5,2,3
Separating File: index.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/index.test.ts,77,1,1,0
Separating File: old.ts
import { Command, flags, Flags, ProjectDefinition } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { defaultDefinition, defaultPjson, examples } from '../../examples' - 1
import { repeat, flatten } from 'lodash' - 1
export default class Init extends Command { - 1
static topic = 'init' - 1
static description = 'Create files for new services' - 1
static group = 'general' - 1
static help = ` - 1
${chalk.green.bold('Examples:')} - 1
${chalk.gray('-')} Initialize a new Prisma service - 1
${chalk.green('$ prisma init')} - 1
static flags: Flags = { - 1
force: flags.boolean({ - 1
char: 'f', - 1
'Initialize even if the folder already contains prisma files', - 1
}), - 1
copy: flags.string({ - 1
char: 'c', - 1
'ID or alias of the service, that the schema should be copied from', - 1
}), - 1
static args = [ - 1
name: 'dirName', - 1
description: 'Folder to initialize in (optional)', - 1
}, - 1
async run() { - 1
const { copy, force } = this.flags - 1
const dirName = this.args!.dirName - 1
if (dirName) { - 1
const newDefinitionPath = path.join(process.cwd(), dirName + '/') - 1
fs.mkdirpSync(newDefinitionPath) - 1
this.config.definitionDir = newDefinitionPath - 1
this.config.localRCPath = path.join(newDefinitionPath, '.prismarc') - 1
const pjson = { - 1
...defaultPjson, - 1
name: path.basename(this.config.definitionDir), - 1
const files = fs.readdirSync(this.config.definitionDir) - 1
if ( - 1
files.length > 0 && - 1
!(files.length === 1 && files[0] === '.prismarc') && - 1
files.includes('prisma.yml') - 1
) { - 1
this.out.log(` - 1
The directory ${chalk.green( - 1
this.config.definitionDir, - 1
)} contains files that could conflict: - 1
${files.map(f => `  ${f}`).join('\n')} - 1
${chalk.bold( - 1
'NOTE:', - 1
)} The behavior of the init command changed, to deploy a project, please use ${chalk.green( - 1
'prisma deploy', - 1
)} - 1
To force the init process in this folder, use ${chalk.green( - 1
'prisma init --force', - 1
)}`) - 1
if (force) { - 1
await this.askForConfirmation(this.config.definitionDir) - 1
} else { - 1
this.out.exit(1) - 1
if (template) { - 1
const projectDefinition = examples[template] - 1
if (!projectDefinition) { - 1
this.out.error(`${template} is not a valid template`) - 1
this.definition.set(projectDefinition) - 1
if (copy) { - 1
const info = await this.client.fetchProjectInfo(copy) - 1
this.definition.set(info.projectDefinition) - 1
if (!this.definition.definition) { - 1
const newDefinition = await this.interactiveInit() - 1
const newDefinition = defaultDefinition - 1
this.definition.set(newDefinition) - 1
let relativeDir = path.relative(process.cwd(), this.config.definitionDir) - 1
relativeDir = relativeDir.length === 0 ? '.' : relativeDir - 1
this.out.action.start( - 1
`Creating a new Prisma service in ${chalk.green(relativeDir)}`, - 1
this.definition.save(undefined, false) - 1
this.out.action.stop() - 1
this.out.log(`${chalk.dim.bold('\nWritten files' + ':')}`) - 1
fs.writeFileSync( - 1
path.join(this.config.definitionDir, 'package.json'), - 1
JSON.stringify(pjson, null, 2), - 1
const createdFiles = flatten( - 1
this.definition.definition!.modules.map(module => - 1
Object.keys(module.files), - 1
), - 1
).concat(['prisma.yml', 'package.json']) - 1
this.out.filesTree(createdFiles) - 1
const cdInstruction = - 1
relativeDir === '.' - 1
? '' - 1
: `To get started, cd into the new directory: - 1
${chalk.green(`cd ${relativeDir}`)} - 1
${chalk.green('prisma deploy')} - 1
${chalk.green('prisma local up')} - 1
${chalk.green('prisma add-template auth/facebook')} - 1
`) - 1
async interactiveInit(): Promise<ProjectDefinition> { - 1
const initQuestion = { - 1
name: 'init', - 1
type: 'list', - 1
message: 'How do you want to start?', - 1
choices: [ - 1
value: 'blank', - 1
name: [ - 1
`${chalk.bold('New blank service')}`, - 1
`  Creates a new Prisma service from scratch.`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'copy', - 1
name: [ - 1
`${chalk.bold('Copying an existing service')}`, - 1
`  Copies a service from your account`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'example', - 1
name: [ - 1
`${chalk.bold('Based on example')}`, - 1
`  Creates a new Prisma service based on an example`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 13, - 1
const { init } = await this.out.prompt([initQuestion]) - 1
switch (init) { - 1
case 'blank': - 1
this.out.up(7) - 1
return defaultDefinition - 1
case 'copy': - 1
await this.auth.ensureAuth() - 1
const projectId = await this.projectSelection() - 1
this.out.up(4) - 1
const info = await this.client.fetchProjectInfo(projectId) - 1
return info.projectDefinition - 1
case 'example': - 1
return await this.exampleSelection() - 1
return null as any - 1
private async projectSelection() { - 1
const projects = await this.client.fetchProjects() - 1
const choices = projects - 1
.map(p => ({ - 1
name: `${p.name} (${p.id})`, - 1
value: p.id, - 1
})) - 1
.concat(new inquirer.Separator(chalk.bold.green(repeat('-', 50)))) - 1
const question = { - 1
name: 'project', - 1
type: 'list', - 1
message: 'Please choose a project', - 1
choices, - 1
pageSize: Math.min(process.stdout.rows!, projects.length) - 2, - 1
const { project } = await this.out.prompt([question]) - 1
return project - 1
private async exampleSelection(): Promise<ProjectDefinition> { - 1
const question = { - 1
name: 'example', - 1
type: 'list', - 1
message: 'Please choose an example', - 1
choices: [ - 1
value: 'instagram', - 1
name: [ - 1
`${chalk.bold('Instagram')}`, - 1
`Contains an instagram clone with permission logic`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'stripe', - 1
name: [ - 1
`${chalk.bold('Stripe Checkout')}`, - 1
`An example integrating the stripe checkout with schema extensions`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'sendgrid', - 1
name: [ - 1
`${chalk.bold('Sendgrid Mails')}`, - 1
`An example that shows how to connect Prisma to the Sendgrid API`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 12, - 1
const { example } = await this.out.prompt(question) - 1
return examples[example] - 1
private async askForConfirmation(folder: string) { - 1
const confirmationQuestion = { - 1
name: 'confirmation', - 1
type: 'input', - 1
message: `Are you sure that you want to init a new service in ${chalk.green( - 1
folder, - 1
)}? y/N`, - 1
default: 'n', - 1
const { confirmation }: { confirmation: string } = await this.out.prompt( - 1
confirmationQuestion, - 1
if (confirmation.toLowerCase().startsWith('n')) { - 1
this.out.exit(0) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/old.ts,247,212,14,198
Separating File: logout.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/logout/logout.ts,10,0,0,0
Separating File: token.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/token.ts,39,0,0,0
Separating File: cluster-token.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/cluster-token.ts,36,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/console/index.ts,13,2,2,0
Separating File: reset.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/reset/reset.ts,66,0,0,0
Separating File: index.ts
g, '0') - 1
?cwd=${process.cwd()}&envPath=${envPath}` - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/playground/index.ts,132,4,2,2
Separating File: seed.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/seed.ts,68,1,1,0
Separating File: Seeder.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/Seeder.ts,148,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/info/index.ts,95,0,0,0
Separating File: account.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/account/account.ts,19,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/list/index.ts,71,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init-prisma/index.ts,8,1,1,0
Separating File: getTmpDir.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/generate/getTmpDir.ts,9,0,0,0
Separating File: generate.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/generate/generate.ts,261,3,3,0
Separating File: index.ts
const { id } = await this.env.getTarget(stage) - 1
continue - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/example-command/index.ts,18,2,0,2
Separating File: index.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
export default class Auth extends Command { - 1
static topic = 'login' - 1
static description = 'Login or signup to the Prisma Platform' - 1
static group = 'platform' - 1
static help = ` - 1
${chalk.green('Examples:')} - 1
${chalk.gray('-')} Authenticate using the browser - 1
${chalk.green('$ prisma login')} - 1
${chalk.green('$ prisma login -t <token>')} - 1
static flags: Flags = { - 1
token: flags.string({ - 1
char: 'T', - 1
description: 'System token', - 1
}), - 1
async run() { - 1
const { token } = this.flags - 1
if (token) { - 1
this.out.log('Using token from --token flag') - 1
this.auth.setToken(token) - 1
const alreadyAuthenticated = await this.auth.ensureAuth() - 1
if (token) { - 1
this.env.setToken(token) - 1
this.env.saveGlobalRC() - 1
this.out.log( - 1
`Saved new token to ${chalk.bold(this.config.globalRCPath)}`, - 1
} else if (alreadyAuthenticated) { - 1
this.out.log( - 1
`You are already authenticated. Your local token is saved at ${chalk.bold( - 1
this.config.globalRCPath, - 1
)}`, - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/auth/index.ts,43,35,3,32
Separating File: getSchemaPathFromConfig.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.ts,22,1,1,0
Separating File: getSchemaPathFromConfig.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.test.ts,15,0,0,0
Separating File: index.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/index.test.ts,46,0,0,0
Separating File: emptyDefinition.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/emptyDefinition.ts,14,0,0,0
Separating File: deploy.ts
this.out.migrati - 1
const clusters = this.env.clusters.filter(c => !c.shared && !c.isPrivate) - 1
const clusterNames: string[][] = clusters.map(c => { - 1
const note = - 1
c.baseUrl.includes('localhost') || c.baseUrl.includes('127.0.0.1') - 1
? 'Local cluster (requires Docker)' - 1
: 'Self-hosted' - 1
return [c.name, note] - 1
}) - 1
if (clusterNames.length === 0) { - 1
clusterNames.push(['local', 'Local cluster (requires Docker)']) - 1
return clusterNames - 1
const workspaces = await this.client.getWorkspaces() - 1
const clusters = this.env.clusters.filter( - 1
c => c.shared && c.name !== 'shared-public-demo', - 1
bit.ly/prisma-graphql-deployment`, - 1
bit.ly/prisma-graphql-deployment`, - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/deploy.ts,575,32,15,17
Separating File: getbin.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getbin.ts,26,0,0,0
Separating File: printSchema.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/printSchema.ts,82,1,1,0
Separating File: default_definition.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/default_definition.ts,134,7,7,0
Separating File: local_instance.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/local_instance.ts,113,7,7,0
Separating File: hello.js
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/test-project/src/hello.js,7,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/delete/index.ts,62,0,0,0
Separating File: login.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/login/login.ts,16,0,0,0
Separating File: function.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { sortByTimestamp } from '../../util' - 1
import {flatMap} from 'lodash' - 1
const debug = require('debug')('logs') - 1
export default class FunctionLogs extends Command { - 1
static topic = 'logs' - 1
static description = 'Output service logs' - 1
static group = 'general' - 1
static flags: Flags = { - 1
stage: flags.string({ - 1
char: 't', - 1
description: 'Target to get logs from', - 1
}), - 1
tail: flags.boolean({ - 1
description: 'Tail function logs in realtime', - 1
}), - 1
function: flags.string({ - 1
char: 'f', - 1
description: 'Name of the function to get the logs from', - 1
}), - 1
async run() { - 1
const { tail, stage } = this.flags - 1
const functionName = this.flags.function - 1
const {id} = await this.env.getTarget(stage) - 1
debug(`function name ${functionName}`) - 1
debug(`service id ${id}`) - 1
await this.auth.ensureAuth() - 1
if (!functionName) { - 1
await this.provideAllFunctionLogs(id, tail) - 1
} else { - 1
await this.provideSingleFunctionLogs(id, functionName, tail) - 1
private async provideAllFunctionLogs(id: string, tail?: boolean) { - 1
let logs = (await this.client.getAllFunctionLogs(id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for service ${chalk.bold( - 1
id, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getAllFunctionLogs(id, 50) - 1
if (tailLogs) { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
} else { - 1
this.out.log(`Service ${id} can't be found anymore`) - 1
}, 4000) - 1
private async provideSingleFunctionLogs(id: string, functionName: string, tail?: boolean) { - 1
let fn = await this.client.getFunction(id, functionName) - 1
if (!fn) { - 1
this.out.error( - 1
`There is no function with the name ${functionName}. Run ${chalk.bold( - 1
'prisma functions', - 1
)} to list all functions.`, - 1
} else { - 1
let logs = (await this.client.getFunctionLogs(fn.id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for function ${chalk.bold( - 1
functionName, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getFunctionLogs(fn!.id, 50) - 1
if (tailLogs === null) { - 1
fn = await this.client.getFunction(id, functionName) - 1
} else { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
}, 4000) - 1
private prettifyLogs(logs: any) { - 1
return logs - 1
.map(log => { - 1
const json = JSON.parse(log.message) - 1
if (json.event) { - 1
try { - 1
json.event = JSON.parse(json.event) - 1
} catch (e) { - 1
const styleLog = (l: string) => { - 1
const logs = this.lambdaToArray(l) - 1
let potentialJson = l.slice(62).trim() - 1
try { - 1
potentialJson = JSON.parse(potentialJson) - 1
} catch (e) { - 1
return { - 1
[l.slice(0, 24)]: potentialJson, - 1
if (json.logs) { - 1
json.logs = flatMap(json.logs.map(this.lambdaToArray)).map(styleLog) - 1
const prettyMessage = this.out.getStyledJSON(json) - 1
const status = log.status === 'SUCCESS' ? 'green' : 'red' - 1
return `${chalk.cyan.bold(log.timestamp)} ${chalk.blue.bold( - 1
`${log.duration}ms`, - 1
)} ${chalk.bold[status](log.status)} ${prettyMessage}` - 1
}) - 1
.join('\n') - 1
private lambdaToArray(logs: string): string[] { - 1
logs = logs.replace(/\t/g, '  ') - 1
const regex = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+. - 1
const lines = logs.split('\n') - 1
.filter(l => !l.startsWith('START') && !l.startsWith('END') && !l.startsWith('REPORT')) - 1
const merged = lines - 1
.reduce((acc, curr, index) => { - 1
if (lines[index + 1] && lines[index + 1].match(regex)) { - 1
return { - 1
lines: acc.lines.concat(acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr), - 1
currentLine: '' - 1
} else { - 1
return { - 1
lines: acc.lines, - 1
currentLine: acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr, - 1
}, { - 1
lines: [] as any, - 1
currentLine: '' - 1
}) - 1
return merged.lines.concat(merged.currentLine) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/logs/function.ts,166,133,3,130
Separating File: index.ts
import 'require-onct' - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli/src/index.ts,16,1,0,1
Separating File: databaseType.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/databaseType.ts,5,1,1,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/index.ts,44,12,12,0
Separating File: gqlAssert.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/util/gqlAssert.ts,18,0,0,0
Separating File: util.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/util/util.ts,16,0,0,0
Separating File: astTools.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/util/astTools.ts,170,11,11,0
Separating File: english.ts
For instance: - 1
English.plural("cat") == "cats"; - 1
For instance: - 1
English.plural("cat", 1) == "cat"; - 1
English.plural("cat", 2) == "cats"; - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/util/inflector/english.ts,427,61,56,5
Separating File: twoFormInflector.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/util/inflector/twoFormInflector.ts,94,10,10,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/index.ts,12,0,0,0
Separating File: generator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/generator.ts,520,91,91,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/index.ts,7,0,0,0
Separating File: modelOrderByInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/query/modelOrderByInputGenerator.ts,29,2,2,0
Separating File: modelWhereInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/query/modelWhereInputGenerator.ts,13,1,1,0
Separating File: schemaGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/schemaGenerator.ts,15,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/index.ts,189,2,2,0
Separating File: mutationGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/mutationGenerator.ts,164,1,1,0
Separating File: modelUpdateWithWhereUniqueNestedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateWithWhereUniqueNestedInputGenerator.ts,14,0,0,0
Separating File: modelUpdateManyWithWhereNestedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyWithWhereNestedInputGenerator.ts,17,0,0,0
Separating File: modelUpdateInputGenerator.ts
this.getRelationFields(model.fields).every(field => ModelUpdateInputGenerator.relationWouldBeEmpty(model, field, this.generators)) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateInputGenerator.ts,68,7,6,1
Separating File: modelUpdateWithoutRelatedDataInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateWithoutRelatedDataInputGenerator.ts,19,0,0,0
Separating File: scalarListUpdateInput.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/scalarListUpdateInput.ts,20,0,0,0
Separating File: modelUpdateManyMutationInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyMutationInputGenerator.ts,33,0,0,0
Separating File: modelUpdateOneInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneInputGenerator.ts,23,0,0,0
Separating File: modelUpdateOneRequiredWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneRequiredWithoutRelatedInputGenerator.ts,22,0,0,0
Separating File: modelUpdateWithWhereUniqueWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateWithWhereUniqueWithoutRelatedInputGenerator.ts,16,0,0,0
Separating File: modelUpdateManyDataInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyDataInputGenerator.ts,14,0,0,0
Separating File: modelUpdateManyInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyInputGenerator.ts,34,0,0,0
Separating File: modelUpdateOneRequiredInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneRequiredInputGenerator.ts,21,0,0,0
Separating File: modelUpdateOneWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneWithoutRelatedInputGenerator.ts,26,0,0,0
Separating File: modelUpdateManyWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyWithoutRelatedInputGenerator.ts,28,0,0,0
Separating File: modelUpdateDataInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateDataInputGenerator.ts,7,0,0,0
Separating File: batchPayloadGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/updateMany/batchPayloadGenerator.ts,24,1,1,0
Separating File: modelUpsertWithWhereUniqueWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertWithWhereUniqueWithoutRelatedInputGenerator.ts,24,0,0,0
Separating File: modelUpsertWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertWithoutRelatedInputGenerator.ts,38,1,1,0
Separating File: modelUpsertNestedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertNestedInputGenerator.ts,30,1,1,0
Separating File: modelUpsertWithWhereUniqueNestedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertWithWhereUniqueNestedInputGenerator.ts,19,0,0,0
Separating File: modelCreateInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateInputGenerator.ts,62,5,5,0
Separating File: modelCreateOneWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateOneWithoutRelatedInputGenerator.ts,14,0,0,0
Separating File: modelCreateWithoutRelatedInputGenerator.ts.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateWithoutRelatedInputGenerator.ts.ts,21,1,1,0
Separating File: modelCreateManyWithoutRelatedInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateManyWithoutRelatedInputGenerator.ts,31,1,1,0
Separating File: scalarListCreateInput.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/scalarListCreateInput.ts,20,0,0,0
Separating File: modelCreateManyInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateManyInputGenerator.ts,29,1,1,0
Separating File: modelCreateOneInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateOneInputGenerator.ts,12,0,0,0
Separating File: scalarTypeGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/scalar/scalarTypeGenerator.ts,113,9,9,0
Separating File: modelEnumTypeGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/scalar/modelEnumTypeGenerator.ts,19,0,0,0
Separating File: manyQueryArgumentsGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/manyQueryArgumentsGenerator.ts,16,0,0,0
Separating File: nodeGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/nodeGenerator.ts,15,0,0,0
Separating File: modelScalarWhereInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelScalarWhereInputGenerator.ts,15,0,0,0
Separating File: oneQueryArgumentsGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/oneQueryArgumentsGenerator.ts,11,0,0,0
Separating File: modelEdgeGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelEdgeGenerator.ts,19,0,0,0
Separating File: aggregateModelGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/aggregateModelGenerator.ts,16,0,0,0
Separating File: modelGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelGenerator.ts,20,0,0,0
Separating File: modelConnectionGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelConnectionGenerator.ts,28,0,0,0
Separating File: modelWhereUniqueInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelWhereUniqueInputGenerator.ts,20,0,0,0
Separating File: queryGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/queryGenerator.ts,54,0,0,0
Separating File: modelOrderByInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelOrderByInputGenerator.ts,32,1,1,0
Separating File: uniqueQueryArgumentsGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/uniqueQueryArgumentsGenerator.ts,16,0,0,0
Separating File: modelWhereInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelWhereInputGenerator.ts,125,4,4,0
Separating File: pageInfoGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/pageInfoGenerator.ts,23,0,0,0
Separating File: modelSubscriptionWhereInputGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/modelSubscriptionWhereInputGenerator.ts,25,0,0,0
Separating File: modelPreviousValuesGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/modelPreviousValuesGenerator.ts,13,0,0,0
Separating File: subscriptionGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/subscriptionGenerator.ts,30,0,0,0
Separating File: mutationTypeGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/mutationTypeGenerator.ts,17,0,0,0
Separating File: modelSubscriptionPayloadGenerator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/modelSubscriptionPayloadGenerator.ts,25,0,0,0
Separating File: relationalParser.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/datamodel/relationalParser.ts,21,2,2,0
Separating File: model.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/datamodel/model.ts,121,26,26,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/datamodel/index.ts,12,0,0,0
Separating File: documentParser.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/datamodel/documentParser.ts,21,1,1,0
Separating File: parser.ts
public isEmbedded(type: any): boolean { - 1
return type.directives && - 1
type.directives.length > 0 && - 1
type.directives.some(d => d.name.value === 'embedded') - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/datamodel/parser.ts,312,82,78,4
Separating File: document.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/__tests__/parser/document.ts,40,0,0,0
Separating File: helpers.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/__tests__/parser/helpers.ts,35,2,2,0
Separating File: relational.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/__tests__/parser/relational.ts,31,0,0,0
Separating File: base.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/__tests__/parser/base.ts,73,0,0,0
Separating File: inflectorTest.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/__tests__/inflector/inflectorTest.ts,75,11,11,0
Separating File: blackBoxTest.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/__tests__/blackbox/blackBoxTest.ts,38,3,3,0
Separating File: fetchSchemaFromEndpoint.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/scripts/fetchSchemaFromEndpoint.ts,93,1,1,0
Separating File: Cluster.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Cluster.test.ts,58,0,0,0
Separating File: yaml.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/yaml.ts,76,5,5,0
Separating File: constants.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/constants.ts,10,0,0,0
Separating File: Environment.test.ts
localhost:60000`, '') - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.test.ts,57,1,0,1
Separating File: Output.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Output.ts,31,0,0,0
Separating File: Variables.ts
this.fileRefSyntax = RegExp(/^file\((~?[a-zA-Z0-9._\-/]+?)\)/g); - 1
this.cfRefSyntax = RegExp(/^cf:/g); - 1
this.s3RefSyntax = RegExp(/^s3:(.+?)\/(.+)$/); - 1
this.ssmRefSyntax = RegExp(/^ssm:([a-zA-Z0-9_.-/]+)[~]?(true|false)?/); - 1
return property; - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
return this.getValueFromFile(variableString); - 1
} else if (variableString.match(this.cfRefSyntax)) { - 1
return this.getValueFromCf(variableString); - 1
} else if (variableString.match(this.s3RefSyntax)) { - 1
return this.getValueFromS3(variableString); - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
return this.getValueFromSsm(variableString); - 1
getValueFromFile(variableString) { - 1
const matchedFileRefString = variableString.match(this.fileRefSyntax)[0]; - 1
const referencedFileRelativePath = matchedFileRefString - 1
.replace(this.fileRefSyntax, (match, varName) => varName.trim()) - 1
.replace('~', os.homedir()); - 1
const referencedFileFullPath = (path.isAbsolute(referencedFileRelativePath) ? - 1
referencedFileRelativePath : - 1
path.join(this.prisma.config.servicePath, referencedFileRelativePath)); - 1
let fileExtension = referencedFileRelativePath.split('.'); - 1
fileExtension = fileExtension[fileExtension.length - 1]; - 1
if (!this.prisma.utils.fileExistsSync(referencedFileFullPath)) { - 1
return BbPromise.resolve(undefined); - 1
let valueToPopulate; - 1
if (fileExtension === 'js') { - 1
const variableArray = variableString.split(':'); - 1
let returnValueFunction; - 1
if (variableArray[1]) { - 1
let jsModule = variableArray[1]; - 1
jsModule = jsModule.split('.')[0]; - 1
returnValueFunction = jsFile[jsModule]; - 1
} else { - 1
returnValueFunction = jsFile; - 1
if (typeof returnValueFunction !== 'function') { - 1
throw new this.prisma.classes - 1
.Error([ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is exporting a function that returns a value.', - 1
].join('')); - 1
valueToPopulate = returnValueFunction.call(jsFile); - 1
return BbPromise.resolve(valueToPopulate).then(valueToPopulateResolved => { - 1
let deepProperties = variableString.replace(matchedFileRefString, ''); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
deepProperties.splice(0, 1); - 1
return this.getDeepValue(deepProperties, valueToPopulateResolved) - 1
.then(deepValueToPopulateResolved => { - 1
if (typeof deepValueToPopulateResolved === 'undefined') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}".`, - 1
' Check if your javascript is returning the correct data.', - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
return BbPromise.resolve(deepValueToPopulateResolved); - 1
}); - 1
}); - 1
if (fileExtension !== 'js') { - 1
valueToPopulate = this.prisma.utils.readFileSync(referencedFileFullPath); - 1
if (matchedFileRefString !== variableString) { - 1
let deepProperties = variableString - 1
.replace(matchedFileRefString, ''); - 1
if (deepProperties.substring(0, 1) !== ':') { - 1
const errorMessage = [ - 1
'Invalid variable syntax when referencing', - 1
` file "${referencedFileRelativePath}" sub properties`, - 1
' Please use ":" to reference sub properties.', - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
deepProperties = deepProperties.slice(1).split('.'); - 1
return this.getDeepValue(deepProperties, valueToPopulate); - 1
return BbPromise.resolve(valueToPopulate); - 1
getValueFromCf(variableString) { - 1
const variableStringWithoutSource = variableString.split(':')[1].split('.'); - 1
const stackName = variableStringWithoutSource[0]; - 1
const outputLogicalId = variableStringWithoutSource[1]; - 1
return this.prisma.getProvider('aws') - 1
.request('CloudFormation', - 1
'describeStacks', - 1
{ StackName: stackName }, - 1
this.options.stage, - 1
this.options.region) - 1
.then(result => { - 1
const outputs = result.Stacks[0].Outputs; - 1
const output = outputs.find(x => x.OutputKey === outputLogicalId); - 1
if (output === undefined) { - 1
const errorMessage = [ - 1
'Trying to request a non exported variable from CloudFormation.', - 1
` Stack name: "${stackName}"`, - 1
` Requested variable: "${outputLogicalId}".`, - 1
].join(''); - 1
throw new this.prisma.classes - 1
.Error(errorMessage); - 1
return output.OutputValue; - 1
}); - 1
getValueFromS3(variableString) { - 1
const groups = variableString.match(this.s3RefSyntax); - 1
const bucket = groups[1]; - 1
const key = groups[2]; - 1
return this.prisma.getProvider('aws') - 1
.request('S3', - 1
'getObject', - 1
Bucket: bucket, - 1
Key: key, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => response.Body.toString(), - 1
err => { - 1
const errorMessage = `Error getting value for ${variableString}. ${err.message}`; - 1
throw new this.prisma.classes.Error(errorMessage); - 1
); - 1
getValueFromSsm(variableString) { - 1
const groups = variableString.match(this.ssmRefSyntax); - 1
const param = groups[1]; - 1
const decrypt = (groups[2] === 'true'); - 1
return this.prisma.getProvider('aws') - 1
.request('SSM', - 1
'getParameter', - 1
Name: param, - 1
WithDecryption: decrypt, - 1
}, - 1
this.options.stage, - 1
this.options.region) - 1
.then( - 1
response => BbPromise.resolve(response.Parameter.Value), - 1
err => { - 1
const expectedErrorMessage = `Parameter ${param} not found.`; - 1
if (err.message !== expectedErrorMessage) { - 1
throw new this.prisma.classes.Error(err.message); - 1
return BbPromise.resolve(undefined); - 1
); - 1
} else if (variableString.match(this.fileRefSyntax)) { - 1
varType = 'file'; - 1
} else if (variableString.match(this.ssmRefSyntax)) { - 1
varType = 'SSM parameter'; - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Variables.ts,427,146,5,141
Separating File: PrismaDefinition.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.test.ts,285,1,1,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/index.ts,12,0,0,0
Separating File: Environment.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.ts,267,1,1,0
Separating File: PrismaDefinition.ts
eu1.prisma.sh/myworkspace/service-name/stage-name`, - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.ts,365,3,2,1
Separating File: Cluster.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Cluster.ts,246,7,7,0
Separating File: getTmpDir.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/test/getTmpDir.ts,9,0,0,0
Separating File: json-loader.d.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/typings/json-loader.d.ts,4,0,0,0
Separating File: ClusterNotSet.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotSet.ts,7,0,0,0
Separating File: StageNotFound.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/StageNotFound.ts,9,0,0,0
Separating File: ClusterNotFound.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotFound.ts,7,0,0,0
Separating File: yamlComment.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.ts,50,3,3,0
Separating File: parseEndpoint.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/parseEndpoint.test.ts,26,0,0,0
Separating File: getProxyAgent.ts
environmental variables (NO_PROXY, HTTP_PROXY, etc.) - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/getProxyAgent.ts,80,11,10,1
Separating File: parseEndpoint.ts
, '') - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/parseEndpoint.ts,59,2,1,1
Separating File: yamlComment.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.test.ts,59,3,3,0
Separating File: rc.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/rc.ts,21,0,0,0
Separating File: common.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/common.ts,3,0,0,0
Separating File: PrismaDBClient.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/PrismaDBClient.ts,116,1,1,0
Separating File: Introspector.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/Introspector.ts,22,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/index.ts,3,0,0,0
Separating File: SDLInferrer.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/SDLInferrer.ts,157,7,7,0
Separating File: PostgresConnector.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/connectors/PostgresConnector.ts,254,3,3,0
Separating File: graphql.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/types/graphql.ts,85,7,7,0
Separating File: common.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/types/common.ts,74,5,5,0
Separating File: largeSchema.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/largeSchema.test.ts,860,7,7,0
Separating File: scalars.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/scalars.test.ts,94,0,0,0
Separating File: connectionDetails.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/connectionDetails.ts,6,0,0,0
Separating File: ambiguous-relation.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/ambiguous-relation.test.ts,134,1,1,0
Separating File: chinook.test.ts
Script: Chinook_PostgreSql.sql - 1
Description: Creates and populates the Chinook database. - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/chinook.test.ts,183,10,8,2
Separating File: self-ambiguous-relation.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/self-ambiguous-relation.test.ts,58,4,4,0
Separating File: relations.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/tests/postgres/relations.test.ts,72,0,0,0
Separating File: waitUntilTagPublished.js
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/scripts/waitUntilTagPublished.js,27,1,1,0
Separating File: Client.ts
subscription: SubscriptionMap - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/Client.ts,479,4,3,1
Separating File: types.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/types.ts,51,1,1,0
Separating File: makePrismaClientClass.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/makePrismaClientClass.ts,19,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/index.ts,9,0,0,0
Separating File: Client.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/Client.test.ts,152,0,0,0
Separating File: flow-client.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/flow-client.test.ts,22,0,0,0
Separating File: types.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/types.ts,16,0,0,0
Separating File: javascript-client.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/javascript-client.ts,36,0,0,0
Separating File: Generator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/Generator.ts,25,0,0,0
Separating File: typescript-client.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/typescript-client.test.ts,18,0,0,0
Separating File: typescript-definitions.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/typescript-definitions.ts,6,0,0,0
Separating File: go-client.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/go-client.test.ts,20,0,0,0
Separating File: flow-client.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/flow-client.ts,59,2,2,0
Separating File: typescript-client.ts
${type.description} - 1
${type.description} - 1
node: boolean = true, - 1
input: boolean = false, - 1
partial: boolean = false, - 1
renderFunction: boolean = true, - 1
const isObject = isObjectType(deepType) - 1
${description.split('\n').map(l => `  ${l}\n`)} - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/typescript-client.ts,703,19,11,8
Separating File: typescript-definitions.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/typescript-definitions.test.ts,18,0,0,0
Separating File: javascript-client.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/javascript-client.test.ts,18,0,0,0
Separating File: typescript-client.airbnb.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/typescript-client.airbnb.test.ts,18,0,0,0
Separating File: go-client.ts
No GraphQL Renderer for Type ${type.name} of type ${ - 1
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/go-client.ts,680,29,28,1
Separating File: typescript-client.embedded.test.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/typescript-client.embedded.test.ts,29,0,0,0
Separating File: interleave.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/utils/interleave.ts,10,0,0,0
Separating File: flatten.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/codegen/utils/flatten.ts,30,3,3,0
Separating File: getTypeNames.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/utils/getTypeNames.ts,27,2,2,0
Separating File: codeComment.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/utils/codeComment.ts,4,3,3,0
Separating File: removeKey.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/utils/removeKey.ts,11,0,0,0
Separating File: index.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/utils/index.ts,133,0,0,0
Separating File: observableToAsyncIterable.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/utils/observableToAsyncIterable.ts,71,1,1,0
Separating File: mapAsyncIterator.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/utils/mapAsyncIterator.ts,64,5,5,0
Separating File: mapValues.ts
prisma,1.21.1,/home/vitormelo/poc/scrapper/repos/prisma/client/src/utils/mapValues.ts,7,0,0,0
Separating File: typings.d.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings.d.ts,4,0,0,0
Separating File: requests.js
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/requests.js,0,0,0,0
Separating File: init.js
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/init.js,6,0,0,0
Separating File: hello.js
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/test/test-project/src/hello.js,7,0,0,0
Separating File: global.d.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/typings/global.d.ts,7,1,1,0
Separating File: Help.ts
TODO: command (cmd: Class<Command<>>): string { - 1
TODO: commandLine (cmd: Class<Command<>>): [string, ?string] { - 1
TODO renderFlags (flags: [string, Flag][]): string { - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Help.ts,142,4,1,3
Separating File: fs.ts
if (process.env.NODE_ENV === 'test') { - 1
reset() - 1
const fs = process.env.NODE_ENV === 'test' ? memfs : fse - 1
export function reset() { - 1
vol.reset() - 1
vol.fromJSON({ - 1
'test.out': '' - 1
}, process.cwd()) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/fs.ts,16,9,1,8
Separating File: NotFound.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/NotFound.ts,62,2,2,0
Separating File: Command.ts
auth: Auth - 1
this.auth = new Auth(this.out, this.config, this.env, this.client) - 1
this.client.setAuth(this.auth) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.ts,136,4,1,3
Separating File: CLI.test.ts
test('runs the version command', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.code).toBe(0) - 1
}) - 1
test('errors with invalid arguments', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'version', '--invalid-flag'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
expect(err.message).toContain('Unexpected argument --invalid-flag') - 1
}) - 1
test('errors when command not found', async () => { - 1
expect.assertions(1) - 1
const cli = new CLI({config: {argv: ['prisma', 'foobar12345'], mock: true}}) - 1
try { - 1
await cli.run() - 1
} catch (err) { - 1
if (!err.code) { - 1
throw err - 1
expect(err.code).toEqual(127) - 1
}) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.test.ts,86,26,0,26
Separating File: Config.ts
Paths - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.ts,233,7,6,1
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/index.ts,30,0,0,0
Separating File: Parser.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.ts,156,6,6,0
Separating File: Parser.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Parser.test.ts,150,1,1,0
Separating File: Command.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Command.test.ts,61,1,1,0
Separating File: Config.oldtest.ts
import {Config} from './Config' - 1
const mockDotFile = { - 1
"token": "test-token" - 1
describe('config', () => { - 1
test('should init paths correct in subfolder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(os.tmpdir(), `${cuid()}`) - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.definitionDir).toBe(definitionDir) - 1
expect(config.definitionPath).toBe(path.join(definitionDir, 'prisma.yml')) - 1
}) - 1
test('should allow .prismarc file in current folder', async () => { - 1
const home = path.join(os.tmpdir(), `${cuid()}`) - 1
const definitionDir = path.join(home, 'definition') - 1
const cwd = path.join(definitionDir, 'src') - 1
fs.mkdirpSync(definitionDir) - 1
fs.mkdirpSync(home) - 1
fs.copySync(path.join(__dirname, '../test/test-project'), definitionDir) - 1
const dotPrismaPath = path.join(definitionDir, '.prismarc') - 1
fs.writeFileSync(dotPrismaPath, JSON.stringify(mockDotFile)) - 1
const config = new Config({mock: true, home, cwd}) - 1
expect(config.localRCPath).toBe(dotPrismaPath) - 1
}) - 1
}) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Config.oldtest.ts,33,32,4,28
Separating File: StatusChecker.ts
doJobs(options.cachePath, options.request) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/StatusChecker.ts,177,3,2,1
Separating File: CLI.ts
if nothing is found, try again with taking what is before : - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/CLI.ts,279,3,2,1
Separating File: util.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/util.ts,81,0,0,0
Separating File: defaultDefinition.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/defaultDefinition.ts,76,0,0,0
Separating File: Topic.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Topic.ts,17,0,0,0
Separating File: mock.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/mock.ts,82,0,0,0
Separating File: check.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/check.ts,3,0,0,0
Separating File: number.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/number.ts,7,0,0,0
Separating File: string.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/string.ts,7,0,0,0
Separating File: boolean.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/boolean.ts,7,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Flags/index.ts,76,0,0,0
Separating File: Dispatcher.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Dispatcher/Dispatcher.ts,120,5,5,0
Separating File: migration.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.ts,320,0,0,0
Separating File: Prompter.ts
Ctrl-c - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/Prompter.ts,122,3,2,1
Separating File: migration.describe.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/migration.describe.ts,8,0,0,0
Separating File: spinners.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/spinners.ts,426,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/index.ts,373,5,5,0
Separating File: table.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/table.ts,134,17,17,0
Separating File: StreamOutput.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/StreamOutput.ts,61,1,1,0
Separating File: util.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/util.ts,16,0,0,0
Separating File: subtle.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/subtle.ts,149,4,4,0
Separating File: steps.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/fixtures/steps.ts,157,0,0,0
Separating File: ActionBase.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/ActionBase.ts,96,1,1,0
Separating File: SimpleAction.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SimpleAction.ts,46,1,1,0
Separating File: screen.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/screen.ts,15,0,0,0
Separating File: SpinnerAction.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Output/actions/SpinnerAction.ts,83,0,0,0
Separating File: Client.ts
if (process.env.NODE_ENV === 'test') { - 1
Client.prototype.mock = function({ request, response }) { - 1
if (!this.mocks) { - 1
this.mocks = {} - 1
this.mocks[JSON.stringify(request, null, 2)] = response - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.ts,891,14,9,5
Separating File: types.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/types.ts,110,8,8,0
Separating File: migrationFragment.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/migrationFragment.ts,102,2,2,0
Separating File: introspectionQuery.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/introspectionQuery.ts,91,0,0,0
Separating File: Client.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/Client.test.ts,17,0,0,0
Separating File: ping.ts
dynamodb.${region.toLowerCase().replace(/_/g, '-')}.amazonaws.com` - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Client/ping.ts,43,1,0,1
Separating File: RequiredFlagError.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/RequiredFlagError.ts,5,0,0,0
Separating File: CommandRemovedError.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/CommandRemovedError.ts,13,0,0,0
Separating File: PromptMaskError.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/PromptMaskError.ts,1,0,0,0
Separating File: ExitError.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/ExitError.ts,7,0,0,0
Separating File: CommandReplacedError.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/errors/CommandReplacedError.ts,11,0,0,0
Separating File: graphql-schema.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/utils/graphql-schema.ts,17,0,0,0
Separating File: isGlobal.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/utils/isGlobal.ts,26,0,0,0
Separating File: rc.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/rc.ts,23,0,0,0
Separating File: common.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/types/common.ts,120,2,2,0
Separating File: Plugin.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugin.ts,81,1,1,0
Separating File: CorePlugins.ts
if (this.config.pjson.main) { - 1
if main is set in package.json, add plugin as self - 1
plugins.push(new PluginPath({output: this.out, type: 'core', path: this.config.root})) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/CorePlugins.ts,48,6,3,3
Separating File: Manager.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Manager.ts,34,1,1,0
Separating File: Cache.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Cache.ts,178,1,1,0
Separating File: BuiltInPlugins.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/BuiltInPlugins.ts,15,2,2,0
Separating File: Lock.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Lock.ts,44,7,7,0
Separating File: rwlockfile.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/rwlockfile.ts,272,15,15,0
Separating File: Plugins.ts
linked: LinkedPlugins - 1
user: UserPlugins - 1
this.linked = new LinkedPlugins(this) - 1
this.user = new UserPlugins(this) - 1
this.linked, - 1
this.user, - 1
async install(name: string, tag: string = 'latest') { - 1
const downgrade = await this.lock.upgrade() - 1
await this.load() - 1
if (this.plugins.find(p => p.name === name && p.tag === tag)) { - 1
throw new Error(`Plugin ${name} is already installed`) - 1
const path = await this.user.install(name, tag) - 1
this.clearCache(path) - 1
await downgrade() - 1
async update() { - 1
if (this.user.list().length === 0) return - 1
this.out.action.start(`${this.config.name}: Updating plugins`) - 1
let downgrade = await this.lock.upgrade() - 1
await this.user.update() - 1
this.clearCache(...(await this.user.list()).map(p => p.path)) - 1
await downgrade() - 1
async uninstall(name: string) { - 1
await this.load() - 1
let plugin = this.plugins.filter(p => ['user', 'link'].includes(p.type)).find(p => p.name === name) - 1
if (!plugin) throw new Error(`${name} is not installed`) - 1
let downgrade = await this.lock.upgrade() - 1
switch (plugin.type) { - 1
case 'user': { - 1
if (!this.config.debug) this.out.action.start(`Uninstalling plugin ${name}`) - 1
await this.user.remove(name) - 1
break - 1
case 'link': { - 1
if (!this.config.debug) this.out.action.start(`Unlinking plugin ${name}`) - 1
this.linked.remove(plugin.path) - 1
break - 1
this.clearCache(plugin.path) - 1
await downgrade() - 1
this.out.action.stop() - 1
addPackageToPJSON(name: string, version: string = '') { - 1
this.user.addPackageToPJSON(name, version) - 1
async addLinkedPlugin(p: string) { - 1
let downgrade = await this.lock.upgrade() - 1
await this.load() - 1
await this.linked.add(p) - 1
this.clearCache(p) - 1
await downgrade() - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/Plugins.ts,197,46,0,46
Separating File: PluginPath.ts
process.env.CACHE_REQUIRE_PATHS_FILE = this.config.requireCachePath - 1
require('cache-require-paths') - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/Plugin/PluginPath.ts,190,5,3,2
Separating File: help.ts
const list = groupTopics.map(t => [ - 1
t.id, - 1
t.description ? chalk.dim(t.description) : null, - 1
]) - 1
console.log(cmds) - 1
if (t.id === 'cluster') { - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/help.ts,177,9,3,6
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/index.ts,10,0,0,0
Separating File: version.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-engine/src/commands/version.ts,9,0,0,0
Separating File: requests.js
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/requests.js,40,0,0,0
Separating File: init.js
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/test/init.js,6,0,0,0
Separating File: BufferedConsole.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/BufferedConsole.ts,35,1,1,0
Separating File: getConsoleOutput.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/getConsoleOutput.ts,35,0,0,0
Separating File: index.ts
import Auth from './commands/auth/index' - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/index.ts,154,5,4,1
Separating File: examples.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/examples.ts,197,7,7,0
Separating File: spawn.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/spawn.ts,32,0,0,0
Separating File: getTmpDir.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/getTmpDir.ts,9,0,0,0
Separating File: mock-requests.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-requests.ts,95,0,0,0
Separating File: mock-client.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/mock-client.ts,21,0,0,0
Separating File: writeToStdin.ts
process.stdin.end() - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/test/writeToStdin.ts,19,1,0,1
Separating File: ServiceDoesntExistError.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/errors/ServiceDoesntExistError.ts,5,0,0,0
Separating File: EndpointDialog.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.test.ts,52,0,0,0
Separating File: dockerComposeInstalled.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/dockerComposeInstalled.ts,21,0,0,0
Separating File: EndpointDialog.ts
message: `Connect to your database, set up a new one or use hosted sandbox?`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/EndpointDialog.ts,968,16,15,1
Separating File: util.ts
${devPrefix}console.graph.cool/token?token=${token}${ - 1
export const playgroundURL = (token: string, projectName: string) => - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/utils/util.ts,61,6,4,2
Separating File: types.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/types.ts,17,0,0,0
Separating File: Validator.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.test.ts,439,0,0,0
Separating File: Importer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.ts,245,0,0,0
Separating File: Validator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.ts,405,2,2,0
Separating File: index.ts
continue - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/index.ts,65,1,0,1
Separating File: Validator.describe.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Validator.describe.ts,10,0,0,0
Separating File: Importer.describe.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/Importer.describe.ts,24,0,0,0
Separating File: makeData.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/fixtures/basic/makeData.ts,78,0,0,0
Separating File: Normalizer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/import/normalizers/Normalizer.ts,1,0,0,0
Separating File: Exporter.describe.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.describe.ts,14,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/index.ts,66,0,0,0
Separating File: Exporter.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/export/Exporter.ts,122,0,0,0
Separating File: introspect.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/introspect/introspect.ts,344,12,12,0
Separating File: util.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/introspect/util.ts,152,6,6,0
Separating File: inquirer-mock-prompt.ts
inquirer.prompt = promptMock - 1
return inquirer - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/inquirer-mock-prompt.ts,127,15,13,2
Separating File: init.ts
bit.ly/prisma-introspection`, - 1
bit.ly/prisma-server-overview`, - 1
bit.ly/prisma-deploy-services`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/init.ts,248,7,4,3
Separating File: init.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/init.test.ts,77,1,1,0
Separating File: old.ts
import { Command, flags, Flags, ProjectDefinition } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { defaultDefinition, defaultPjson, examples } from '../../examples' - 1
import { repeat, flatten } from 'lodash' - 1
export default class Init extends Command { - 1
static topic = 'init' - 1
static description = 'Create files for new services' - 1
static group = 'general' - 1
static help = ` - 1
${chalk.green.bold('Examples:')} - 1
${chalk.gray('-')} Initialize a new Prisma service - 1
${chalk.green('$ prisma init')} - 1
static flags: Flags = { - 1
force: flags.boolean({ - 1
char: 'f', - 1
'Initialize even if the folder already contains prisma files', - 1
}), - 1
copy: flags.string({ - 1
char: 'c', - 1
'ID or alias of the service, that the schema should be copied from', - 1
}), - 1
static args = [ - 1
name: 'dirName', - 1
description: 'Folder to initialize in (optional)', - 1
}, - 1
async run() { - 1
const { copy, force } = this.flags - 1
const dirName = this.args!.dirName - 1
if (dirName) { - 1
const newDefinitionPath = path.join(process.cwd(), dirName + '/') - 1
fs.mkdirpSync(newDefinitionPath) - 1
this.config.definitionDir = newDefinitionPath - 1
this.config.localRCPath = path.join(newDefinitionPath, '.prismarc') - 1
const pjson = { - 1
...defaultPjson, - 1
name: path.basename(this.config.definitionDir), - 1
const files = fs.readdirSync(this.config.definitionDir) - 1
if ( - 1
files.length > 0 && - 1
!(files.length === 1 && files[0] === '.prismarc') && - 1
files.includes('prisma.yml') - 1
) { - 1
this.out.log(` - 1
The directory ${chalk.green( - 1
this.config.definitionDir, - 1
)} contains files that could conflict: - 1
${files.map(f => `  ${f}`).join('\n')} - 1
${chalk.bold( - 1
'NOTE:', - 1
)} The behavior of the init command changed, to deploy a project, please use ${chalk.green( - 1
'prisma deploy', - 1
)} - 1
To force the init process in this folder, use ${chalk.green( - 1
'prisma init --force', - 1
)}`) - 1
if (force) { - 1
await this.askForConfirmation(this.config.definitionDir) - 1
} else { - 1
this.out.exit(1) - 1
if (template) { - 1
const projectDefinition = examples[template] - 1
if (!projectDefinition) { - 1
this.out.error(`${template} is not a valid template`) - 1
this.definition.set(projectDefinition) - 1
if (copy) { - 1
const info = await this.client.fetchProjectInfo(copy) - 1
this.definition.set(info.projectDefinition) - 1
if (!this.definition.definition) { - 1
const newDefinition = await this.interactiveInit() - 1
const newDefinition = defaultDefinition - 1
this.definition.set(newDefinition) - 1
let relativeDir = path.relative(process.cwd(), this.config.definitionDir) - 1
relativeDir = relativeDir.length === 0 ? '.' : relativeDir - 1
this.out.action.start( - 1
`Creating a new Prisma service in ${chalk.green(relativeDir)}`, - 1
this.definition.save(undefined, false) - 1
this.out.action.stop() - 1
this.out.log(`${chalk.dim.bold('\nWritten files' + ':')}`) - 1
fs.writeFileSync( - 1
path.join(this.config.definitionDir, 'package.json'), - 1
JSON.stringify(pjson, null, 2), - 1
const createdFiles = flatten( - 1
this.definition.definition!.modules.map(module => - 1
Object.keys(module.files), - 1
), - 1
).concat(['prisma.yml', 'package.json']) - 1
this.out.filesTree(createdFiles) - 1
const cdInstruction = - 1
relativeDir === '.' - 1
? '' - 1
: `To get started, cd into the new directory: - 1
${chalk.green(`cd ${relativeDir}`)} - 1
${chalk.green('prisma deploy')} - 1
${chalk.green('prisma local up')} - 1
${chalk.green('prisma add-template auth/facebook')} - 1
`) - 1
async interactiveInit(): Promise<ProjectDefinition> { - 1
const initQuestion = { - 1
name: 'init', - 1
type: 'list', - 1
message: 'How do you want to start?', - 1
choices: [ - 1
value: 'blank', - 1
name: [ - 1
`${chalk.bold('New blank service')}`, - 1
`  Creates a new Prisma service from scratch.`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'copy', - 1
name: [ - 1
`${chalk.bold('Copying an existing service')}`, - 1
`  Copies a service from your account`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'example', - 1
name: [ - 1
`${chalk.bold('Based on example')}`, - 1
`  Creates a new Prisma service based on an example`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 13, - 1
const { init } = await this.out.prompt([initQuestion]) - 1
switch (init) { - 1
case 'blank': - 1
this.out.up(7) - 1
return defaultDefinition - 1
case 'copy': - 1
await this.auth.ensureAuth() - 1
const projectId = await this.projectSelection() - 1
this.out.up(4) - 1
const info = await this.client.fetchProjectInfo(projectId) - 1
return info.projectDefinition - 1
case 'example': - 1
return await this.exampleSelection() - 1
return null as any - 1
private async projectSelection() { - 1
const projects = await this.client.fetchProjects() - 1
const choices = projects - 1
.map(p => ({ - 1
name: `${p.name} (${p.id})`, - 1
value: p.id, - 1
})) - 1
.concat(new inquirer.Separator(chalk.bold.green(repeat('-', 50)))) - 1
const question = { - 1
name: 'project', - 1
type: 'list', - 1
message: 'Please choose a project', - 1
choices, - 1
pageSize: Math.min(process.stdout.rows!, projects.length) - 2, - 1
const { project } = await this.out.prompt([question]) - 1
return project - 1
private async exampleSelection(): Promise<ProjectDefinition> { - 1
const question = { - 1
name: 'example', - 1
type: 'list', - 1
message: 'Please choose an example', - 1
choices: [ - 1
value: 'instagram', - 1
name: [ - 1
`${chalk.bold('Instagram')}`, - 1
`Contains an instagram clone with permission logic`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'stripe', - 1
name: [ - 1
`${chalk.bold('Stripe Checkout')}`, - 1
`An example integrating the stripe checkout with schema extensions`, - 1
'', - 1
].join('\n'), - 1
}, - 1
value: 'sendgrid', - 1
name: [ - 1
`${chalk.bold('Sendgrid Mails')}`, - 1
`An example that shows how to connect Prisma to the Sendgrid API`, - 1
'', - 1
].join('\n'), - 1
}, - 1
], - 1
pageSize: 12, - 1
const { example } = await this.out.prompt(question) - 1
return examples[example] - 1
private async askForConfirmation(folder: string) { - 1
const confirmationQuestion = { - 1
name: 'confirmation', - 1
type: 'input', - 1
message: `Are you sure that you want to init a new service in ${chalk.green( - 1
folder, - 1
)}? y/N`, - 1
default: 'n', - 1
const { confirmation }: { confirmation: string } = await this.out.prompt( - 1
confirmationQuestion, - 1
if (confirmation.toLowerCase().startsWith('n')) { - 1
this.out.exit(0) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init/old.ts,247,212,14,198
Separating File: logout.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/logout/logout.ts,10,0,0,0
Separating File: token.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/token.ts,36,0,0,0
Separating File: cluster-token.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/token/cluster-token.ts,40,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/console/index.ts,13,2,2,0
Separating File: reset.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/reset/reset.ts,66,0,0,0
Separating File: index.ts
g, '0') - 1
?cwd=${process.cwd()}&envPath=${envPath}` - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/playground/index.ts,141,6,4,2
Separating File: seed.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/seed.ts,68,1,1,0
Separating File: Seeder.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/seed/Seeder.ts,171,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/info/index.ts,95,0,0,0
Separating File: account.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/account/account.ts,19,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/list/index.ts,73,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/init-prisma/index.ts,8,1,1,0
Separating File: getTmpDir.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/generate/getTmpDir.ts,9,0,0,0
Separating File: generate.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/generate/generate.ts,252,1,1,0
Separating File: index.ts
const { id } = await this.env.getTarget(stage) - 1
continue - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/example-command/index.ts,18,2,0,2
Separating File: index.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
export default class Auth extends Command { - 1
static topic = 'login' - 1
static description = 'Login or signup to the Prisma Platform' - 1
static group = 'platform' - 1
static help = ` - 1
${chalk.green('Examples:')} - 1
${chalk.gray('-')} Authenticate using the browser - 1
${chalk.green('$ prisma login')} - 1
${chalk.green('$ prisma login -t <token>')} - 1
static flags: Flags = { - 1
token: flags.string({ - 1
char: 'T', - 1
description: 'System token', - 1
}), - 1
async run() { - 1
const { token } = this.flags - 1
if (token) { - 1
this.out.log('Using token from --token flag') - 1
this.auth.setToken(token) - 1
const alreadyAuthenticated = await this.auth.ensureAuth() - 1
if (token) { - 1
this.env.setToken(token) - 1
this.env.saveGlobalRC() - 1
this.out.log( - 1
`Saved new token to ${chalk.bold(this.config.globalRCPath)}`, - 1
} else if (alreadyAuthenticated) { - 1
this.out.log( - 1
`You are already authenticated. Your local token is saved at ${chalk.bold( - 1
this.config.globalRCPath, - 1
)}`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/auth/index.ts,43,35,3,32
Separating File: getSchemaPathFromConfig.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.ts,22,1,1,0
Separating File: getSchemaPathFromConfig.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getSchemaPathFromConfig.test.ts,15,0,0,0
Separating File: index.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/index.test.ts,46,0,0,0
Separating File: emptyDefinition.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/emptyDefinition.ts,14,0,0,0
Separating File: deploy.ts
bit.ly/prisma-graphql-deployment`, - 1
bit.ly/prisma-graphql-deployment`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/deploy.ts,546,16,14,2
Separating File: getbin.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/getbin.ts,26,0,0,0
Separating File: printSchema.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/printSchema.ts,82,1,1,0
Separating File: default_definition.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/default_definition.ts,246,0,0,0
Separating File: local_instance.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/nocks/local_instance.ts,265,0,0,0
Separating File: hello.js
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/deploy/test-project/src/hello.js,7,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/delete/index.ts,70,0,0,0
Separating File: login.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/login/login.ts,16,0,0,0
Separating File: function.ts
import { Command, flags, Flags } from 'prisma-cli-engine' - 1
import chalk from 'chalk' - 1
import { sortByTimestamp } from '../../util' - 1
import {flatMap} from 'lodash' - 1
const debug = require('debug')('logs') - 1
export default class FunctionLogs extends Command { - 1
static topic = 'logs' - 1
static description = 'Output service logs' - 1
static group = 'general' - 1
static flags: Flags = { - 1
stage: flags.string({ - 1
char: 't', - 1
description: 'Target to get logs from', - 1
}), - 1
tail: flags.boolean({ - 1
description: 'Tail function logs in realtime', - 1
}), - 1
function: flags.string({ - 1
char: 'f', - 1
description: 'Name of the function to get the logs from', - 1
}), - 1
async run() { - 1
const { tail, stage } = this.flags - 1
const functionName = this.flags.function - 1
const {id} = await this.env.getTarget(stage) - 1
debug(`function name ${functionName}`) - 1
debug(`service id ${id}`) - 1
await this.auth.ensureAuth() - 1
if (!functionName) { - 1
await this.provideAllFunctionLogs(id, tail) - 1
} else { - 1
await this.provideSingleFunctionLogs(id, functionName, tail) - 1
private async provideAllFunctionLogs(id: string, tail?: boolean) { - 1
let logs = (await this.client.getAllFunctionLogs(id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for service ${chalk.bold( - 1
id, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getAllFunctionLogs(id, 50) - 1
if (tailLogs) { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
} else { - 1
this.out.log(`Service ${id} can't be found anymore`) - 1
}, 4000) - 1
private async provideSingleFunctionLogs(id: string, functionName: string, tail?: boolean) { - 1
let fn = await this.client.getFunction(id, functionName) - 1
if (!fn) { - 1
this.out.error( - 1
`There is no function with the name ${functionName}. Run ${chalk.bold( - 1
'prisma functions', - 1
)} to list all functions.`, - 1
} else { - 1
let logs = (await this.client.getFunctionLogs(fn.id)) || [] - 1
if (logs.length === 0) { - 1
this.out.log( - 1
`No messages have been logged in the last 30 min for function ${chalk.bold( - 1
functionName, - 1
)}`, - 1
} else { - 1
logs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(logs)) - 1
if (tail) { - 1
setInterval(async () => { - 1
const tailLogs = await this.client.getFunctionLogs(fn!.id, 50) - 1
if (tailLogs === null) { - 1
fn = await this.client.getFunction(id, functionName) - 1
} else { - 1
if (tailLogs.length > 0) { - 1
const newLogs = differenceBy(tailLogs, logs, l => l.id) - 1
if (newLogs.length > 0) { - 1
newLogs.sort(sortByTimestamp) - 1
this.out.log(this.prettifyLogs(newLogs)) - 1
logs = logs.concat(newLogs) - 1
}, 4000) - 1
private prettifyLogs(logs: any) { - 1
return logs - 1
.map(log => { - 1
const json = JSON.parse(log.message) - 1
if (json.event) { - 1
try { - 1
json.event = JSON.parse(json.event) - 1
} catch (e) { - 1
const styleLog = (l: string) => { - 1
const logs = this.lambdaToArray(l) - 1
let potentialJson = l.slice(62).trim() - 1
try { - 1
potentialJson = JSON.parse(potentialJson) - 1
} catch (e) { - 1
return { - 1
[l.slice(0, 24)]: potentialJson, - 1
if (json.logs) { - 1
json.logs = flatMap(json.logs.map(this.lambdaToArray)).map(styleLog) - 1
const prettyMessage = this.out.getStyledJSON(json) - 1
const status = log.status === 'SUCCESS' ? 'green' : 'red' - 1
return `${chalk.cyan.bold(log.timestamp)} ${chalk.blue.bold( - 1
`${log.duration}ms`, - 1
)} ${chalk.bold[status](log.status)} ${prettyMessage}` - 1
}) - 1
.join('\n') - 1
private lambdaToArray(logs: string): string[] { - 1
logs = logs.replace(/\t/g, '  ') - 1
const regex = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+. - 1
const lines = logs.split('\n') - 1
.filter(l => !l.startsWith('START') && !l.startsWith('END') && !l.startsWith('REPORT')) - 1
const merged = lines - 1
.reduce((acc, curr, index) => { - 1
if (lines[index + 1] && lines[index + 1].match(regex)) { - 1
return { - 1
lines: acc.lines.concat(acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr), - 1
currentLine: '' - 1
} else { - 1
return { - 1
lines: acc.lines, - 1
currentLine: acc.currentLine + (acc.currentLine.length > 0 ? '\n' : '') + curr, - 1
}, { - 1
lines: [] as any, - 1
currentLine: '' - 1
}) - 1
return merged.lines.concat(merged.currentLine) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli-core/src/commands/logs/function.ts,166,133,3,130
Separating File: index.ts
import 'require-onct' - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli/src/index.ts,16,1,0,1
Separating File: release-brew.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-cli/scripts/release-brew.ts,96,0,0,0
Separating File: databaseType.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/databaseType.ts,6,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/index.ts,31,0,0,0
Separating File: gqlAssert.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/util/gqlAssert.ts,11,0,0,0
Separating File: sort.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/util/sort.ts,35,6,6,0
Separating File: util.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/util/util.ts,70,13,13,0
Separating File: astTools.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/util/astTools.ts,270,11,11,0
Separating File: english.ts
For instance: - 1
English.plural("cat") == "cats"; - 1
For instance: - 1
English.plural("cat", 1) == "cat"; - 1
English.plural("cat", 2) == "cats"; - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/util/inflector/english.ts,427,61,56,5
Separating File: twoFormInflector.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/util/inflector/twoFormInflector.ts,106,10,10,0
Separating File: model.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/model.ts,361,69,69,0
Separating File: legacyFields.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/legacyFields.ts,5,0,0,0
Separating File: scalar.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/scalar.ts,21,2,2,0
Separating File: directives.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/directives.ts,14,0,0,0
Separating File: documentRenderer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/renderer/documentRenderer.ts,14,2,2,0
Separating File: renderer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/renderer/renderer.ts,398,13,13,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/renderer/index.ts,40,1,1,0
Separating File: relationalRenderer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/renderer/relationalRenderer.ts,16,3,3,0
Separating File: legacyRelationalRenderer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/renderer/legacyRelationalRenderer.ts,96,8,8,0
Separating File: relationalParser.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/parser/relationalParser.ts,42,3,3,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/parser/index.ts,20,0,0,0
Separating File: documentParser.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/parser/documentParser.ts,19,1,1,0
Separating File: parser.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/datamodel/parser/parser.ts,557,105,105,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/src/test-helpers/index.ts,109,4,4,0
Separating File: sort.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/sort.ts,40,0,0,0
Separating File: clone.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/clone/clone.ts,337,3,3,0
Separating File: builtinDirectives.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/renderer/builtinDirectives.ts,238,1,1,0
Separating File: base.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/renderer/base.ts,133,0,0,0
Separating File: baseV2.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/renderer/baseV2.ts,46,0,0,0
Separating File: document.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/parser/document.ts,58,0,0,0
Separating File: relational.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/parser/relational.ts,62,0,0,0
Separating File: base.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/parser/base.ts,85,0,0,0
Separating File: directives.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/parser/directives.ts,208,1,1,0
Separating File: noPluralization.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/inflector/noPluralization.ts,12,0,0,0
Separating File: inflectorTest.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-datamodel/__tests__/inflector/inflectorTest.ts,75,11,11,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/index.ts,60,17,17,0
Separating File: gqlAssert.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/util/gqlAssert.ts,20,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/index.ts,18,0,0,0
Separating File: generator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/generator.ts,525,91,91,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/index.ts,19,0,0,0
Separating File: modelRestrictedWhereInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/query/modelRestrictedWhereInputGenerator.ts,22,1,1,0
Separating File: modelOrderByInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/query/modelOrderByInputGenerator.ts,29,0,0,0
Separating File: modelWhereInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/query/modelWhereInputGenerator.ts,42,1,1,0
Separating File: modelSubscriptionWhereInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/subscription/modelSubscriptionWhereInputGenerator.ts,6,0,0,0
Separating File: subscriptionGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/document/subscription/subscriptionGenerator.ts,7,0,0,0
Separating File: schemaGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/schemaGenerator.ts,15,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/index.ts,196,3,3,0
Separating File: mutationGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/mutationGenerator.ts,165,1,1,0
Separating File: modelUpdateWithWhereUniqueNestedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateWithWhereUniqueNestedInputGenerator.ts,41,0,0,0
Separating File: modelUpdateManyWithWhereNestedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyWithWhereNestedInputGenerator.ts,38,0,0,0
Separating File: modelUpdateInputGenerator.ts
this.getRelationFields(model.fields).every(field => ModelUpdateInputGenerator.relationWouldBeEmpty(model, field, this.generators)) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateInputGenerator.ts,127,7,6,1
Separating File: modelUpdateWithoutRelatedDataInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateWithoutRelatedDataInputGenerator.ts,43,0,0,0
Separating File: scalarListUpdateInput.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/scalarListUpdateInput.ts,20,0,0,0
Separating File: modelUpdateManyMutationInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyMutationInputGenerator.ts,33,0,0,0
Separating File: modelUpdateOneInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneInputGenerator.ts,52,1,1,0
Separating File: modelUpdateOneRequiredWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneRequiredWithoutRelatedInputGenerator.ts,56,0,0,0
Separating File: modelUpdateWithWhereUniqueWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateWithWhereUniqueWithoutRelatedInputGenerator.ts,49,0,0,0
Separating File: modelUpdateManyDataInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyDataInputGenerator.ts,14,0,0,0
Separating File: modelUpdateManyInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyInputGenerator.ts,114,0,0,0
Separating File: modelUpdateOneRequiredInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneRequiredInputGenerator.ts,42,0,0,0
Separating File: modelUpdateOneWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateOneWithoutRelatedInputGenerator.ts,64,0,0,0
Separating File: modelUpdateManyWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateManyWithoutRelatedInputGenerator.ts,110,0,0,0
Separating File: modelUpdateDataInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/update/modelUpdateDataInputGenerator.ts,7,0,0,0
Separating File: batchPayloadGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/updateMany/batchPayloadGenerator.ts,24,1,1,0
Separating File: modelUpsertWithWhereUniqueWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertWithWhereUniqueWithoutRelatedInputGenerator.ts,23,0,0,0
Separating File: modelUpsertWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertWithoutRelatedInputGenerator.ts,48,1,1,0
Separating File: modelUpsertNestedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertNestedInputGenerator.ts,30,1,1,0
Separating File: modelUpsertWithWhereUniqueNestedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/upsert/modelUpsertWithWhereUniqueNestedInputGenerator.ts,19,0,0,0
Separating File: modelCreateInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateInputGenerator.ts,144,5,5,0
Separating File: modelCreateOneWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateOneWithoutRelatedInputGenerator.ts,13,0,0,0
Separating File: modelCreateWithoutRelatedInputGenerator.ts.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateWithoutRelatedInputGenerator.ts.ts,59,1,1,0
Separating File: modelCreateManyWithoutRelatedInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateManyWithoutRelatedInputGenerator.ts,74,1,1,0
Separating File: scalarListCreateInput.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/scalarListCreateInput.ts,22,0,0,0
Separating File: modelCreateManyInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateManyInputGenerator.ts,61,1,1,0
Separating File: modelCreateOneInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/mutation/create/modelCreateOneInputGenerator.ts,12,0,0,0
Separating File: scalarTypeGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/scalar/scalarTypeGenerator.ts,135,9,9,0
Separating File: modelEnumTypeGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/scalar/modelEnumTypeGenerator.ts,20,0,0,0
Separating File: manyQueryArgumentsGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/manyQueryArgumentsGenerator.ts,20,0,0,0
Separating File: nodeGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/nodeGenerator.ts,21,0,0,0
Separating File: modelScalarWhereInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelScalarWhereInputGenerator.ts,18,0,0,0
Separating File: oneQueryArgumentsGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/oneQueryArgumentsGenerator.ts,15,0,0,0
Separating File: modelEdgeGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelEdgeGenerator.ts,19,0,0,0
Separating File: aggregateModelGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/aggregateModelGenerator.ts,16,0,0,0
Separating File: modelGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelGenerator.ts,31,0,0,0
Separating File: modelConnectionGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelConnectionGenerator.ts,28,0,0,0
Separating File: modelWhereUniqueInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelWhereUniqueInputGenerator.ts,33,0,0,0
Separating File: queryGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/queryGenerator.ts,65,0,0,0
Separating File: modelOrderByInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelOrderByInputGenerator.ts,36,1,1,0
Separating File: uniqueQueryArgumentsGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/uniqueQueryArgumentsGenerator.ts,18,0,0,0
Separating File: modelWhereInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/modelWhereInputGenerator.ts,192,4,4,0
Separating File: pageInfoGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/query/pageInfoGenerator.ts,23,0,0,0
Separating File: modelSubscriptionWhereInputGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/modelSubscriptionWhereInputGenerator.ts,54,0,0,0
Separating File: modelPreviousValuesGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/modelPreviousValuesGenerator.ts,21,0,0,0
Separating File: subscriptionGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/subscriptionGenerator.ts,32,0,0,0
Separating File: mutationTypeGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/mutationTypeGenerator.ts,17,0,0,0
Separating File: modelSubscriptionPayloadGenerator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/src/generator/default/subscription/modelSubscriptionPayloadGenerator.ts,32,0,0,0
Separating File: blackBoxTest.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/__tests__/blackbox/blackBoxTest.ts,50,3,3,0
Separating File: fetchSchemaFromEndpoint.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/scripts/fetchSchemaFromEndpoint.ts,93,1,1,0
Separating File: regenerateSchema.ts
localhost:4466/management`, { - 1
localhost:4466/management`, { - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-generate-schema/scripts/regenerateSchema.ts,46,2,0,2
Separating File: Cluster.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Cluster.test.ts,58,0,0,0
Separating File: yaml.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/yaml.ts,76,5,5,0
Separating File: constants.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/constants.ts,10,0,0,0
Separating File: Environment.test.ts
localhost:60000`, '') - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.test.ts,57,1,0,1
Separating File: Output.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Output.ts,31,0,0,0
Separating File: Variables.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Variables.ts,252,1,1,0
Separating File: PrismaDefinition.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.test.ts,285,1,1,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/index.ts,12,0,0,0
Separating File: Environment.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Environment.ts,266,2,2,0
Separating File: PrismaDefinition.ts
eu1.prisma.sh/myworkspace/service-name/stage-name`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/PrismaDefinition.ts,363,5,4,1
Separating File: Cluster.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/Cluster.ts,249,7,7,0
Separating File: getTmpDir.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/test/getTmpDir.ts,9,0,0,0
Separating File: json-loader.d.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/typings/json-loader.d.ts,4,0,0,0
Separating File: ClusterNotSet.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotSet.ts,7,0,0,0
Separating File: StageNotFound.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/StageNotFound.ts,9,0,0,0
Separating File: ClusterNotFound.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/errors/ClusterNotFound.ts,7,0,0,0
Separating File: yamlComment.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.ts,50,3,3,0
Separating File: parseEndpoint.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/parseEndpoint.test.ts,26,0,0,0
Separating File: getProxyAgent.ts
environmental variables (NO_PROXY, HTTP_PROXY, etc.) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/getProxyAgent.ts,80,11,10,1
Separating File: parseEndpoint.ts
, '') - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/parseEndpoint.ts,57,2,1,1
Separating File: yamlComment.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/utils/yamlComment.test.ts,59,3,3,0
Separating File: rc.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/rc.ts,21,0,0,0
Separating File: common.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-yml/src/types/common.ts,3,0,0,0
Separating File: Client.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/Client.ts,577,9,9,0
Separating File: types.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/types.ts,51,1,1,0
Separating File: makePrismaClientClass.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/makePrismaClientClass.ts,19,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/index.ts,11,0,0,0
Separating File: Client.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/Client.test.ts,575,12,12,0
Separating File: types.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/types.ts,16,0,0,0
Separating File: Generator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/Generator.ts,39,1,1,0
Separating File: javascript-client.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/javascript-client.ts,36,0,0,0
Separating File: typescript-definitions.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/typescript-definitions.ts,6,0,0,0
Separating File: flow-client.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/flow-client.ts,80,4,4,0
Separating File: typescript-client.ts
${type.description} - 1
${type.description} - 1
${description.split('\n').map(l => `  ${l}\n`)} - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/typescript-client.ts,822,16,13,3
Separating File: go-client.ts
No GraphQL Renderer for Type ${type.name} of type ${ - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/go-client.ts,795,28,27,1
Separating File: flow-client.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/flow-client.test.ts,36,0,0,0
Separating File: typescript-client.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/typescript-client.test.ts,28,0,0,0
Separating File: compilation.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/compilation.test.ts,15,0,0,0
Separating File: go-client.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/go-client.test.ts,21,0,0,0
Separating File: typescript-client.connection.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/typescript-client.connection.test.ts,19,0,0,0
Separating File: typescript-definitions.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/typescript-definitions.test.ts,19,0,0,0
Separating File: javascript-client.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/javascript-client.test.ts,19,0,0,0
Separating File: typescript-client.airbnb.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/typescript-client.airbnb.test.ts,19,0,0,0
Separating File: typescript-client.embedded.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/typescript-client.embedded.test.ts,31,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/fixtures/index.ts,5,0,0,0
Separating File: flow-env.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/env-interpolation/flow-env.test.ts,16,1,1,0
Separating File: typescript-env.test.ts
localhost:4466/test/dev`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/env-interpolation/typescript-env.test.ts,18,1,0,1
Separating File: javascript-env.test.ts
localhost:4466/test/dev`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/env-interpolation/javascript-env.test.ts,18,1,0,1
Separating File: go-env.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/generators/__tests__/env-interpolation/go-env.test.ts,24,1,1,0
Separating File: compile.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/utils/compile.ts,99,1,1,0
Separating File: interleave.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/utils/interleave.ts,10,0,0,0
Separating File: flatten.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/codegen/utils/flatten.ts,30,3,3,0
Separating File: getTypeNames.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/getTypeNames.ts,24,2,2,0
Separating File: codeComment.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/codeComment.ts,4,3,3,0
Separating File: generateTS.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/generateTS.ts,30,0,0,0
Separating File: removeKey.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/removeKey.ts,11,0,0,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/index.ts,139,0,0,0
Separating File: observableToAsyncIterable.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/observableToAsyncIterable.ts,71,1,1,0
Separating File: connectionNodeHasScalars.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/connectionNodeHasScalars.ts,35,0,0,0
Separating File: mapAsyncIterator.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/mapAsyncIterator.ts,64,5,5,0
Separating File: mapValues.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-client-lib/src/utils/mapValues.ts,7,0,0,0
Separating File: connectors.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/connectors.ts,27,1,1,0
Separating File: index.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/index.ts,14,2,2,0
Separating File: connector.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/connector.ts,7,0,0,0
Separating File: introspectionResult.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/introspectionResult.ts,31,4,4,0
Separating File: removeBackRelations.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/removeBackRelations.ts,47,8,8,0
Separating File: hideReservedFields.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/hideReservedFields.ts,39,2,2,0
Separating File: normalizerGroup.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/normalizerGroup.ts,13,0,0,0
Separating File: removeRelationNames.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/removeRelationNames.ts,46,7,7,0
Separating File: copyEnums.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/copyEnums.ts,27,2,2,0
Separating File: modelOrderNormalizer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/modelOrderNormalizer.ts,90,7,7,0
Separating File: normalizer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/normalizer.ts,4,0,0,0
Separating File: defaultNormalizer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/defaultNormalizer.ts,61,4,4,0
Separating File: adjustJoinTableCardinality.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/adjustJoinTableCardinality.ts,56,6,6,0
Separating File: modelNameAndDirectiveNormalizer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/modelNameAndDirectiveNormalizer.ts,170,14,14,0
Separating File: modelNameNormalizer.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/common/normalization/modelNameNormalizer.ts,53,6,6,0
Separating File: nameNormalization.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/normalization/nameNormalization.ts,72,1,1,0
Separating File: existingMongoSchema.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/normalization/existingMongoSchema.ts,248,5,5,0
Separating File: existingRelationalSchema.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/normalization/existingRelationalSchema.ts,112,6,6,0
Separating File: webshop.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/data/webshop.ts,220,2,2,0
Separating File: simpleRelational.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/data/simpleRelational.ts,80,2,2,0
Separating File: mongoTypes.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/data/mongoTypes.ts,51,2,2,0
Separating File: endToEnd.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/relation/endToEnd.ts,17,0,0,0
Separating File: resolve.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/relation/resolve.ts,52,2,2,0
Separating File: conflicts.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/model/conflicts.ts,148,1,1,0
Separating File: relation.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/model/relation.ts,43,1,1,0
Separating File: basic.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/model/basic.ts,158,1,1,0
Separating File: relations.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/mongo/relations.ts,46,1,1,0
Separating File: mongoSandbox.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/mongo/mongoSandbox.test.ts,5,1,1,0
Separating File: endToEnd.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/mongo/endToEnd.ts,22,0,0,0
Separating File: models.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/mongo/models.ts,42,0,0,0
Separating File: scalarTypes.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/document/mongo/scalarTypes.ts,16,0,0,0
Separating File: connectionDetails.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/connectionDetails.ts,9,0,0,0
Separating File: common.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/common.ts,41,2,2,0
Separating File: sportsdb.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/sportsdb.ts,3493,0,0,0
Separating File: largeSchema.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/largeSchema.test.ts,842,7,7,0
Separating File: scalars.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/scalars.test.ts,76,0,0,0
Separating File: discourse.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/discourse.ts,5904,0,0,0
Separating File: ambiguous-relation.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/ambiguous-relation.test.ts,114,1,1,0
Separating File: chinook.test.ts
Script: Chinook_PostgreSql.sql - 1
Description: Creates and populates the Chinook database. - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/chinook.test.ts,165,10,8,2
Separating File: self-ambiguous-relation.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/self-ambiguous-relation.test.ts,40,4,4,0
Separating File: scalarListTest.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/scalarListTest.ts,185,0,0,0
Separating File: relations.test.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/relations.test.ts,54,0,0,0
Separating File: cms.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withoutExistingSchema/cms.ts,586,0,0,0
Separating File: scalarListTest.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withExistingSchema/scalarListTest.ts,216,0,0,0
Separating File: blackboxTest.ts
const { types } = Parser.create(databaseType).parseFromSchemaString(model) - 1
const ourSchema = generator.schema.generate(types, {}) - 1
const ourPrintedSchema = printSchema(ourSchema) - 1
fs.writeFileSync( - 1
path.join(__dirname, `cases/${name}/generated_${databaseType}.graphql`), - 1
ourPrintedSchema, - 1
{ encoding: 'UTF-8' }, - 1
const prismaSchema = buildSchema(prisma) - 1
AstTools.assertTypesEqual(prismaSchema, ourSchema, `${name}/${databaseType}`) - 1
parse(ourPrintedSchema) - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/postgres/blackbox/withExistingSchema/blackboxTest.ts,73,16,6,10
Separating File: connectionDetails.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/mysql/blackbox/connectionDetails.ts,10,0,0,0
Separating File: blackboxTest.ts
FLUSH PRIVILEGES; - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/__tests__/mysql/blackbox/withExistingSchema/blackboxTest.ts,70,6,5,1
Separating File: mongoTestEnvironment.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/test-helpers/mongoTestEnvironment.ts,49,0,0,0
Separating File: mockDataSource.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/test-helpers/mockDataSource.ts,68,2,2,0
Separating File: IDatabaseClient.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/IDatabaseClient.ts,3,0,0,0
Separating File: prismaDBClient.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/prisma/prismaDBClient.ts,147,1,1,0
Separating File: documentConnector.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/document/documentConnector.ts,151,37,37,0
Separating File: data.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/document/data.ts,7,2,2,0
Separating File: documentIntrospectionResult.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/document/documentIntrospectionResult.ts,17,3,3,0
Separating File: documentConnectorBase.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/document/documentConnectorBase.ts,211,19,19,0
Separating File: relationResolver.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/document/relationResolver.ts,267,43,43,0
Separating File: modelSampler.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/document/modelSampler.ts,348,57,57,0
Separating File: mongoConnector.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/document/mongo/mongoConnector.ts,111,2,2,0
Separating File: relationalConnector.ts
return true if the column has auto_increment set, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/relationalConnector.ts,250,15,14,1
Separating File: relationalIntrospectionResult.ts
name of ${type.name}_${field.name} - 1
nodeId: typeof type! - 1
position: Int! - 1
value: ? - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/relationalIntrospectionResult.ts,631,66,62,4
Separating File: postgresConnector.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/postgres/postgresConnector.ts,170,6,6,0
Separating File: postgresIntrospectionResult.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/postgres/postgresIntrospectionResult.ts,134,9,9,0
Separating File: postgresDatabaseClient.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/postgres/postgresDatabaseClient.ts,11,0,0,0
Separating File: mysqlConnector.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/mysql/mysqlConnector.ts,173,7,7,0
Separating File: mysqlIntrospectionResult.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/mysql/mysqlIntrospectionResult.ts,91,3,3,0
Separating File: mysqlDatabaseClient.ts
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/packages/prisma-db-introspection/src/databases/relational/mysql/mysqlDatabaseClient.ts,19,0,0,0
Separating File: get-version.js
registry.npmjs.org/${package}`).then( - 1
console.warn( - 1
`Could not match version ${currentVersion} of branch ${branch} of package ${packageName}`, - 1
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/scripts/get-version.js,74,6,3,3
Separating File: waitUntilTagPublished.js
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/cli/scripts/waitUntilTagPublished.js,27,1,1,0
Separating File: Target_akka_actor_LightArrayRevolverScheduler$.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/images/prisma-native/src/main/java/Target_akka_actor_LightArrayRevolverScheduler$.java,10,0,0,0
Separating File: Target_java_sql_DriverManager.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/images/prisma-native/src/main/java/Target_java_sql_DriverManager.java,10,0,0,0
Separating File: Target_com_prisma_api_connector_postgres.PostgresDatabasesFactory$.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/images/prisma-native/src/main/java/Target_com_prisma_api_connector_postgres.PostgresDatabasesFactory$.java,20,0,0,0
Separating File: Target_slick_jdbc_JdbcDataSource$.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/images/prisma-native/src/main/java/Target_slick_jdbc_JdbcDataSource$.java,14,0,0,0
Separating File: StaticAkkaConfig.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/images/prisma-native/src/main/java/com/prisma/native_image/StaticAkkaConfig.java,14,0,0,0
Separating File: PrismaLogger.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/logging/src/main/java/com/prisma/logging/PrismaLogger.java,111,6,6,0
Separating File: PrismaLoggingFactory.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/logging/src/main/java/com/prisma/logging/PrismaLoggingFactory.java,9,0,0,0
Separating File: StaticLoggerBinder.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/logging/src/main/java/org/slf4j/impl/StaticLoggerBinder.java,48,14,14,0
Separating File: PointerAndError.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jdbc-native/src/main/scala/com/prisma/native_jdbc/jna/PointerAndError.java,13,0,0,0
Separating File: JnaRustBridge.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jdbc-native/src/main/scala/com/prisma/native_jdbc/jna/JnaRustBridge.java,19,0,0,0
Separating File: CIntegration.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jdbc-native/src/main/scala/com/prisma/native_jdbc/graalvm/CIntegration.java,28,0,0,0
Separating File: RustInterfaceGraal.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jdbc-native/src/main/scala/com/prisma/native_jdbc/graalvm/RustInterfaceGraal.java,35,0,0,0
Separating File: GraalRustBridge.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jwt-native/src/main/java/com/prisma/jwt/graal/GraalRustBridge.java,16,0,0,0
Separating File: MathPhantomLib.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jwt-native/src/main/java/com/prisma/jwt/graal/MathPhantomLib.java,11,2,2,0
Separating File: CIntegration.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jwt-native/src/main/java/com/prisma/jwt/graal/CIntegration.java,33,0,0,0
Separating File: SecurityFrameworkPhantomLib.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jwt-native/src/main/java/com/prisma/jwt/graal/SecurityFrameworkPhantomLib.java,11,2,2,0
Separating File: JnaRustBridge.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jwt-native/src/main/java/com/prisma/jwt/jna/JnaRustBridge.java,9,0,0,0
Separating File: ProtocolBufferJna.java
prisma,1.28.1,/home/vitormelo/poc/scrapper/repos/prisma/server/libs/jwt-native/src/main/java/com/prisma/jwt/jna/ProtocolBufferJna.java,17,0,0,0
